(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> keyword can't be an expression (default.py, line 284)"
p3
sS'layer'
p4
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n#Import necessary modules\nimport flickrapi\nimport appy\nfrom datetime import datetime\n\nimport mechanize\nimport cookielib\n#Flickr API keys\nKEY = \'614fd86a34a00d38293c7e803d14c3ab\'\nSECRET_KEY = \'ad86826c3187eb4d\'\nUSER_ID = \'93142072@N05\'\n\n#Create the static links to be passed in to the views\nheader = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\')), _href=URL(\'default\',\'index\')), _id="header")\nheader_archived = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\'))), _id="header")\nfooter = DIV(A("Home Page", _href=URL(\'default\',\'index\')), TD("------"), A("Log out", _href=URL(\'default\',\'user\', args=\'logout\')), _id="footer")\ncss = "/SeniorProject/static/css/bluestyle.css"\n    \nif not db(db.PhotoToken).isempty():\n    tok = (db.PhotoToken(db.PhotoToken.id>0)).token\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #create a flickr object\nelse:\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n\n#Returns the current user (object) of the site\ndef getUser():\n    user = None\n    if auth.user != None:\n        user = db(db.auth_user.id == auth.user.id).select().first()\n    return user\n\n\nif auth.user != None:\n    record = auth.user.id     #Gets the info for the current user\n    myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\nelse: \n    myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n#Returns the form that will be displayed when the "My Profile" tab is clicked (the paratmeter passed in is a user object)\ndef getProfileFormForUser(user):\n    if user != None:        #We will display the form with the user\'s current information filled in\n        record = user.id    #Gets the info for the current user    \n        myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    else:                   #Display the form with no fields filled in \n        myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    return myProfileForm\n\ndef getProjectsForUser(user):\n    projects = []\n    if user != None and user.projects != None:\n        if auth.has_membership(user_id=user.id, role="Admin"):\n            projects = db(db.Project.archived == False).select()\n        else:\n            for item in user.projects:\n                rows = db((db.Project.archived == False) & (db.Project.projNum == item)).select()\n                if len(projects) ==0:\n                    projects = rows\n                else:\n                    projects= projects & rows   \n    return projects\n\n#Checks if the current token is valid; if not, then redirects to flickr to be authenticated and get a token\ndef setUpFlickrStuff():   \n    if not db(db.PhotoToken).isempty():                                #We already have a PhotoToken, so use the token when creating a flickr object\n        tok = (db.PhotoToken(db.PhotoToken.id > 0)).token              #Get the token from the database\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #Create a flickr object\n    else:\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n    \n    if not db(db.PhotoToken).isempty():\n        #We have a token, but it might not be valid\n        #Check the token. If there was an error, then delete the token from the database\n        try:\n            flickr.auth_checkToken() \n        except flickrapi.FlickrError:\n            db(db.PhotoToken.id > 0).delete()\n    if db(db.PhotoToken).isempty():                 #We don\'t have the token yet, or it was deleted because it wasn\'t valid\n        if request.vars.frob:                       #If the frob is in the request (coming back from being authenticated by flickr)\n            db.PhotoToken[0] = {"token" : flickr.get_token(request.vars.frob)}    #Insert a new row into the database with the new token\n        else:\n            url = flickr.web_login_url(\'write\')     #Get the url to go to in order to authenticate\n            br = mechanize.Browser()\n            # Browser options\n            br.set_handle_equiv(True)\n            br.set_handle_gzip(True)\n            br.set_handle_redirect(True)\n            br.set_handle_referer(True)\n            br.set_handle_robots(False)\n\n            # Cookie Jar\n            cj = cookielib.LWPCookieJar()\n            br.set_cookiejar(cj)\n    #Returns all the non-archived projects the specified user is associated with (the parameter passed in is a user object)\n\n\n            # Follows refresh 0 but not hangs on refresh > 0\n            br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n            r = br.open(url)\n            br.select_form("login_form")\n            br.form["login"]="alyssealyssetest"\n            br.form["passwd"]="finholt1"\n            br.find_control(".persistent").items[0].selected=True\n            br.submit()                                 #Redirect to that website\n            \n            \n#Do all the set-up/initializing that is necessary for using the site (calling the above functions)   \nuser = getUser()                            #Get the current user of the site\nprojects = getProjectsForUser(user)         #Get the projects that the user is associated with\nmyProfileForm = getProfileFormForUser(user) #Get the form for the "My Profile" tab\nsetUpFlickrStuff()                          #Make sure all the flickr stuff is good to go (make sure we\'re authenticated)\n\n\n#Called when a new photoForm is submitted (called from showform when the photoForm is accepted)\ndef uploadPhotoToFlickr(photoForm):\n    #Get the info from the submitted photo form\n    photoWeb2pyId = photoForm.vars.id\n    projNum = photoForm.vars.projectNum\n    title = photoForm.vars.title\n    descr = photoForm.vars.description\n    name = "applications/SeniorProject/uploads/" + photoForm.vars.photo\n    \n    #Upload the photo to flickr and get the id of the photo in order to construct the url of the photo\n    idElement = flickr.upload(filename=name, title=title, description=descr)\n    id = idElement.find(\'photoid\').text\n    flickrUrl =  "http://www.flickr.com/photos/"+USER_ID+"/"+str(id)+"/"  \n\n    #Delete the corresponding row in our database (because we don\'t want to store the actual photo no our server)\n    db(db.Photos.id == photoWeb2pyId).delete()\n    \n    #Create a new row in our database with all the same info as the deleted row, but without the photo file\n    db.Photos.insert(projectNum=projNum, flickrURL=flickrUrl, title=title, description=descr)\n\n#Returns a dictionary used by the view default/index.html (which is the home screen)\n@auth.requires_login()\ndef index():\n    #response.flash = "Welcome " + auth.user.first_name + "!"    #Welcome the user to the site\n    response.flash = "Erik Smellz"\n    projectNums = []                                            #Get the project numbers of all the projects the user is associated with\n    for project in projects:\n        projectNums.append(project.projNum) \n    \n    #Get all the newsfeed entries for the user\'s projects, ordering by time created (most recent entry listed first)\n    entries = db(db.NewsFeed.projectNum.belongs(projectNums)).select(orderby=~db.NewsFeed.created_on)\n    \n    if entries == None or len(entries) == 0:                    #If there aren\'t any entries, set entries to None (this is checked in the View)\n        entries = None\n    elif len(entries) > 20:\n        entries = entries[0:20]                                 #Only display the first 20 newsfeed entries on the homescreen\n    \n    return dict(projects=projects,\n                myProfileForm=myProfileForm,\n                header=header,\n                footer=footer,\n                css=css,\n                entries=entries)\n\n#Created by web2py\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth(), header=header, footer=footer, css=css)\n\n#Created by web2py\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n#Created by web2py\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n#Created by web2py\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud(), css=css, footer=footer)\n\n#This is called when an admin clicks "Create User". It returns a dictionary used by the view default/regiser.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef register():\n    form = SQLFORM(db.auth_user)                                            #Create a form with the fields for a user\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.first_name) + \' created as user\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a user\'\n       \n    if form.validate():                                                     #Add the new user with membership in the General group (rather than Admin)\n        admin_user = auth.user\n        auth.get_or_create_user(form.vars)\n        auth.add_membership(auth.id_group(role="General"),auth.user_id)\n        auth.user = admin_user\n        redirect(URL(\'default\',\'register\'))                                 #Redirect to the same screen so the admin can create more users if needed\n        \n    return dict(form=form, header=header, footer=footer, css=css)\n\n#This is called when an admin clicks "User Permissions". It returns a dictionary used by the view default/changepermissions.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef changepermissions():\n     #Get all the users in alphabetical order, except the current user (don\'t want a user to change his own permissions)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)     \n     #Represent the user\'s id as a dropdown with the values of Admin or General, with the current value as the user\'s current group membership\n     db.auth_user.id.represent = lambda id: SELECT(getUserRole(id), XML(getOtherRoles(id)), _name=\'%i\'%id) \n     #Create a table with all the users and their current memberships\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Change Permission","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\'))\n \n     if table.accepts(request.vars): \n        for item in request.vars.keys():               #For each user selected..\n            if item.isdigit():\n                if not auth.has_membership(user_id=int(item), role=request.vars[item]):\n                    if auth.has_membership(user_id=int(item), role=getUserRole(int(item))): #in case they are in their individual user group. We should only delete them from the group we are in if they are switching from General to Admin or vice versa.\n                        auth.del_membership(auth.id_group(role=getUserRole(int(item))),int(item))\n                    auth.add_membership(auth.id_group(role=request.vars[item]),int(item)) #Add the user\'s membership\n                    \n        session.flash = \'Permissions changed\'\n        redirect(URL(\'default\',\'changepermissions\'))    #Redirect to the same screen so the admin can see the current permission level of every user\n        \n     elif table.errors:\n         session.flash = \'An error has occured\'\n     else:\n         session.flash = \'Modify user permissions\'\n     \n     return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Add Users to Projects". It returns a dictionary used by the view default/addtoproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef addtoproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)        #Get all the users of the site (in alphabetical order)\n    #Represent the user\'s id as checkboxes of possible projects for the user to be added to\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getAllProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Add To","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\')) \n    \n    if table.accepts(request.vars):\n        for userid in request.vars.keys():           #For each user selected..\n            if userid.isdigit():\n                projectList = db(auth_user.id = int(userid)).select().first().projects\n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projectList.append(int(item))\n                else:\n                    projectList.append(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projectList)\n        redirect(URL(\'default\',\'addtoproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete Users from Projects". It returns a dictionary used by the view default/deletefromproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef deletefromproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)    #Get all the users of the site (in alphabetical order)\n    #Represents the user\'s id as checkboxes of all the user\'s associated projects\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getUsersProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove From","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\')) \n   \n    if table.accepts(request.vars): \n        for userid in request.vars.keys():                                    #For each user selected..\n            if userid.isdigit():\n                user = db(db.auth_user.id ==int(userid)).select().first()\n                projects = user.projects\n                \n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projects.remove(int(item))\n                else:\n                    projects.remove(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projects)\n        redirect(URL(\'default\',\'deletefromproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete User". It returns a dictionary used by the view default/deleteusers.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef deleteusers():\n     #Get all the users on the site in alphabetical order, except the current user (don\'t want someone to delete himself)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)  \n     db.auth_user.id.represent = lambda id: DIV(id, INPUT (_type=\'checkbox\',_name=\'%i\'%id)) #Create a checkbox for each user\n     #Create a table of the information\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove User","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\'))\n     \n     if table.process().accepted:\n       response.flash = str(request.vars.first_name) + \' deleted as user\'\n     elif table.errors:\n       response.flash = \'Form has errors\'\n     else:\n       response.flash = \'Select users to delete\'\n     \n     if table.accepts(request.vars): \n        for item in request.vars.keys():                     #For each user selected..\n            if item.isdigit():\n                db(db.auth_user.id == int(item)).delete()    #Delete the user that was selected\n                \n        session.flash = \'User deleted\'\n        redirect(URL(\'default\',\'deleteusers\'))               #Redirect back to the same screen\n\n     return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Add Project". It returns a dictionary used by the view default/createproject.html \n@auth.requires_login()    \n@auth.requires_membership(\'Admin\')\ndef createproject():\n    #Create a form for inserting a new project into the database\n    form = SQLFORM(db.Project, labels={\'projNum\':\'Project Number\', \'openDate\':\'Open Date\', \'closedDate\':\'Closed Date\'})\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.name) + \' has been created\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a project\'\n       \n    return dict(form=form, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Manage Projects". It returns a dictionary used by the view default/manageprojects.html\n@auth.requires_login()   \n@auth.requires_membership(\'Admin\')\ndef manageprojects():\n    table = None\n    rows = db(db.Project.archived == False).select() #Get all the non-archived projects\n    \n    if len(rows) == 0:\n        table = "There are currently no non-archived projects"\n        \n    else:   #There is at least one on-going project\n        db.Project.id.represent = lambda id: DIV(id, INPUT(_type=\'checkbox\',_name=\'%i\'%id)) #Represent the project id as a checkbox\n        #Create a table of all the non-archived projects, each with a checkbox for the option to archive\n        table = FORM(SQLTABLE(rows, columns=["Project.id","Project.name","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.id":"Archive","Project.name":"Project Name","Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}), INPUT(_type=\'submit\')) \n        \n        if table.process().accepted:\n           response.flash = str(request.vars.name) + \' has been archived\'\n        elif table.errors:\n           response.flash = \'Form has errors\'\n        else:\n           response.flash = \'Select a project to archive\'\n        \n        if table.accepts(request.vars):\n            for pID in request.vars.keys():                             #For each project that we want to archive..\n                if pID.isdigit():\n                    db(db.Project.id == int(pID)).update(archived=True) #Set archived=True for the project and update the database\n                    \n            redirect(URL(\'default\',\'manageprojects\'))                   #Redirect to the same screen\n            \n    return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Archived Projects". It returns a dictionary used by the view default/archiveprojects.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef archiveprojects():\n    table = None\n    rows = db(db.Project.archived == True).select()                #Get all the archived projects\n    \n    if len(rows) == 0:\n        table = "There are no projects that have been achived."\n        \n    else:                                                          #There is at least one archived project\n        #This column contains the option to view a project when "View" is clicked. It opens a new tab to display the selected project                                                      \n        extracolumn = [{\'label\':\'View Archived Project\', #label of the entirecolumn\n                        \'class\': \'\', #class name of the header\n                        \'width\': \'\', #width in pixels or %\n                        \'content\': lambda row, rc: A("View", _href=URL(\'default\',\'viewArchive\', args=row.id), _target=\'new\'), #what goes in each row\n                        \'selected\': False #aggregate class selected to this column\n                       }]\n        #Create a table of the archived projects, with the rightmost column containing the extracolumn\n        table = SQLTABLE(rows, columns=["Project.name","Project.owner","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.name":"Project Name", "Project.owner":"Owner", "Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}, extracolumns=extracolumn)\n    \n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "View" on the Archived Projects screen. It returns a dictionary used by the view default/viewArchive.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef viewArchive():\n    #Get the archived project that the user wants to view (the "archivedprojects" method puts the project id in args)\n    project = db(db.Project.id == request.args(0)).select().first()  \n    return dict(project=project, header=header_archived, css=css)\n\n#This is called when a user clicks on "News Feed" for a project in the sidebar. It returns a dictionary used by the view default/newsfeed.html\n@auth.requires_login()\ndef newsfeed():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Create an SQLFORM for the user to make a new status update\n    form = SQLFORM(db.NewsFeed, labels={\'description\':\'New Status Update\'}, fields=[\'description\'])\n    form.vars.projectNum = request.vars.projectNum                        #Initialize the project number to be the current project\'s number\n    form.vars.type = "human"                                              #Initialize the type to be" human"\n    form.vars.created_on = datetime.today()                               #Initialize the time created to be the current date and time\n    form.vars.creator = auth.user.first_name + " " + auth.user.last_name  #Initiaize the creator to be the current user\n    \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Status created successfully\')\n        elif form.errors:\n            response.flash = \'Form has errors\'\n                \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on) \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None\n        \n    return dict(form=form, entries=entries, fullTable=True, project=project, projects=projects, myProfileForm=myProfileForm, header=header, footer=footer, css=css)\n\n#This is called when a user clicks on "News Feed" on an archived project\'s sidebar. It returns a dictionary used by the view default/newsfeedarchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef newsfeedarchived():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on)   \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None   \n        \n    return dict(entries=entries, fullTable=True, project=project, header=header_archived, css=css)  \n\n#This is called when a user clicks on any of the tabs (to upload/generate a new document). It returns a dictionary used by the view default/showform.html\n@auth.requires_login() \ndef showform():\n    displayForm = request.vars.displayForm                                       #Get the type of form we want to display\n    form = None                                                                  #The SQLFORM that we will display\n    \n    if displayForm == "CCD":\n        #Create a form with all the CCD fields\n        form = SQLFORM(db.CCD, labels={\'ccdNum\':\'CCD #\',\'projectNum\': "Project #"}) \n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()    #Get all the CCD\'s for the current project\n        form.vars.ccdNum = len(rows) + 1               #Initialize the form\'s CCD number to be one more than the current number of CCDs               \n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "RFI":\n        #Create a dropdown of all the users\' names for the Request Referred To field\n        db.RFI.reqRefTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a form with the RFI fields specified by the fields parameter\n        form = SQLFORM(db.RFI, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\'}, fields=[\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'sheetName\', \'grids\', \'specSection\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\'])\n        \n        currentProj = db(db.Project.projNum == str(request.vars.projectNum)).select().first()\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()    #Get all the RFI\'s for the current project       \n        form.vars.rfiNum = len(rows) + 1               #Initialize the form\'s RFI number to be one more than the current number of RFIs\n        form.vars.requestBy = auth.user.first_name + " " + auth.user.last_name #Initialize the form\'s RequestBy field to be the current user\n        form.vars.statusFlag = "Outstanding"           #Set the status flag (this field isn\'t displayed on the screen)\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number \n        form.vars.projectName = currentProj.name       #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n                \n    elif displayForm == "Submittal":\n        #Create a dropdown for the submittal type\n        db.Submittal.subType.requires = IS_IN_SET([\'Samples\',\'Shop Drawing\',\'Product Data\'])\n        #Create a dropdown of all the users\' names for the Assigned To field\n        db.Submittal.assignedTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a dropdown for the status flag\n        db.Submittal.statusFlag.requires = IS_IN_SET([\'Approved\',\'Resubmit\',\'Approved with Comments\',\'Submitted for Review\'])\n        #Create a form with all the submittal fields\n        form = SQLFORM(db.Submittal, labels={\'statusFlag\':\'Status Flag\', \'projectNum\':\'Project Number\', \'subType\':\'Submittal Type\', \'sectNum\':\'Section Number\',\'assignedTo\':\'Assigned to\'}) \n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "ProposalRequest":  \n        #Create a form with the Proposal Request fields specified by the fields parameter   \n        form = SQLFORM(db.ProposalRequest, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[ \'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\'])\n        \n        currentProj = db(db.Project.projNum == str(request.vars.projectNum)).select().first()\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the ProposalRequests for the current project\n        form.vars.reqNum = len(rows) + 1               #Initialize the request number to be one more than the current number of proposal requests\n        form.vars.statusFlag = "Open"                  #Set the status flag (this field isn\'t displayed on the screen)       \n        form.vars.creator = auth.user.id               #Initialize the creator to be the current user\'s id (this field also isn\'t displayed)\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        form.vars.projectName = currentProj.name   #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n        \n    elif displayForm == "Proposal":\n        propReqs = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select()\n        propNumList = []\n        for propReq in propReqs:\n            propNumList.append(propReq.reqNum)                   #Get all the Proposal Request numbers for the project\n        db.Proposal.propReqRef.requires = IS_IN_SET(propNumList) #Create a dropdown for the Proposal Request Reference #\n        #Create a form with all the Proposal fields \n        form = SQLFORM(db.Proposal, labels={\'propNum\':\'Proposal #\', \'propReqRef\':\'Proposal Request Reference #\', \'projectNum\':\'Project Number\', \'propDate\':\'Proposal Date\'})\n        \n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select() #Get all the Proposals for the current project\n        form.vars.propNum = len(rows) + 1              #Initialize the proposal number to be one more than the current number of proposals\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "MeetingMinutes":\n        #Create a form with all the MeetingMinutes fields\n        form = SQLFORM(db.MeetingMinutes, labels={\'projectNum\':\'Project Number\',\'meetDate\':\'Meeting Date\'})\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "Photo": \n        #Create a form with the Photo fields specified by the fields parameter                     \n        form = SQLFORM(db.Photos, labels={\'projectNum\':\'Project Number\', \'title\':\'Title\', \'description\':\'Description\', \'photo\':\'Photo\'}, fields = [\'projectNum\',\'title\',\'description\',\'photo\'])\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Form accepted\')\n            if displayForm == "Photo":    #If the form submitted is a photo form, we need to upload it to flickr and delete the photo from our database\n                uploadPhotoToFlickr(form)\n            elif displayForm == "RFI":    #If the form submitted is an RFI form, we need to put the name of person the RFI is referred to instead of the id\n                reqUser = db(db.auth_user.id == form.vars.reqRefTo).select().first()\n                row = db(db.RFI.id == form.vars.id).select().first()\n                row.update_record(reqRefTo = reqUser.first_name + " " + reqUser.last_name)\n            elif displayForm == "Submittal": #If the form submitted is a Submittal, we need to put the name of person it is assigned to instead of the id\n                assignTo = db(db.auth_user.id == form.vars.assignedTo).select().first()\n                row = db(db.Submittal.id == form.vars.id).select().first()\n                row.update_record(assignedTo= assignTo.first_name + " " + assignTo.last_name)\n                \n            #Now create a new newsfeed update noting the new submission\n            if displayForm == "MeetingMinutes":\n                displayForm = "Plan for World Domination"\n            description = "A new " + displayForm + " has been added."\n            db.NewsFeed.insert(projectNum=form.vars.projectNum, type="document", created_on=datetime.today(), description=description, creator=auth.user.first_name + " " + auth.user.last_name)\n            db.commit()\n            \n        elif form.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(displayForm=displayForm,\n                form=form,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                footer=footer,\n                header=header,\n                css=css)\n\n#This is called when a user clicks on a categry in an archived project\'s sidebar. It returns a dictionary used by the view default/formtablearchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\') \ndef formtablearchived():\n    formType = request.vars.formType                                              #Get the type of table to display\n    project =  db(db.Project.projNum == request.vars.projectNum).select().first() #Get the archived project that is currently being viewed\n    table = None                                                                  #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                              #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()     #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]           #Set the CCD\'s file URL\n        #Create a table of the CCDs, displaying the values given by the columns parameter\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'],headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"},upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()     #Get all the RFIs for the current project\n        #Represent the RFI number as a link to view the RFI\n        db.RFI.rfiNum.represent = lambda rfiNum: A(str(rfiNum), _href=URL("default","create_odt",args=[int(rfiNum)]),_target="_blank")\n        #Create a table of the RFIs\n        table = SQLTABLE(rows, _width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseDate"], \n            headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To","RFI.responseDate":"Response Date"})\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select() #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]   #Set the Submittal\'s file URL\n        #Create a table of the Submittals \n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.subType","Submittal.sectNum","Submittal.submittal"], \n            headers={"Submittal.assignedTo":"Assigned To","Submittal.subType":"Type","Submittal.sectNum":"Section Number",\n            "Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.sentTo","ProposalRequest.propDate"],\n            headers={"ProposalRequest.reqNum":"Request Number","ProposalRequest.amendNum":"Amendment Number",\n            "ProposalRequest.sentTo":"Sent To","ProposalRequest.propDate":"Proposal Request Date"})\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()  #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]             #Set the Proposal\'s file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"], \n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select() #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the Meeting Minute\'s file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"], \n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()         #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There were no documents uploaded for this project section."\n        fullTable = False\n\n    return dict(formType=formType,\n                project=project,\n                table=table,\n                header=header_archived,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on a category for a project in the sidebar. It returns a dictionary used by the view default/formtable.html\n@auth.requires_login()\ndef formtable():\n    formType = request.vars.formType                                                     #Get the type of table to display        \n    table = None                                                                         #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                                     #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()            #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the CCD file\'s URL\n        #myextracolumns = [{\'label\': \'CCD Thumbnail(for testing)\',\'class\':\'\',\'selected\':False, \'width\':\'\', \n        #    \'content\': lambda row, rc: IMG(_width="40",_height="40",_src=URL(\'default\',\'download\',args=row.file))}]\n        #Create a table of the CCDs\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'], headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()            #Get all the RFIs for the current project\n        #Create an extra column. If the user is the one who is supposed to reply to the RFI, then have a link in the column for the user to do so\n        extracolumn = [{\'label\':\'Reply to RFI\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Reply", _href=URL(\'default\',\'replyRFI\',args=row.id)) if auth.user.first_name +" " +\n                     auth.user.last_name == row.reqRefTo else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the RFIs, adding the extra "Reply to RFI" column on the far right\n        table = SQLTABLE(rows,_width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseBy","RFI.responseDate",\n            "RFI.statusFlag"], headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To",\n            "RFI.responseDate":"Response Date","RFI.responseBy":"Need Response By","RFI.statusFlag":"Status Flag"}, extracolumns=extracolumn)\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select()       #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]         #Set the Submittals\' file URL\n        #Create a table of the Submittals\n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.statusFlag","Submittal.subType","Submittal.sectNum","Submittal.submittal"],\n            headers={"Submittal.assignedTo":"Assigned To","Submittal.statusFlag":"Status Flag","Submittal.subType":"Type",\n            "Submittal.sectNum":"Section Number","Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create an extra column. If the user is the creator of the request, include a link with the option to change the status of the document \n        extracolumn = [{\'label\':\'Change Status\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Change", _href=URL(\'default\',\'changePropReq\',args=row.id)) if auth.user.id == row.creator else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.statusFlag",\n            "ProposalRequest.sentTo","ProposalRequest.propDate"], headers={"ProposalRequest.reqNum":"Request Number",\n            "ProposalRequest.amendNum":"Amendment Number","ProposalRequest.sentTo":"Sent To","ProposalRequest.statusFlag":"Status Flag",\n            "ProposalRequest.propDate":"Proposal Request Date"}, extracolumns=extracolumn)\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()        #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Proposals\' file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"],\n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select()  #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Meeting Minutes\' file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"],\n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()          #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There are no documents uploaded for this project section yet."\n        fullTable = False\n\n    return dict(formType=formType,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                table= table,\n                footer=footer,\n                header=header,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on "Reply to RFI" when on the RFI\'s formtable view. It returns a dictionary used by the view default/replyRFI.html\n@auth.requires_login()\ndef replyRFI():\n    id = request.args(0) #the id of the RFI\n    db.RFI.statusFlag.requires = IS_IN_SET([\'Outstanding\',\'Closed\']) #Make a dropdown for the status flag\n    \n    #Create the SQLFORM, filling in all the previously submitted information\n    replyRfiForm = SQLFORM(db.RFI, id, showid=False, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\', \'reply\':\'Reply\', \'responseDate\':\'Response Date\', \'statusFlag\':\'Status Flag\'}, fields = [\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'specSection\', \'sheetName\', \'grids\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\', \'reply\', \'responseDate\', \'statusFlag\'], _id="replyForm")\n    \n    if replyRfiForm != None:\n        if replyRfiForm.process().accepted:\n            row = db(db.RFI.id == id).select().first() #Get the RFI we\'re replying to\n            \n            #Update the RFI\'s reply and response date (but don\'t save any of the other fields -- want to keep the other fields read-only for this)\n            row.update_record(reply=str(replyRfiForm.vars.reply), responseDate=str(replyRfiForm.vars.responseDate))     \n            db.commit()   \n            \n            session.flash = T(\'RFI Reply Accepted\')  \n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'RFI\', projectNum=str(replyRfiForm.vars.projectNum))))  #Redirect to the RFI table                    \n        \n        elif replyRfiForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(replyRfiForm=replyRfiForm, css=css, header=header, footer=footer)\n\n#This is called when a user clicks on "Change Status" when on the Proposal Request\'s formtable view. It returns a dictionary used by the view default/changePropReq.html\n@auth.requires_login()\ndef changePropReq():\n    id = request.args(0)  #The id of the Proposal Request\n    db.ProposalRequest.statusFlag.requires = IS_IN_SET([\'Open\',\'Closed\'])          #Make a dropdown for the status flag  \n    #Create the SQLFORM, filling in all the previously submitted information\n    changePropReqForm = SQLFORM(db.ProposalRequest, id, showid=False, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'statusFlag\':\'Status\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[\'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\',\'statusFlag\'], _id="changePropReqForm")\n        \n    if changePropReqForm != None:\n        if changePropReqForm.process().accepted:\n            row = db(db.ProposalRequest.id == id).select().first()                 #Get the current Proposal Request\n            row.update_record(statusFlag = str(changePropReqForm.vars.statusFlag)) #Update the Proposal Request with the new status flag      \n            db.commit()   \n            session.flash = T(\'Status Change Accepted\')  \n            #Redirect to the Proposal Request table\n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'ProposalRequest\', projectNum=str(changePropReqForm.vars.projectNum))))                      \n        elif changePropReqForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(changePropReqForm=changePropReqForm, css=css, header=header, footer=footer)  \n\ndef viewPhoto():\n    br = mechanize.Browser()\n    # Browser options\n    br.set_handle_equiv(True)\n    br.set_handle_gzip(True)\n    br.set_handle_redirect(True)\n    br.set_handle_referer(True)\n    br.set_handle_robots(False)\n\n    # Follows refresh 0 but not hangs on refresh > 0\n    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n    r = br.open(request.vars["url"])\n    br.select_form("login_form")\n    br.form["passwd"]="finholt1"\n    import tkMessageBox\n    #tkMessageBox.showinfo(title="Greetings", message=str(br.form))\n    r = br.submit()\n    br.open(request.vars["url"])\n\n\n    \n    redirect(request.vars["url"])        \n\n#This returns a string of the opposite of the user\'s role (either Admin or General)\ndef getOtherRoles(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "General"\n    else:\n        return "Admin"\n\n#This returns a string of the user\'s role (either Admin or General)     \ndef getUserRole(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "Admin"\n    else:\n        return "General"\n\n#This is called by create_odt to get a dictionay of RFI data given the RFI number\ndef get_data(row_id):\n    import MySQLdb\n\n    db = MySQLdb.connect(host="10.24.6.23", user="seniorproj", passwd="web2py2012", db="finholt")\n    cur = db.cursor()\n\n    # Getting the rows from the database\n\n    cur.execute("SELECT * FROM RFI WHERE rfiNum = %s;",(row_id))\n    columns = cur.description\n    row = cur.fetchall()\n\n    dict = {}\n\n    for i in range(len(columns)):\n        dict[columns[i][0]] = row[0][i]\n\n    return dict\n\n#This creates the RFI document for viewing in the browser. It returns a dictionary used by the view default/create_odt.html\ndef create_odt():\n    import subprocess\n    import os\n    import time\n    appy = local_import(\'appy.pod.renderer\')\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'result.odt\')\n    subprocess.Popen("rm " + phpscript, shell=True)\n\n    # giving the program enough time to delete the old result.odt\n    time.sleep(1)\n \n    dictionary = get_data(request.args[0])\n\n    appyDict = {}\n    appyDict[\'rfiNumber\'] = dictionary[\'rfiNum\']\n\n    # Need to add database places for these and then add the dictionary\n    appyDict[\'project\'] = dictionary[\'projectName\']\n    appyDict[\'owner\'] = dictionary[\'owner\']\n\n    appyDict[\'requestBy\'] = dictionary[\'requestBy\']\n\n    dtSent = dictionary[\'dateSent\']\n    if dtSent != None:\n        appyDict[\'DateSent\'] = "%s/%s/%s" % (dtSent.month,dtSent.day,dtSent.year)\n    else:\n        appyDict[\'DateSent\'] = "None"\n\n    appyDict[\'requestReferredTo\'] = dictionary[\'reqRefTo\']\n\n    dtRec = dictionary[\'dateRec\']\n    if dtRec != None:\n        appyDict[\'DateReceived\'] = "%s/%s/%s" % (dtRec.month,dtRec.day,dtRec.year)\n    else:\n        appyDict[\'DateReceived\'] = "None"\n\n    appyDict[\'drawingNum\'] = dictionary[\'drawingNum\']\n\n    appyDict[\'detailNum\'] = dictionary[\'detailNum\']\n\n    appyDict[\'specNum\'] = dictionary[\'specSection\']\n    appyDict[\'sheetName\'] = dictionary[\'sheetName\']\n\n    appyDict[\'grids\'] = dictionary[\'grids\']\n    appyDict[\'sectionPage\'] = dictionary[\'sectionPage\']\n\n    appyDict[\'rfiDescription\'] = dictionary[\'description\']\n\n    appyDict[\'contractorSuggestion\'] = dictionary[\'suggestion\']\n\n    appyDict[\'reply\'] = dictionary[\'reply\']\n\n    appyDict[\'responseBy\'] = dictionary[\'responseBy\']\n\n    dtResp = dictionary[\'responseDate\']\n    if dtResp != None:\n        appyDict[\'responseDate\'] = "%s/%s/%s" % (dtResp.month,dtResp.day,dtResp.year)\n    else:\n        appyDict[\'responseDate\']\n\n    myfile = os.path.join(request.folder, \'static\',\'php\', \'rfiTemplate.odt\')\n    newfile = os.path.join(request.folder, \'static\',\'php\', \'result.odt\')\n    \n    renderer = appy.Renderer(myfile, appyDict, newfile)\n    renderer.run()\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'rfi.php\')\n    proc = subprocess.Popen("php " + phpscript, shell=True, stdout=subprocess.PIPE)\n    resp = proc.stdout.read()\n\n    return dict(html=HTML(\'\',XML(resp)))\n\n#Returns the html needed for the checkboxes on the addtoproject screen \ndef getAllProjectsHtml(id):\n    html=\'\'\n    projects = db(db.Project.archived == False).select()  #Get all the current non-archived projects\n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n\n    for row in projects:                                  #Find all the projects that the user is not already associated with\n        if user.projects != None:\n            if row.projNum not in user.projects:\n                html +=  \'<input value="\'+str(row.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.projNum)+"</br>"\n        else:\n            html +=  \'<input value="\'+str(row.id)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.id)+"</br>"\n    \n    if html ==\'\':                                         #The user is already associated with all the projects\n        html = "<p>In all projects</p>"\n        \n    return html \n\n#Returns the html needed for the checkboxes on the deletefromproject screen\ndef getUsersProjectsHtml(id):\n    html = \'\'    \n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n    \n    if user.projects != None and len(user.projects) >= 1: #Make a checkbox for all the projects that the user is associatewith\n        for projId in user.projects:\n            project = db((db.Project.archived == False) & (db.Project.projNum == projId)).select().first()\n            html +=  \'<input value="\'+str(project.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(project.projNum)+"</br>"\n    else:\n        html = "<p>Not on any projects</p>"\n        \n    return html\n\nresponse._vars=response._caller(addtoproject)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S"'projectList = db(auth_user.id = int(userid)).select().first().projects\\n'"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p37
sS'lineno'
p38
S'284'
p39
sS'msg'
p40
S'"keyword can\'t be an expression"'
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'("keyword can\'t be an expression", (\'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py\', 284, None, \'projectList = db(auth_user.id = int(userid)).select().first().projects\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'None'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S"keyword can't be an expression (default.py, line 284)"
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'SeniorProject'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
sbasbasbasbag69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g79
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
g94
g95
ssg83
g159
sg76
(lp166
S'body'
p167
asbag69
(g90
g71
NtRp168
(dp169
g74
(dp170
g101
g102
ssg83
g159
sg76
(lp171
S':'
asbag69
(g90
g71
NtRp172
(dp173
g74
(dp174
sg83
g159
sg76
(lp175
g69
(g70
g71
NtRp176
(dp177
g74
(dp178
g82
I5
ssg83
g172
sg76
(lp179
S'<cStringIO.StringO object at 0x101f69618>'
p180
asbasbasbag69
(g85
g71
NtRp181
(dp182
g74
(dp183
sg83
g79
sg76
(lp184
g69
(g90
g71
NtRp185
(dp186
g74
(dp187
g94
g95
ssg83
g181
sg76
(lp188
S'client'
p189
asbag69
(g90
g71
NtRp190
(dp191
g74
(dp192
g101
g102
ssg83
g181
sg76
(lp193
S':'
asbag69
(g90
g71
NtRp194
(dp195
g74
(dp196
sg83
g181
sg76
(lp197
g69
(g70
g71
NtRp198
(dp199
g74
(dp200
g82
I5
ssg83
g194
sg76
(lp201
S'127.0.0.1'
p202
asbasbasbag69
(g85
g71
NtRp203
(dp204
g74
(dp205
sg83
g79
sg76
(lp206
g69
(g90
g71
NtRp207
(dp208
g74
(dp209
g94
g95
ssg83
g203
sg76
(lp210
S'controller'
p211
asbag69
(g90
g71
NtRp212
(dp213
g74
(dp214
g101
g102
ssg83
g203
sg76
(lp215
S':'
asbag69
(g90
g71
NtRp216
(dp217
g74
(dp218
sg83
g203
sg76
(lp219
g69
(g70
g71
NtRp220
(dp221
g74
(dp222
g82
I5
ssg83
g216
sg76
(lp223
S'default'
p224
asbasbasbag69
(g85
g71
NtRp225
(dp226
g74
(dp227
sg83
g79
sg76
(lp228
g69
(g90
g71
NtRp229
(dp230
g74
(dp231
g94
g95
ssg83
g225
sg76
(lp232
S'cookies'
p233
asbag69
(g90
g71
NtRp234
(dp235
g74
(dp236
g101
g102
ssg83
g225
sg76
(lp237
S':'
asbag69
(g90
g71
NtRp238
(dp239
g74
(dp240
sg83
g225
sg76
(lp241
g69
(g70
g71
NtRp242
(dp243
g74
(dp244
g82
I5
ssg83
g238
sg76
(lp245
g69
(g78
g71
NtRp246
(dp247
g74
(dp248
g82
I4
ssg83
Nsg76
(lp249
g69
(g85
g71
NtRp250
(dp251
g74
(dp252
sg83
g246
sg76
(lp253
g69
(g90
g71
NtRp254
(dp255
g74
(dp256
g94
g95
ssg83
g250
sg76
(lp257
S'session_id_admin'
p258
asbag69
(g90
g71
NtRp259
(dp260
g74
(dp261
g101
g102
ssg83
g250
sg76
(lp262
S':'
asbag69
(g90
g71
NtRp263
(dp264
g74
(dp265
sg83
g250
sg76
(lp266
g69
(g70
g71
NtRp267
(dp268
g74
(dp269
g82
I4
ssg83
g263
sg76
(lp270
g69
(g78
g71
NtRp271
(dp272
g74
(dp273
g82
I3
ssg83
Nsg76
(lp274
g69
(g85
g71
NtRp275
(dp276
g74
(dp277
sg83
g271
sg76
(lp278
g69
(g90
g71
NtRp279
(dp280
g74
(dp281
g94
g95
ssg83
g275
sg76
(lp282
S'comment'
p283
asbag69
(g90
g71
NtRp284
(dp285
g74
(dp286
g101
g102
ssg83
g275
sg76
(lp287
S':'
asbag69
(g90
g71
NtRp288
(dp289
g74
(dp290
sg83
g275
sg76
(lp291
g69
(g70
g71
NtRp292
(dp293
g74
(dp294
g82
I3
ssg83
g288
sg76
(lp295
S''
asbasbasbag69
(g85
g71
NtRp296
(dp297
g74
(dp298
sg83
g271
sg76
(lp299
g69
(g90
g71
NtRp300
(dp301
g74
(dp302
g94
g95
ssg83
g296
sg76
(lp303
S'domain'
p304
asbag69
(g90
g71
NtRp305
(dp306
g74
(dp307
g101
g102
ssg83
g296
sg76
(lp308
S':'
asbag69
(g90
g71
NtRp309
(dp310
g74
(dp311
sg83
g296
sg76
(lp312
g69
(g70
g71
NtRp313
(dp314
g74
(dp315
g82
I3
ssg83
g309
sg76
(lp316
S''
asbasbasbag69
(g85
g71
NtRp317
(dp318
g74
(dp319
sg83
g271
sg76
(lp320
g69
(g90
g71
NtRp321
(dp322
g74
(dp323
g94
g95
ssg83
g317
sg76
(lp324
S'expires'
p325
asbag69
(g90
g71
NtRp326
(dp327
g74
(dp328
g101
g102
ssg83
g317
sg76
(lp329
S':'
asbag69
(g90
g71
NtRp330
(dp331
g74
(dp332
sg83
g317
sg76
(lp333
g69
(g70
g71
NtRp334
(dp335
g74
(dp336
g82
I3
ssg83
g330
sg76
(lp337
S''
asbasbasbag69
(g85
g71
NtRp338
(dp339
g74
(dp340
sg83
g271
sg76
(lp341
g69
(g90
g71
NtRp342
(dp343
g74
(dp344
g94
g95
ssg83
g338
sg76
(lp345
S'httponly'
p346
asbag69
(g90
g71
NtRp347
(dp348
g74
(dp349
g101
g102
ssg83
g338
sg76
(lp350
S':'
asbag69
(g90
g71
NtRp351
(dp352
g74
(dp353
sg83
g338
sg76
(lp354
g69
(g70
g71
NtRp355
(dp356
g74
(dp357
g82
I3
ssg83
g351
sg76
(lp358
S''
asbasbasbag69
(g85
g71
NtRp359
(dp360
g74
(dp361
sg83
g271
sg76
(lp362
g69
(g90
g71
NtRp363
(dp364
g74
(dp365
g94
g95
ssg83
g359
sg76
(lp366
S'max-age'
p367
asbag69
(g90
g71
NtRp368
(dp369
g74
(dp370
g101
g102
ssg83
g359
sg76
(lp371
S':'
asbag69
(g90
g71
NtRp372
(dp373
g74
(dp374
sg83
g359
sg76
(lp375
g69
(g70
g71
NtRp376
(dp377
g74
(dp378
g82
I3
ssg83
g372
sg76
(lp379
S''
asbasbasbag69
(g85
g71
NtRp380
(dp381
g74
(dp382
sg83
g271
sg76
(lp383
g69
(g90
g71
NtRp384
(dp385
g74
(dp386
g94
g95
ssg83
g380
sg76
(lp387
S'path'
p388
asbag69
(g90
g71
NtRp389
(dp390
g74
(dp391
g101
g102
ssg83
g380
sg76
(lp392
S':'
asbag69
(g90
g71
NtRp393
(dp394
g74
(dp395
sg83
g380
sg76
(lp396
g69
(g70
g71
NtRp397
(dp398
g74
(dp399
g82
I3
ssg83
g393
sg76
(lp400
S''
asbasbasbag69
(g85
g71
NtRp401
(dp402
g74
(dp403
sg83
g271
sg76
(lp404
g69
(g90
g71
NtRp405
(dp406
g74
(dp407
g94
g95
ssg83
g401
sg76
(lp408
S'secure'
p409
asbag69
(g90
g71
NtRp410
(dp411
g74
(dp412
g101
g102
ssg83
g401
sg76
(lp413
S':'
asbag69
(g90
g71
NtRp414
(dp415
g74
(dp416
sg83
g401
sg76
(lp417
g69
(g70
g71
NtRp418
(dp419
g74
(dp420
g82
I3
ssg83
g414
sg76
(lp421
S''
asbasbasbag69
(g85
g71
NtRp422
(dp423
g74
(dp424
sg83
g271
sg76
(lp425
g69
(g90
g71
NtRp426
(dp427
g74
(dp428
g94
g95
ssg83
g422
sg76
(lp429
S'version'
p430
asbag69
(g90
g71
NtRp431
(dp432
g74
(dp433
g101
g102
ssg83
g422
sg76
(lp434
S':'
asbag69
(g90
g71
NtRp435
(dp436
g74
(dp437
sg83
g422
sg76
(lp438
g69
(g70
g71
NtRp439
(dp440
g74
(dp441
g82
I3
ssg83
g435
sg76
(lp442
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp443
(dp444
g74
(dp445
sg83
g246
sg76
(lp446
g69
(g90
g71
NtRp447
(dp448
g74
(dp449
g94
g95
ssg83
g443
sg76
(lp450
S'session_id_seniorproject'
p451
asbag69
(g90
g71
NtRp452
(dp453
g74
(dp454
g101
g102
ssg83
g443
sg76
(lp455
S':'
asbag69
(g90
g71
NtRp456
(dp457
g74
(dp458
sg83
g443
sg76
(lp459
g69
(g70
g71
NtRp460
(dp461
g74
(dp462
g82
I4
ssg83
g456
sg76
(lp463
g69
(g78
g71
NtRp464
(dp465
g74
(dp466
g82
I3
ssg83
Nsg76
(lp467
g69
(g85
g71
NtRp468
(dp469
g74
(dp470
sg83
g464
sg76
(lp471
g69
(g90
g71
NtRp472
(dp473
g74
(dp474
g94
g95
ssg83
g468
sg76
(lp475
g283
asbag69
(g90
g71
NtRp476
(dp477
g74
(dp478
g101
g102
ssg83
g468
sg76
(lp479
S':'
asbag69
(g90
g71
NtRp480
(dp481
g74
(dp482
sg83
g468
sg76
(lp483
g69
(g70
g71
NtRp484
(dp485
g74
(dp486
g82
I3
ssg83
g480
sg76
(lp487
S''
asbasbasbag69
(g85
g71
NtRp488
(dp489
g74
(dp490
sg83
g464
sg76
(lp491
g69
(g90
g71
NtRp492
(dp493
g74
(dp494
g94
g95
ssg83
g488
sg76
(lp495
g304
asbag69
(g90
g71
NtRp496
(dp497
g74
(dp498
g101
g102
ssg83
g488
sg76
(lp499
S':'
asbag69
(g90
g71
NtRp500
(dp501
g74
(dp502
sg83
g488
sg76
(lp503
g69
(g70
g71
NtRp504
(dp505
g74
(dp506
g82
I3
ssg83
g500
sg76
(lp507
S''
asbasbasbag69
(g85
g71
NtRp508
(dp509
g74
(dp510
sg83
g464
sg76
(lp511
g69
(g90
g71
NtRp512
(dp513
g74
(dp514
g94
g95
ssg83
g508
sg76
(lp515
g325
asbag69
(g90
g71
NtRp516
(dp517
g74
(dp518
g101
g102
ssg83
g508
sg76
(lp519
S':'
asbag69
(g90
g71
NtRp520
(dp521
g74
(dp522
sg83
g508
sg76
(lp523
g69
(g70
g71
NtRp524
(dp525
g74
(dp526
g82
I3
ssg83
g520
sg76
(lp527
S''
asbasbasbag69
(g85
g71
NtRp528
(dp529
g74
(dp530
sg83
g464
sg76
(lp531
g69
(g90
g71
NtRp532
(dp533
g74
(dp534
g94
g95
ssg83
g528
sg76
(lp535
g346
asbag69
(g90
g71
NtRp536
(dp537
g74
(dp538
g101
g102
ssg83
g528
sg76
(lp539
S':'
asbag69
(g90
g71
NtRp540
(dp541
g74
(dp542
sg83
g528
sg76
(lp543
g69
(g70
g71
NtRp544
(dp545
g74
(dp546
g82
I3
ssg83
g540
sg76
(lp547
S''
asbasbasbag69
(g85
g71
NtRp548
(dp549
g74
(dp550
sg83
g464
sg76
(lp551
g69
(g90
g71
NtRp552
(dp553
g74
(dp554
g94
g95
ssg83
g548
sg76
(lp555
g367
asbag69
(g90
g71
NtRp556
(dp557
g74
(dp558
g101
g102
ssg83
g548
sg76
(lp559
S':'
asbag69
(g90
g71
NtRp560
(dp561
g74
(dp562
sg83
g548
sg76
(lp563
g69
(g70
g71
NtRp564
(dp565
g74
(dp566
g82
I3
ssg83
g560
sg76
(lp567
S''
asbasbasbag69
(g85
g71
NtRp568
(dp569
g74
(dp570
sg83
g464
sg76
(lp571
g69
(g90
g71
NtRp572
(dp573
g74
(dp574
g94
g95
ssg83
g568
sg76
(lp575
g388
asbag69
(g90
g71
NtRp576
(dp577
g74
(dp578
g101
g102
ssg83
g568
sg76
(lp579
S':'
asbag69
(g90
g71
NtRp580
(dp581
g74
(dp582
sg83
g568
sg76
(lp583
g69
(g70
g71
NtRp584
(dp585
g74
(dp586
g82
I3
ssg83
g580
sg76
(lp587
S''
asbasbasbag69
(g85
g71
NtRp588
(dp589
g74
(dp590
sg83
g464
sg76
(lp591
g69
(g90
g71
NtRp592
(dp593
g74
(dp594
g94
g95
ssg83
g588
sg76
(lp595
g409
asbag69
(g90
g71
NtRp596
(dp597
g74
(dp598
g101
g102
ssg83
g588
sg76
(lp599
S':'
asbag69
(g90
g71
NtRp600
(dp601
g74
(dp602
sg83
g588
sg76
(lp603
g69
(g70
g71
NtRp604
(dp605
g74
(dp606
g82
I3
ssg83
g600
sg76
(lp607
S''
asbasbasbag69
(g85
g71
NtRp608
(dp609
g74
(dp610
sg83
g464
sg76
(lp611
g69
(g90
g71
NtRp612
(dp613
g74
(dp614
g94
g95
ssg83
g608
sg76
(lp615
g430
asbag69
(g90
g71
NtRp616
(dp617
g74
(dp618
g101
g102
ssg83
g608
sg76
(lp619
S':'
asbag69
(g90
g71
NtRp620
(dp621
g74
(dp622
sg83
g608
sg76
(lp623
g69
(g70
g71
NtRp624
(dp625
g74
(dp626
g82
I3
ssg83
g620
sg76
(lp627
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp628
(dp629
g74
(dp630
sg83
g246
sg76
(lp631
g69
(g90
g71
NtRp632
(dp633
g74
(dp634
g94
g95
ssg83
g628
sg76
(lp635
S'session_id_welcome'
p636
asbag69
(g90
g71
NtRp637
(dp638
g74
(dp639
g101
g102
ssg83
g628
sg76
(lp640
S':'
asbag69
(g90
g71
NtRp641
(dp642
g74
(dp643
sg83
g628
sg76
(lp644
g69
(g70
g71
NtRp645
(dp646
g74
(dp647
g82
I4
ssg83
g641
sg76
(lp648
g69
(g78
g71
NtRp649
(dp650
g74
(dp651
g82
I3
ssg83
Nsg76
(lp652
g69
(g85
g71
NtRp653
(dp654
g74
(dp655
sg83
g649
sg76
(lp656
g69
(g90
g71
NtRp657
(dp658
g74
(dp659
g94
g95
ssg83
g653
sg76
(lp660
g283
asbag69
(g90
g71
NtRp661
(dp662
g74
(dp663
g101
g102
ssg83
g653
sg76
(lp664
S':'
asbag69
(g90
g71
NtRp665
(dp666
g74
(dp667
sg83
g653
sg76
(lp668
g69
(g70
g71
NtRp669
(dp670
g74
(dp671
g82
I3
ssg83
g665
sg76
(lp672
S''
asbasbasbag69
(g85
g71
NtRp673
(dp674
g74
(dp675
sg83
g649
sg76
(lp676
g69
(g90
g71
NtRp677
(dp678
g74
(dp679
g94
g95
ssg83
g673
sg76
(lp680
g304
asbag69
(g90
g71
NtRp681
(dp682
g74
(dp683
g101
g102
ssg83
g673
sg76
(lp684
S':'
asbag69
(g90
g71
NtRp685
(dp686
g74
(dp687
sg83
g673
sg76
(lp688
g69
(g70
g71
NtRp689
(dp690
g74
(dp691
g82
I3
ssg83
g685
sg76
(lp692
S''
asbasbasbag69
(g85
g71
NtRp693
(dp694
g74
(dp695
sg83
g649
sg76
(lp696
g69
(g90
g71
NtRp697
(dp698
g74
(dp699
g94
g95
ssg83
g693
sg76
(lp700
g325
asbag69
(g90
g71
NtRp701
(dp702
g74
(dp703
g101
g102
ssg83
g693
sg76
(lp704
S':'
asbag69
(g90
g71
NtRp705
(dp706
g74
(dp707
sg83
g693
sg76
(lp708
g69
(g70
g71
NtRp709
(dp710
g74
(dp711
g82
I3
ssg83
g705
sg76
(lp712
S''
asbasbasbag69
(g85
g71
NtRp713
(dp714
g74
(dp715
sg83
g649
sg76
(lp716
g69
(g90
g71
NtRp717
(dp718
g74
(dp719
g94
g95
ssg83
g713
sg76
(lp720
g346
asbag69
(g90
g71
NtRp721
(dp722
g74
(dp723
g101
g102
ssg83
g713
sg76
(lp724
S':'
asbag69
(g90
g71
NtRp725
(dp726
g74
(dp727
sg83
g713
sg76
(lp728
g69
(g70
g71
NtRp729
(dp730
g74
(dp731
g82
I3
ssg83
g725
sg76
(lp732
S''
asbasbasbag69
(g85
g71
NtRp733
(dp734
g74
(dp735
sg83
g649
sg76
(lp736
g69
(g90
g71
NtRp737
(dp738
g74
(dp739
g94
g95
ssg83
g733
sg76
(lp740
g367
asbag69
(g90
g71
NtRp741
(dp742
g74
(dp743
g101
g102
ssg83
g733
sg76
(lp744
S':'
asbag69
(g90
g71
NtRp745
(dp746
g74
(dp747
sg83
g733
sg76
(lp748
g69
(g70
g71
NtRp749
(dp750
g74
(dp751
g82
I3
ssg83
g745
sg76
(lp752
S''
asbasbasbag69
(g85
g71
NtRp753
(dp754
g74
(dp755
sg83
g649
sg76
(lp756
g69
(g90
g71
NtRp757
(dp758
g74
(dp759
g94
g95
ssg83
g753
sg76
(lp760
g388
asbag69
(g90
g71
NtRp761
(dp762
g74
(dp763
g101
g102
ssg83
g753
sg76
(lp764
S':'
asbag69
(g90
g71
NtRp765
(dp766
g74
(dp767
sg83
g753
sg76
(lp768
g69
(g70
g71
NtRp769
(dp770
g74
(dp771
g82
I3
ssg83
g765
sg76
(lp772
S''
asbasbasbag69
(g85
g71
NtRp773
(dp774
g74
(dp775
sg83
g649
sg76
(lp776
g69
(g90
g71
NtRp777
(dp778
g74
(dp779
g94
g95
ssg83
g773
sg76
(lp780
g409
asbag69
(g90
g71
NtRp781
(dp782
g74
(dp783
g101
g102
ssg83
g773
sg76
(lp784
S':'
asbag69
(g90
g71
NtRp785
(dp786
g74
(dp787
sg83
g773
sg76
(lp788
g69
(g70
g71
NtRp789
(dp790
g74
(dp791
g82
I3
ssg83
g785
sg76
(lp792
S''
asbasbasbag69
(g85
g71
NtRp793
(dp794
g74
(dp795
sg83
g649
sg76
(lp796
g69
(g90
g71
NtRp797
(dp798
g74
(dp799
g94
g95
ssg83
g793
sg76
(lp800
g430
asbag69
(g90
g71
NtRp801
(dp802
g74
(dp803
g101
g102
ssg83
g793
sg76
(lp804
S':'
asbag69
(g90
g71
NtRp805
(dp806
g74
(dp807
sg83
g793
sg76
(lp808
g69
(g70
g71
NtRp809
(dp810
g74
(dp811
g82
I3
ssg83
g805
sg76
(lp812
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp813
(dp814
g74
(dp815
sg83
g79
sg76
(lp816
g69
(g90
g71
NtRp817
(dp818
g74
(dp819
g94
g95
ssg83
g813
sg76
(lp820
S'env'
p821
asbag69
(g90
g71
NtRp822
(dp823
g74
(dp824
g101
g102
ssg83
g813
sg76
(lp825
S':'
asbag69
(g90
g71
NtRp826
(dp827
g74
(dp828
sg83
g813
sg76
(lp829
g69
(g70
g71
NtRp830
(dp831
g74
(dp832
g82
I5
ssg83
g826
sg76
(lp833
g69
(g78
g71
NtRp834
(dp835
g74
(dp836
g82
I4
ssg83
Nsg76
(lp837
g69
(g85
g71
NtRp838
(dp839
g74
(dp840
sg83
g834
sg76
(lp841
g69
(g90
g71
NtRp842
(dp843
g74
(dp844
g94
g95
ssg83
g838
sg76
(lp845
S'app_folders'
p846
asbag69
(g90
g71
NtRp847
(dp848
g74
(dp849
g101
g102
ssg83
g838
sg76
(lp850
S':'
asbag69
(g90
g71
NtRp851
(dp852
g74
(dp853
sg83
g838
sg76
(lp854
g69
(g70
g71
NtRp855
(dp856
g74
(dp857
g82
I4
ssg83
g851
sg76
(lp858
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p859
asbasbasbag69
(g85
g71
NtRp860
(dp861
g74
(dp862
sg83
g834
sg76
(lp863
g69
(g90
g71
NtRp864
(dp865
g74
(dp866
g94
g95
ssg83
g860
sg76
(lp867
S'applications_parent'
p868
asbag69
(g90
g71
NtRp869
(dp870
g74
(dp871
g101
g102
ssg83
g860
sg76
(lp872
S':'
asbag69
(g90
g71
NtRp873
(dp874
g74
(dp875
sg83
g860
sg76
(lp876
g69
(g70
g71
NtRp877
(dp878
g74
(dp879
g82
I4
ssg83
g873
sg76
(lp880
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p881
asbasbasbag69
(g85
g71
NtRp882
(dp883
g74
(dp884
sg83
g834
sg76
(lp885
g69
(g90
g71
NtRp886
(dp887
g74
(dp888
g94
g95
ssg83
g882
sg76
(lp889
S'cmd_args'
p890
asbag69
(g90
g71
NtRp891
(dp892
g74
(dp893
g101
g102
ssg83
g882
sg76
(lp894
S':'
asbag69
(g90
g71
NtRp895
(dp896
g74
(dp897
sg83
g882
sg76
(lp898
g69
(g70
g71
NtRp899
(dp900
g74
(dp901
g82
I4
ssg83
g895
sg76
(lp902
g69
(g78
g71
NtRp903
(dp904
g74
(dp905
g82
I3
ssg83
Nsg76
(lp906
sbasbasbasbag69
(g85
g71
NtRp907
(dp908
g74
(dp909
sg83
g834
sg76
(lp910
g69
(g90
g71
NtRp911
(dp912
g74
(dp913
g94
g95
ssg83
g907
sg76
(lp914
S'cmd_options'
p915
asbag69
(g90
g71
NtRp916
(dp917
g74
(dp918
g101
g102
ssg83
g907
sg76
(lp919
S':'
asbag69
(g90
g71
NtRp920
(dp921
g74
(dp922
sg83
g907
sg76
(lp923
g69
(g70
g71
NtRp924
(dp925
g74
(dp926
g82
I4
ssg83
g920
sg76
(lp927
S"<Values at 0x10236f638: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p928
asbasbasbag69
(g85
g71
NtRp929
(dp930
g74
(dp931
sg83
g834
sg76
(lp932
g69
(g90
g71
NtRp933
(dp934
g74
(dp935
g94
g95
ssg83
g929
sg76
(lp936
S'db_sessions'
p937
asbag69
(g90
g71
NtRp938
(dp939
g74
(dp940
g101
g102
ssg83
g929
sg76
(lp941
S':'
asbag69
(g90
g71
NtRp942
(dp943
g74
(dp944
sg83
g929
sg76
(lp945
g69
(g70
g71
NtRp946
(dp947
g74
(dp948
g82
I4
ssg83
g942
sg76
(lp949
S'set([])'
p950
asbasbasbag69
(g85
g71
NtRp951
(dp952
g74
(dp953
sg83
g834
sg76
(lp954
g69
(g90
g71
NtRp955
(dp956
g74
(dp957
g94
g95
ssg83
g951
sg76
(lp958
S'debugging'
p959
asbag69
(g90
g71
NtRp960
(dp961
g74
(dp962
g101
g102
ssg83
g951
sg76
(lp963
S':'
asbag69
(g90
g71
NtRp964
(dp965
g74
(dp966
sg83
g951
sg76
(lp967
g69
(g70
g71
NtRp968
(dp969
g74
(dp970
g82
I4
ssg83
g964
sg76
(lp971
g112
asbasbasbag69
(g85
g71
NtRp972
(dp973
g74
(dp974
sg83
g834
sg76
(lp975
g69
(g90
g71
NtRp976
(dp977
g74
(dp978
g94
g95
ssg83
g972
sg76
(lp979
S'gluon_parent'
p980
asbag69
(g90
g71
NtRp981
(dp982
g74
(dp983
g101
g102
ssg83
g972
sg76
(lp984
S':'
asbag69
(g90
g71
NtRp985
(dp986
g74
(dp987
sg83
g972
sg76
(lp988
g69
(g70
g71
NtRp989
(dp990
g74
(dp991
g82
I4
ssg83
g985
sg76
(lp992
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p993
asbasbasbag69
(g85
g71
NtRp994
(dp995
g74
(dp996
sg83
g834
sg76
(lp997
g69
(g90
g71
NtRp998
(dp999
g74
(dp1000
g94
g95
ssg83
g994
sg76
(lp1001
S'http_accept'
p1002
asbag69
(g90
g71
NtRp1003
(dp1004
g74
(dp1005
g101
g102
ssg83
g994
sg76
(lp1006
S':'
asbag69
(g90
g71
NtRp1007
(dp1008
g74
(dp1009
sg83
g994
sg76
(lp1010
g69
(g70
g71
NtRp1011
(dp1012
g74
(dp1013
g82
I4
ssg83
g1007
sg76
(lp1014
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1015
asbasbasbag69
(g85
g71
NtRp1016
(dp1017
g74
(dp1018
sg83
g834
sg76
(lp1019
g69
(g90
g71
NtRp1020
(dp1021
g74
(dp1022
g94
g95
ssg83
g1016
sg76
(lp1023
S'http_accept_charset'
p1024
asbag69
(g90
g71
NtRp1025
(dp1026
g74
(dp1027
g101
g102
ssg83
g1016
sg76
(lp1028
S':'
asbag69
(g90
g71
NtRp1029
(dp1030
g74
(dp1031
sg83
g1016
sg76
(lp1032
g69
(g70
g71
NtRp1033
(dp1034
g74
(dp1035
g82
I4
ssg83
g1029
sg76
(lp1036
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1037
asbasbasbag69
(g85
g71
NtRp1038
(dp1039
g74
(dp1040
sg83
g834
sg76
(lp1041
g69
(g90
g71
NtRp1042
(dp1043
g74
(dp1044
g94
g95
ssg83
g1038
sg76
(lp1045
S'http_accept_encoding'
p1046
asbag69
(g90
g71
NtRp1047
(dp1048
g74
(dp1049
g101
g102
ssg83
g1038
sg76
(lp1050
S':'
asbag69
(g90
g71
NtRp1051
(dp1052
g74
(dp1053
sg83
g1038
sg76
(lp1054
g69
(g70
g71
NtRp1055
(dp1056
g74
(dp1057
g82
I4
ssg83
g1051
sg76
(lp1058
S'gzip,deflate,sdch'
p1059
asbasbasbag69
(g85
g71
NtRp1060
(dp1061
g74
(dp1062
sg83
g834
sg76
(lp1063
g69
(g90
g71
NtRp1064
(dp1065
g74
(dp1066
g94
g95
ssg83
g1060
sg76
(lp1067
S'http_accept_language'
p1068
asbag69
(g90
g71
NtRp1069
(dp1070
g74
(dp1071
g101
g102
ssg83
g1060
sg76
(lp1072
S':'
asbag69
(g90
g71
NtRp1073
(dp1074
g74
(dp1075
sg83
g1060
sg76
(lp1076
g69
(g70
g71
NtRp1077
(dp1078
g74
(dp1079
g82
I4
ssg83
g1073
sg76
(lp1080
S'en-US,en;q=0.8'
p1081
asbasbasbag69
(g85
g71
NtRp1082
(dp1083
g74
(dp1084
sg83
g834
sg76
(lp1085
g69
(g90
g71
NtRp1086
(dp1087
g74
(dp1088
g94
g95
ssg83
g1082
sg76
(lp1089
S'http_cache_control'
p1090
asbag69
(g90
g71
NtRp1091
(dp1092
g74
(dp1093
g101
g102
ssg83
g1082
sg76
(lp1094
S':'
asbag69
(g90
g71
NtRp1095
(dp1096
g74
(dp1097
sg83
g1082
sg76
(lp1098
g69
(g70
g71
NtRp1099
(dp1100
g74
(dp1101
g82
I4
ssg83
g1095
sg76
(lp1102
S'max-age=0'
p1103
asbasbasbag69
(g85
g71
NtRp1104
(dp1105
g74
(dp1106
sg83
g834
sg76
(lp1107
g69
(g90
g71
NtRp1108
(dp1109
g74
(dp1110
g94
g95
ssg83
g1104
sg76
(lp1111
S'http_connection'
p1112
asbag69
(g90
g71
NtRp1113
(dp1114
g74
(dp1115
g101
g102
ssg83
g1104
sg76
(lp1116
S':'
asbag69
(g90
g71
NtRp1117
(dp1118
g74
(dp1119
sg83
g1104
sg76
(lp1120
g69
(g70
g71
NtRp1121
(dp1122
g74
(dp1123
g82
I4
ssg83
g1117
sg76
(lp1124
S'keep-alive'
p1125
asbasbasbag69
(g85
g71
NtRp1126
(dp1127
g74
(dp1128
sg83
g834
sg76
(lp1129
g69
(g90
g71
NtRp1130
(dp1131
g74
(dp1132
g94
g95
ssg83
g1126
sg76
(lp1133
S'http_cookie'
p1134
asbag69
(g90
g71
NtRp1135
(dp1136
g74
(dp1137
g101
g102
ssg83
g1126
sg76
(lp1138
S':'
asbag69
(g90
g71
NtRp1139
(dp1140
g74
(dp1141
sg83
g1126
sg76
(lp1142
g69
(g70
g71
NtRp1143
(dp1144
g74
(dp1145
g82
I4
ssg83
g1139
sg76
(lp1146
S'session_id_welcome=127.0.0.1-06963b13-5292-4f12-a45f-8facc0240d3e; session_id_admin=127.0.0.1-4a997e0c-bd0d-43d4-8af2-d0e4eedda508; session_id_seniorproject=127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p1147
asbasbasbag69
(g85
g71
NtRp1148
(dp1149
g74
(dp1150
sg83
g834
sg76
(lp1151
g69
(g90
g71
NtRp1152
(dp1153
g74
(dp1154
g94
g95
ssg83
g1148
sg76
(lp1155
S'http_host'
p1156
asbag69
(g90
g71
NtRp1157
(dp1158
g74
(dp1159
g101
g102
ssg83
g1148
sg76
(lp1160
S':'
asbag69
(g90
g71
NtRp1161
(dp1162
g74
(dp1163
sg83
g1148
sg76
(lp1164
g69
(g70
g71
NtRp1165
(dp1166
g74
(dp1167
g82
I4
ssg83
g1161
sg76
(lp1168
S'127.0.0.1:8000'
p1169
asbasbasbag69
(g85
g71
NtRp1170
(dp1171
g74
(dp1172
sg83
g834
sg76
(lp1173
g69
(g90
g71
NtRp1174
(dp1175
g74
(dp1176
g94
g95
ssg83
g1170
sg76
(lp1177
S'http_referer'
p1178
asbag69
(g90
g71
NtRp1179
(dp1180
g74
(dp1181
g101
g102
ssg83
g1170
sg76
(lp1182
S':'
asbag69
(g90
g71
NtRp1183
(dp1184
g74
(dp1185
sg83
g1170
sg76
(lp1186
g69
(g70
g71
NtRp1187
(dp1188
g74
(dp1189
g82
I4
ssg83
g1183
sg76
(lp1190
S'http://127.0.0.1:8000/SeniorProject/default/addtoproject'
p1191
asbasbasbag69
(g85
g71
NtRp1192
(dp1193
g74
(dp1194
sg83
g834
sg76
(lp1195
g69
(g90
g71
NtRp1196
(dp1197
g74
(dp1198
g94
g95
ssg83
g1192
sg76
(lp1199
S'http_user_agent'
p1200
asbag69
(g90
g71
NtRp1201
(dp1202
g74
(dp1203
g101
g102
ssg83
g1192
sg76
(lp1204
S':'
asbag69
(g90
g71
NtRp1205
(dp1206
g74
(dp1207
sg83
g1192
sg76
(lp1208
g69
(g70
g71
NtRp1209
(dp1210
g74
(dp1211
g82
I4
ssg83
g1205
sg76
(lp1212
S'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.43 Safari/537.31'
p1213
asbasbasbag69
(g85
g71
NtRp1214
(dp1215
g74
(dp1216
sg83
g834
sg76
(lp1217
g69
(g90
g71
NtRp1218
(dp1219
g74
(dp1220
g94
g95
ssg83
g1214
sg76
(lp1221
S'is_jython'
p1222
asbag69
(g90
g71
NtRp1223
(dp1224
g74
(dp1225
g101
g102
ssg83
g1214
sg76
(lp1226
S':'
asbag69
(g90
g71
NtRp1227
(dp1228
g74
(dp1229
sg83
g1214
sg76
(lp1230
g69
(g70
g71
NtRp1231
(dp1232
g74
(dp1233
g82
I4
ssg83
g1227
sg76
(lp1234
g112
asbasbasbag69
(g85
g71
NtRp1235
(dp1236
g74
(dp1237
sg83
g834
sg76
(lp1238
g69
(g90
g71
NtRp1239
(dp1240
g74
(dp1241
g94
g95
ssg83
g1235
sg76
(lp1242
S'is_pypy'
p1243
asbag69
(g90
g71
NtRp1244
(dp1245
g74
(dp1246
g101
g102
ssg83
g1235
sg76
(lp1247
S':'
asbag69
(g90
g71
NtRp1248
(dp1249
g74
(dp1250
sg83
g1235
sg76
(lp1251
g69
(g70
g71
NtRp1252
(dp1253
g74
(dp1254
g82
I4
ssg83
g1248
sg76
(lp1255
g112
asbasbasbag69
(g85
g71
NtRp1256
(dp1257
g74
(dp1258
sg83
g834
sg76
(lp1259
g69
(g90
g71
NtRp1260
(dp1261
g74
(dp1262
g94
g95
ssg83
g1256
sg76
(lp1263
S'path_info'
p1264
asbag69
(g90
g71
NtRp1265
(dp1266
g74
(dp1267
g101
g102
ssg83
g1256
sg76
(lp1268
S':'
asbag69
(g90
g71
NtRp1269
(dp1270
g74
(dp1271
sg83
g1256
sg76
(lp1272
g69
(g70
g71
NtRp1273
(dp1274
g74
(dp1275
g82
I4
ssg83
g1269
sg76
(lp1276
S'/SeniorProject/default/addtoproject'
p1277
asbasbasbag69
(g85
g71
NtRp1278
(dp1279
g74
(dp1280
sg83
g834
sg76
(lp1281
g69
(g90
g71
NtRp1282
(dp1283
g74
(dp1284
g94
g95
ssg83
g1278
sg76
(lp1285
S'query_string'
p1286
asbag69
(g90
g71
NtRp1287
(dp1288
g74
(dp1289
g101
g102
ssg83
g1278
sg76
(lp1290
S':'
asbag69
(g90
g71
NtRp1291
(dp1292
g74
(dp1293
sg83
g1278
sg76
(lp1294
g69
(g70
g71
NtRp1295
(dp1296
g74
(dp1297
g82
I4
ssg83
g1291
sg76
(lp1298
S''
asbasbasbag69
(g85
g71
NtRp1299
(dp1300
g74
(dp1301
sg83
g834
sg76
(lp1302
g69
(g90
g71
NtRp1303
(dp1304
g74
(dp1305
g94
g95
ssg83
g1299
sg76
(lp1306
S'remote_addr'
p1307
asbag69
(g90
g71
NtRp1308
(dp1309
g74
(dp1310
g101
g102
ssg83
g1299
sg76
(lp1311
S':'
asbag69
(g90
g71
NtRp1312
(dp1313
g74
(dp1314
sg83
g1299
sg76
(lp1315
g69
(g70
g71
NtRp1316
(dp1317
g74
(dp1318
g82
I4
ssg83
g1312
sg76
(lp1319
g202
asbasbasbag69
(g85
g71
NtRp1320
(dp1321
g74
(dp1322
sg83
g834
sg76
(lp1323
g69
(g90
g71
NtRp1324
(dp1325
g74
(dp1326
g94
g95
ssg83
g1320
sg76
(lp1327
S'remote_port'
p1328
asbag69
(g90
g71
NtRp1329
(dp1330
g74
(dp1331
g101
g102
ssg83
g1320
sg76
(lp1332
S':'
asbag69
(g90
g71
NtRp1333
(dp1334
g74
(dp1335
sg83
g1320
sg76
(lp1336
g69
(g70
g71
NtRp1337
(dp1338
g74
(dp1339
g82
I4
ssg83
g1333
sg76
(lp1340
S'55731'
p1341
asbasbasbag69
(g85
g71
NtRp1342
(dp1343
g74
(dp1344
sg83
g834
sg76
(lp1345
g69
(g90
g71
NtRp1346
(dp1347
g74
(dp1348
g94
g95
ssg83
g1342
sg76
(lp1349
S'request_method'
p1350
asbag69
(g90
g71
NtRp1351
(dp1352
g74
(dp1353
g101
g102
ssg83
g1342
sg76
(lp1354
S':'
asbag69
(g90
g71
NtRp1355
(dp1356
g74
(dp1357
sg83
g1342
sg76
(lp1358
g69
(g70
g71
NtRp1359
(dp1360
g74
(dp1361
g82
I4
ssg83
g1355
sg76
(lp1362
S'GET'
p1363
asbasbasbag69
(g85
g71
NtRp1364
(dp1365
g74
(dp1366
sg83
g834
sg76
(lp1367
g69
(g90
g71
NtRp1368
(dp1369
g74
(dp1370
g94
g95
ssg83
g1364
sg76
(lp1371
S'script_name'
p1372
asbag69
(g90
g71
NtRp1373
(dp1374
g74
(dp1375
g101
g102
ssg83
g1364
sg76
(lp1376
S':'
asbag69
(g90
g71
NtRp1377
(dp1378
g74
(dp1379
sg83
g1364
sg76
(lp1380
g69
(g70
g71
NtRp1381
(dp1382
g74
(dp1383
g82
I4
ssg83
g1377
sg76
(lp1384
S''
asbasbasbag69
(g85
g71
NtRp1385
(dp1386
g74
(dp1387
sg83
g834
sg76
(lp1388
g69
(g90
g71
NtRp1389
(dp1390
g74
(dp1391
g94
g95
ssg83
g1385
sg76
(lp1392
S'server_name'
p1393
asbag69
(g90
g71
NtRp1394
(dp1395
g74
(dp1396
g101
g102
ssg83
g1385
sg76
(lp1397
S':'
asbag69
(g90
g71
NtRp1398
(dp1399
g74
(dp1400
sg83
g1385
sg76
(lp1401
g69
(g70
g71
NtRp1402
(dp1403
g74
(dp1404
g82
I4
ssg83
g1398
sg76
(lp1405
S'Nathans-MacBook-Pro-2.local'
p1406
asbasbasbag69
(g85
g71
NtRp1407
(dp1408
g74
(dp1409
sg83
g834
sg76
(lp1410
g69
(g90
g71
NtRp1411
(dp1412
g74
(dp1413
g94
g95
ssg83
g1407
sg76
(lp1414
S'server_port'
p1415
asbag69
(g90
g71
NtRp1416
(dp1417
g74
(dp1418
g101
g102
ssg83
g1407
sg76
(lp1419
S':'
asbag69
(g90
g71
NtRp1420
(dp1421
g74
(dp1422
sg83
g1407
sg76
(lp1423
g69
(g70
g71
NtRp1424
(dp1425
g74
(dp1426
g82
I4
ssg83
g1420
sg76
(lp1427
S'8000'
p1428
asbasbasbag69
(g85
g71
NtRp1429
(dp1430
g74
(dp1431
sg83
g834
sg76
(lp1432
g69
(g90
g71
NtRp1433
(dp1434
g74
(dp1435
g94
g95
ssg83
g1429
sg76
(lp1436
S'server_protocol'
p1437
asbag69
(g90
g71
NtRp1438
(dp1439
g74
(dp1440
g101
g102
ssg83
g1429
sg76
(lp1441
S':'
asbag69
(g90
g71
NtRp1442
(dp1443
g74
(dp1444
sg83
g1429
sg76
(lp1445
g69
(g70
g71
NtRp1446
(dp1447
g74
(dp1448
g82
I4
ssg83
g1442
sg76
(lp1449
S'HTTP/1.1'
p1450
asbasbasbag69
(g85
g71
NtRp1451
(dp1452
g74
(dp1453
sg83
g834
sg76
(lp1454
g69
(g90
g71
NtRp1455
(dp1456
g74
(dp1457
g94
g95
ssg83
g1451
sg76
(lp1458
S'server_software'
p1459
asbag69
(g90
g71
NtRp1460
(dp1461
g74
(dp1462
g101
g102
ssg83
g1451
sg76
(lp1463
S':'
asbag69
(g90
g71
NtRp1464
(dp1465
g74
(dp1466
sg83
g1451
sg76
(lp1467
g69
(g70
g71
NtRp1468
(dp1469
g74
(dp1470
g82
I4
ssg83
g1464
sg76
(lp1471
S'Rocket 1.2.4'
p1472
asbasbasbag69
(g85
g71
NtRp1473
(dp1474
g74
(dp1475
sg83
g834
sg76
(lp1476
g69
(g90
g71
NtRp1477
(dp1478
g74
(dp1479
g94
g95
ssg83
g1473
sg76
(lp1480
S'web2py_crontype'
p1481
asbag69
(g90
g71
NtRp1482
(dp1483
g74
(dp1484
g101
g102
ssg83
g1473
sg76
(lp1485
S':'
asbag69
(g90
g71
NtRp1486
(dp1487
g74
(dp1488
sg83
g1473
sg76
(lp1489
g69
(g70
g71
NtRp1490
(dp1491
g74
(dp1492
g82
I4
ssg83
g1486
sg76
(lp1493
S'hard'
p1494
asbasbasbag69
(g85
g71
NtRp1495
(dp1496
g74
(dp1497
sg83
g834
sg76
(lp1498
g69
(g90
g71
NtRp1499
(dp1500
g74
(dp1501
g94
g95
ssg83
g1495
sg76
(lp1502
S'web2py_path'
p1503
asbag69
(g90
g71
NtRp1504
(dp1505
g74
(dp1506
g101
g102
ssg83
g1495
sg76
(lp1507
S':'
asbag69
(g90
g71
NtRp1508
(dp1509
g74
(dp1510
sg83
g1495
sg76
(lp1511
g69
(g70
g71
NtRp1512
(dp1513
g74
(dp1514
g82
I4
ssg83
g1508
sg76
(lp1515
g881
asbasbasbag69
(g85
g71
NtRp1516
(dp1517
g74
(dp1518
sg83
g834
sg76
(lp1519
g69
(g90
g71
NtRp1520
(dp1521
g74
(dp1522
g94
g95
ssg83
g1516
sg76
(lp1523
S'web2py_version'
p1524
asbag69
(g90
g71
NtRp1525
(dp1526
g74
(dp1527
g101
g102
ssg83
g1516
sg76
(lp1528
S':'
asbag69
(g90
g71
NtRp1529
(dp1530
g74
(dp1531
sg83
g1516
sg76
(lp1532
g69
(g70
g71
NtRp1533
(dp1534
g74
(dp1535
g82
I4
ssg83
g1529
sg76
(lp1536
g69
(g78
g71
NtRp1537
(dp1538
g74
(dp1539
g82
I3
ssg83
Nsg76
(lp1540
g69
(g85
g71
NtRp1541
(dp1542
g74
(dp1543
sg83
g1537
sg76
(lp1544
g69
(g90
g71
NtRp1545
(dp1546
g74
(dp1547
sg83
g1541
sg76
(lp1548
g69
(g70
g71
NtRp1549
(dp1550
g74
(dp1551
g82
I3
ssg83
g1545
sg76
(lp1552
S'1'
asbasbasbag69
(g85
g71
NtRp1553
(dp1554
g74
(dp1555
sg83
g1537
sg76
(lp1556
g69
(g90
g71
NtRp1557
(dp1558
g74
(dp1559
sg83
g1553
sg76
(lp1560
g69
(g70
g71
NtRp1561
(dp1562
g74
(dp1563
g82
I3
ssg83
g1557
sg76
(lp1564
S'99'
p1565
asbasbasbag69
(g85
g71
NtRp1566
(dp1567
g74
(dp1568
sg83
g1537
sg76
(lp1569
g69
(g90
g71
NtRp1570
(dp1571
g74
(dp1572
sg83
g1566
sg76
(lp1573
g69
(g70
g71
NtRp1574
(dp1575
g74
(dp1576
g82
I3
ssg83
g1570
sg76
(lp1577
S'7'
asbasbasbag69
(g85
g71
NtRp1578
(dp1579
g74
(dp1580
sg83
g1537
sg76
(lp1581
g69
(g90
g71
NtRp1582
(dp1583
g74
(dp1584
sg83
g1578
sg76
(lp1585
g69
(g70
g71
NtRp1586
(dp1587
g74
(dp1588
g82
I3
ssg83
g1582
sg76
(lp1589
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1590
asbasbasbag69
(g85
g71
NtRp1591
(dp1592
g74
(dp1593
sg83
g1537
sg76
(lp1594
g69
(g90
g71
NtRp1595
(dp1596
g74
(dp1597
sg83
g1591
sg76
(lp1598
g69
(g70
g71
NtRp1599
(dp1600
g74
(dp1601
g82
I3
ssg83
g1595
sg76
(lp1602
S'stable'
p1603
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1604
(dp1605
g74
(dp1606
sg83
g834
sg76
(lp1607
g69
(g90
g71
NtRp1608
(dp1609
g74
(dp1610
g94
g95
ssg83
g1604
sg76
(lp1611
S'wsgi_errors'
p1612
asbag69
(g90
g71
NtRp1613
(dp1614
g74
(dp1615
g101
g102
ssg83
g1604
sg76
(lp1616
S':'
asbag69
(g90
g71
NtRp1617
(dp1618
g74
(dp1619
sg83
g1604
sg76
(lp1620
g69
(g70
g71
NtRp1621
(dp1622
g74
(dp1623
g82
I4
ssg83
g1617
sg76
(lp1624
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p1625
asbasbasbag69
(g85
g71
NtRp1626
(dp1627
g74
(dp1628
sg83
g834
sg76
(lp1629
g69
(g90
g71
NtRp1630
(dp1631
g74
(dp1632
g94
g95
ssg83
g1626
sg76
(lp1633
S'wsgi_file_wrapper'
p1634
asbag69
(g90
g71
NtRp1635
(dp1636
g74
(dp1637
g101
g102
ssg83
g1626
sg76
(lp1638
S':'
asbag69
(g90
g71
NtRp1639
(dp1640
g74
(dp1641
sg83
g1626
sg76
(lp1642
g69
(g70
g71
NtRp1643
(dp1644
g74
(dp1645
g82
I4
ssg83
g1639
sg76
(lp1646
S'<class wsgiref.util.FileWrapper at 0x101a17328>'
p1647
asbasbasbag69
(g85
g71
NtRp1648
(dp1649
g74
(dp1650
sg83
g834
sg76
(lp1651
g69
(g90
g71
NtRp1652
(dp1653
g74
(dp1654
g94
g95
ssg83
g1648
sg76
(lp1655
S'wsgi_input'
p1656
asbag69
(g90
g71
NtRp1657
(dp1658
g74
(dp1659
g101
g102
ssg83
g1648
sg76
(lp1660
S':'
asbag69
(g90
g71
NtRp1661
(dp1662
g74
(dp1663
sg83
g1648
sg76
(lp1664
g69
(g70
g71
NtRp1665
(dp1666
g74
(dp1667
g82
I4
ssg83
g1661
sg76
(lp1668
S'<socket._fileobject object at 0x102f19350>'
p1669
asbasbasbag69
(g85
g71
NtRp1670
(dp1671
g74
(dp1672
sg83
g834
sg76
(lp1673
g69
(g90
g71
NtRp1674
(dp1675
g74
(dp1676
g94
g95
ssg83
g1670
sg76
(lp1677
S'wsgi_multiprocess'
p1678
asbag69
(g90
g71
NtRp1679
(dp1680
g74
(dp1681
g101
g102
ssg83
g1670
sg76
(lp1682
S':'
asbag69
(g90
g71
NtRp1683
(dp1684
g74
(dp1685
sg83
g1670
sg76
(lp1686
g69
(g70
g71
NtRp1687
(dp1688
g74
(dp1689
g82
I4
ssg83
g1683
sg76
(lp1690
g112
asbasbasbag69
(g85
g71
NtRp1691
(dp1692
g74
(dp1693
sg83
g834
sg76
(lp1694
g69
(g90
g71
NtRp1695
(dp1696
g74
(dp1697
g94
g95
ssg83
g1691
sg76
(lp1698
S'wsgi_multithread'
p1699
asbag69
(g90
g71
NtRp1700
(dp1701
g74
(dp1702
g101
g102
ssg83
g1691
sg76
(lp1703
S':'
asbag69
(g90
g71
NtRp1704
(dp1705
g74
(dp1706
sg83
g1691
sg76
(lp1707
g69
(g70
g71
NtRp1708
(dp1709
g74
(dp1710
g82
I4
ssg83
g1704
sg76
(lp1711
S'True'
p1712
asbasbasbag69
(g85
g71
NtRp1713
(dp1714
g74
(dp1715
sg83
g834
sg76
(lp1716
g69
(g90
g71
NtRp1717
(dp1718
g74
(dp1719
g94
g95
ssg83
g1713
sg76
(lp1720
S'wsgi_run_once'
p1721
asbag69
(g90
g71
NtRp1722
(dp1723
g74
(dp1724
g101
g102
ssg83
g1713
sg76
(lp1725
S':'
asbag69
(g90
g71
NtRp1726
(dp1727
g74
(dp1728
sg83
g1713
sg76
(lp1729
g69
(g70
g71
NtRp1730
(dp1731
g74
(dp1732
g82
I4
ssg83
g1726
sg76
(lp1733
g112
asbasbasbag69
(g85
g71
NtRp1734
(dp1735
g74
(dp1736
sg83
g834
sg76
(lp1737
g69
(g90
g71
NtRp1738
(dp1739
g74
(dp1740
g94
g95
ssg83
g1734
sg76
(lp1741
S'wsgi_url_scheme'
p1742
asbag69
(g90
g71
NtRp1743
(dp1744
g74
(dp1745
g101
g102
ssg83
g1734
sg76
(lp1746
S':'
asbag69
(g90
g71
NtRp1747
(dp1748
g74
(dp1749
sg83
g1734
sg76
(lp1750
g69
(g70
g71
NtRp1751
(dp1752
g74
(dp1753
g82
I4
ssg83
g1747
sg76
(lp1754
S'http'
p1755
asbasbasbag69
(g85
g71
NtRp1756
(dp1757
g74
(dp1758
sg83
g834
sg76
(lp1759
g69
(g90
g71
NtRp1760
(dp1761
g74
(dp1762
g94
g95
ssg83
g1756
sg76
(lp1763
S'wsgi_version'
p1764
asbag69
(g90
g71
NtRp1765
(dp1766
g74
(dp1767
g101
g102
ssg83
g1756
sg76
(lp1768
S':'
asbag69
(g90
g71
NtRp1769
(dp1770
g74
(dp1771
sg83
g1756
sg76
(lp1772
g69
(g70
g71
NtRp1773
(dp1774
g74
(dp1775
g82
I4
ssg83
g1769
sg76
(lp1776
g69
(g78
g71
NtRp1777
(dp1778
g74
(dp1779
g82
I3
ssg83
Nsg76
(lp1780
g69
(g85
g71
NtRp1781
(dp1782
g74
(dp1783
sg83
g1777
sg76
(lp1784
g69
(g90
g71
NtRp1785
(dp1786
g74
(dp1787
sg83
g1781
sg76
(lp1788
g69
(g70
g71
NtRp1789
(dp1790
g74
(dp1791
g82
I3
ssg83
g1785
sg76
(lp1792
S'1'
asbasbasbag69
(g85
g71
NtRp1793
(dp1794
g74
(dp1795
sg83
g1777
sg76
(lp1796
g69
(g90
g71
NtRp1797
(dp1798
g74
(dp1799
sg83
g1793
sg76
(lp1800
g69
(g70
g71
NtRp1801
(dp1802
g74
(dp1803
g82
I3
ssg83
g1797
sg76
(lp1804
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1805
(dp1806
g74
(dp1807
sg83
g79
sg76
(lp1808
g69
(g90
g71
NtRp1809
(dp1810
g74
(dp1811
g94
g95
ssg83
g1805
sg76
(lp1812
S'extension'
p1813
asbag69
(g90
g71
NtRp1814
(dp1815
g74
(dp1816
g101
g102
ssg83
g1805
sg76
(lp1817
S':'
asbag69
(g90
g71
NtRp1818
(dp1819
g74
(dp1820
sg83
g1805
sg76
(lp1821
g69
(g70
g71
NtRp1822
(dp1823
g74
(dp1824
g82
I5
ssg83
g1818
sg76
(lp1825
S'html'
p1826
asbasbasbag69
(g85
g71
NtRp1827
(dp1828
g74
(dp1829
sg83
g79
sg76
(lp1830
g69
(g90
g71
NtRp1831
(dp1832
g74
(dp1833
g94
g95
ssg83
g1827
sg76
(lp1834
S'folder'
p1835
asbag69
(g90
g71
NtRp1836
(dp1837
g74
(dp1838
g101
g102
ssg83
g1827
sg76
(lp1839
S':'
asbag69
(g90
g71
NtRp1840
(dp1841
g74
(dp1842
sg83
g1827
sg76
(lp1843
g69
(g70
g71
NtRp1844
(dp1845
g74
(dp1846
g82
I5
ssg83
g1840
sg76
(lp1847
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/'
p1848
asbasbasbag69
(g85
g71
NtRp1849
(dp1850
g74
(dp1851
sg83
g79
sg76
(lp1852
g69
(g90
g71
NtRp1853
(dp1854
g74
(dp1855
g94
g95
ssg83
g1849
sg76
(lp1856
S'function'
p1857
asbag69
(g90
g71
NtRp1858
(dp1859
g74
(dp1860
g101
g102
ssg83
g1849
sg76
(lp1861
S':'
asbag69
(g90
g71
NtRp1862
(dp1863
g74
(dp1864
sg83
g1849
sg76
(lp1865
g69
(g70
g71
NtRp1866
(dp1867
g74
(dp1868
g82
I5
ssg83
g1862
sg76
(lp1869
S'addtoproject'
p1870
asbasbasbag69
(g85
g71
NtRp1871
(dp1872
g74
(dp1873
sg83
g79
sg76
(lp1874
g69
(g90
g71
NtRp1875
(dp1876
g74
(dp1877
g94
g95
ssg83
g1871
sg76
(lp1878
S'get_vars'
p1879
asbag69
(g90
g71
NtRp1880
(dp1881
g74
(dp1882
g101
g102
ssg83
g1871
sg76
(lp1883
S':'
asbag69
(g90
g71
NtRp1884
(dp1885
g74
(dp1886
sg83
g1871
sg76
(lp1887
g69
(g70
g71
NtRp1888
(dp1889
g74
(dp1890
g82
I5
ssg83
g1884
sg76
(lp1891
g69
(g78
g71
NtRp1892
(dp1893
g74
(dp1894
g82
I4
ssg83
Nsg76
(lp1895
sbasbasbasbag69
(g85
g71
NtRp1896
(dp1897
g74
(dp1898
sg83
g79
sg76
(lp1899
g69
(g90
g71
NtRp1900
(dp1901
g74
(dp1902
g94
g95
ssg83
g1896
sg76
(lp1903
S'global_settings'
p1904
asbag69
(g90
g71
NtRp1905
(dp1906
g74
(dp1907
g101
g102
ssg83
g1896
sg76
(lp1908
S':'
asbag69
(g90
g71
NtRp1909
(dp1910
g74
(dp1911
sg83
g1896
sg76
(lp1912
g69
(g70
g71
NtRp1913
(dp1914
g74
(dp1915
g82
I5
ssg83
g1909
sg76
(lp1916
g69
(g78
g71
NtRp1917
(dp1918
g74
(dp1919
g82
I4
ssg83
Nsg76
(lp1920
g69
(g85
g71
NtRp1921
(dp1922
g74
(dp1923
sg83
g1917
sg76
(lp1924
g69
(g90
g71
NtRp1925
(dp1926
g74
(dp1927
g94
g95
ssg83
g1921
sg76
(lp1928
g846
asbag69
(g90
g71
NtRp1929
(dp1930
g74
(dp1931
g101
g102
ssg83
g1921
sg76
(lp1932
S':'
asbag69
(g90
g71
NtRp1933
(dp1934
g74
(dp1935
sg83
g1921
sg76
(lp1936
g69
(g70
g71
NtRp1937
(dp1938
g74
(dp1939
g82
I4
ssg83
g1933
sg76
(lp1940
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p1941
asbasbasbag69
(g85
g71
NtRp1942
(dp1943
g74
(dp1944
sg83
g1917
sg76
(lp1945
g69
(g90
g71
NtRp1946
(dp1947
g74
(dp1948
g94
g95
ssg83
g1942
sg76
(lp1949
g868
asbag69
(g90
g71
NtRp1950
(dp1951
g74
(dp1952
g101
g102
ssg83
g1942
sg76
(lp1953
S':'
asbag69
(g90
g71
NtRp1954
(dp1955
g74
(dp1956
sg83
g1942
sg76
(lp1957
g69
(g70
g71
NtRp1958
(dp1959
g74
(dp1960
g82
I4
ssg83
g1954
sg76
(lp1961
g881
asbasbasbag69
(g85
g71
NtRp1962
(dp1963
g74
(dp1964
sg83
g1917
sg76
(lp1965
g69
(g90
g71
NtRp1966
(dp1967
g74
(dp1968
g94
g95
ssg83
g1962
sg76
(lp1969
g890
asbag69
(g90
g71
NtRp1970
(dp1971
g74
(dp1972
g101
g102
ssg83
g1962
sg76
(lp1973
S':'
asbag69
(g90
g71
NtRp1974
(dp1975
g74
(dp1976
sg83
g1962
sg76
(lp1977
g69
(g70
g71
NtRp1978
(dp1979
g74
(dp1980
g82
I4
ssg83
g1974
sg76
(lp1981
g69
(g78
g71
NtRp1982
(dp1983
g74
(dp1984
g82
I3
ssg83
Nsg76
(lp1985
sbasbasbasbag69
(g85
g71
NtRp1986
(dp1987
g74
(dp1988
sg83
g1917
sg76
(lp1989
g69
(g90
g71
NtRp1990
(dp1991
g74
(dp1992
g94
g95
ssg83
g1986
sg76
(lp1993
g915
asbag69
(g90
g71
NtRp1994
(dp1995
g74
(dp1996
g101
g102
ssg83
g1986
sg76
(lp1997
S':'
asbag69
(g90
g71
NtRp1998
(dp1999
g74
(dp2000
sg83
g1986
sg76
(lp2001
g69
(g70
g71
NtRp2002
(dp2003
g74
(dp2004
g82
I4
ssg83
g1998
sg76
(lp2005
S"<Values at 0x10236f638: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2006
asbasbasbag69
(g85
g71
NtRp2007
(dp2008
g74
(dp2009
sg83
g1917
sg76
(lp2010
g69
(g90
g71
NtRp2011
(dp2012
g74
(dp2013
g94
g95
ssg83
g2007
sg76
(lp2014
g937
asbag69
(g90
g71
NtRp2015
(dp2016
g74
(dp2017
g101
g102
ssg83
g2007
sg76
(lp2018
S':'
asbag69
(g90
g71
NtRp2019
(dp2020
g74
(dp2021
sg83
g2007
sg76
(lp2022
g69
(g70
g71
NtRp2023
(dp2024
g74
(dp2025
g82
I4
ssg83
g2019
sg76
(lp2026
S'set([])'
p2027
asbasbasbag69
(g85
g71
NtRp2028
(dp2029
g74
(dp2030
sg83
g1917
sg76
(lp2031
g69
(g90
g71
NtRp2032
(dp2033
g74
(dp2034
g94
g95
ssg83
g2028
sg76
(lp2035
g959
asbag69
(g90
g71
NtRp2036
(dp2037
g74
(dp2038
g101
g102
ssg83
g2028
sg76
(lp2039
S':'
asbag69
(g90
g71
NtRp2040
(dp2041
g74
(dp2042
sg83
g2028
sg76
(lp2043
g69
(g70
g71
NtRp2044
(dp2045
g74
(dp2046
g82
I4
ssg83
g2040
sg76
(lp2047
g112
asbasbasbag69
(g85
g71
NtRp2048
(dp2049
g74
(dp2050
sg83
g1917
sg76
(lp2051
g69
(g90
g71
NtRp2052
(dp2053
g74
(dp2054
g94
g95
ssg83
g2048
sg76
(lp2055
g980
asbag69
(g90
g71
NtRp2056
(dp2057
g74
(dp2058
g101
g102
ssg83
g2048
sg76
(lp2059
S':'
asbag69
(g90
g71
NtRp2060
(dp2061
g74
(dp2062
sg83
g2048
sg76
(lp2063
g69
(g70
g71
NtRp2064
(dp2065
g74
(dp2066
g82
I4
ssg83
g2060
sg76
(lp2067
g993
asbasbasbag69
(g85
g71
NtRp2068
(dp2069
g74
(dp2070
sg83
g1917
sg76
(lp2071
g69
(g90
g71
NtRp2072
(dp2073
g74
(dp2074
g94
g95
ssg83
g2068
sg76
(lp2075
g1222
asbag69
(g90
g71
NtRp2076
(dp2077
g74
(dp2078
g101
g102
ssg83
g2068
sg76
(lp2079
S':'
asbag69
(g90
g71
NtRp2080
(dp2081
g74
(dp2082
sg83
g2068
sg76
(lp2083
g69
(g70
g71
NtRp2084
(dp2085
g74
(dp2086
g82
I4
ssg83
g2080
sg76
(lp2087
g112
asbasbasbag69
(g85
g71
NtRp2088
(dp2089
g74
(dp2090
sg83
g1917
sg76
(lp2091
g69
(g90
g71
NtRp2092
(dp2093
g74
(dp2094
g94
g95
ssg83
g2088
sg76
(lp2095
g1243
asbag69
(g90
g71
NtRp2096
(dp2097
g74
(dp2098
g101
g102
ssg83
g2088
sg76
(lp2099
S':'
asbag69
(g90
g71
NtRp2100
(dp2101
g74
(dp2102
sg83
g2088
sg76
(lp2103
g69
(g70
g71
NtRp2104
(dp2105
g74
(dp2106
g82
I4
ssg83
g2100
sg76
(lp2107
g112
asbasbasbag69
(g85
g71
NtRp2108
(dp2109
g74
(dp2110
sg83
g1917
sg76
(lp2111
g69
(g90
g71
NtRp2112
(dp2113
g74
(dp2114
g94
g95
ssg83
g2108
sg76
(lp2115
g1481
asbag69
(g90
g71
NtRp2116
(dp2117
g74
(dp2118
g101
g102
ssg83
g2108
sg76
(lp2119
S':'
asbag69
(g90
g71
NtRp2120
(dp2121
g74
(dp2122
sg83
g2108
sg76
(lp2123
g69
(g70
g71
NtRp2124
(dp2125
g74
(dp2126
g82
I4
ssg83
g2120
sg76
(lp2127
g1494
asbasbasbag69
(g85
g71
NtRp2128
(dp2129
g74
(dp2130
sg83
g1917
sg76
(lp2131
g69
(g90
g71
NtRp2132
(dp2133
g74
(dp2134
g94
g95
ssg83
g2128
sg76
(lp2135
g1524
asbag69
(g90
g71
NtRp2136
(dp2137
g74
(dp2138
g101
g102
ssg83
g2128
sg76
(lp2139
S':'
asbag69
(g90
g71
NtRp2140
(dp2141
g74
(dp2142
sg83
g2128
sg76
(lp2143
g69
(g70
g71
NtRp2144
(dp2145
g74
(dp2146
g82
I4
ssg83
g2140
sg76
(lp2147
g69
(g78
g71
NtRp2148
(dp2149
g74
(dp2150
g82
I3
ssg83
Nsg76
(lp2151
g69
(g85
g71
NtRp2152
(dp2153
g74
(dp2154
sg83
g2148
sg76
(lp2155
g69
(g90
g71
NtRp2156
(dp2157
g74
(dp2158
sg83
g2152
sg76
(lp2159
g69
(g70
g71
NtRp2160
(dp2161
g74
(dp2162
g82
I3
ssg83
g2156
sg76
(lp2163
S'1'
asbasbasbag69
(g85
g71
NtRp2164
(dp2165
g74
(dp2166
sg83
g2148
sg76
(lp2167
g69
(g90
g71
NtRp2168
(dp2169
g74
(dp2170
sg83
g2164
sg76
(lp2171
g69
(g70
g71
NtRp2172
(dp2173
g74
(dp2174
g82
I3
ssg83
g2168
sg76
(lp2175
S'99'
p2176
asbasbasbag69
(g85
g71
NtRp2177
(dp2178
g74
(dp2179
sg83
g2148
sg76
(lp2180
g69
(g90
g71
NtRp2181
(dp2182
g74
(dp2183
sg83
g2177
sg76
(lp2184
g69
(g70
g71
NtRp2185
(dp2186
g74
(dp2187
g82
I3
ssg83
g2181
sg76
(lp2188
S'7'
asbasbasbag69
(g85
g71
NtRp2189
(dp2190
g74
(dp2191
sg83
g2148
sg76
(lp2192
g69
(g90
g71
NtRp2193
(dp2194
g74
(dp2195
sg83
g2189
sg76
(lp2196
g69
(g70
g71
NtRp2197
(dp2198
g74
(dp2199
g82
I3
ssg83
g2193
sg76
(lp2200
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2201
asbasbasbag69
(g85
g71
NtRp2202
(dp2203
g74
(dp2204
sg83
g2148
sg76
(lp2205
g69
(g90
g71
NtRp2206
(dp2207
g74
(dp2208
sg83
g2202
sg76
(lp2209
g69
(g70
g71
NtRp2210
(dp2211
g74
(dp2212
g82
I3
ssg83
g2206
sg76
(lp2213
g1603
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2214
(dp2215
g74
(dp2216
sg83
g79
sg76
(lp2217
g69
(g90
g71
NtRp2218
(dp2219
g74
(dp2220
g94
g95
ssg83
g2214
sg76
(lp2221
S'is_https'
p2222
asbag69
(g90
g71
NtRp2223
(dp2224
g74
(dp2225
g101
g102
ssg83
g2214
sg76
(lp2226
S':'
asbag69
(g90
g71
NtRp2227
(dp2228
g74
(dp2229
sg83
g2214
sg76
(lp2230
g69
(g70
g71
NtRp2231
(dp2232
g74
(dp2233
g82
I5
ssg83
g2227
sg76
(lp2234
g112
asbasbasbag69
(g85
g71
NtRp2235
(dp2236
g74
(dp2237
sg83
g79
sg76
(lp2238
g69
(g90
g71
NtRp2239
(dp2240
g74
(dp2241
g94
g95
ssg83
g2235
sg76
(lp2242
S'is_local'
p2243
asbag69
(g90
g71
NtRp2244
(dp2245
g74
(dp2246
g101
g102
ssg83
g2235
sg76
(lp2247
S':'
asbag69
(g90
g71
NtRp2248
(dp2249
g74
(dp2250
sg83
g2235
sg76
(lp2251
g69
(g70
g71
NtRp2252
(dp2253
g74
(dp2254
g82
I5
ssg83
g2248
sg76
(lp2255
g1712
asbasbasbag69
(g85
g71
NtRp2256
(dp2257
g74
(dp2258
sg83
g79
sg76
(lp2259
g69
(g90
g71
NtRp2260
(dp2261
g74
(dp2262
g94
g95
ssg83
g2256
sg76
(lp2263
S'is_restful'
p2264
asbag69
(g90
g71
NtRp2265
(dp2266
g74
(dp2267
g101
g102
ssg83
g2256
sg76
(lp2268
S':'
asbag69
(g90
g71
NtRp2269
(dp2270
g74
(dp2271
sg83
g2256
sg76
(lp2272
g69
(g70
g71
NtRp2273
(dp2274
g74
(dp2275
g82
I5
ssg83
g2269
sg76
(lp2276
g112
asbasbasbag69
(g85
g71
NtRp2277
(dp2278
g74
(dp2279
sg83
g79
sg76
(lp2280
g69
(g90
g71
NtRp2281
(dp2282
g74
(dp2283
g94
g95
ssg83
g2277
sg76
(lp2284
S'now'
p2285
asbag69
(g90
g71
NtRp2286
(dp2287
g74
(dp2288
g101
g102
ssg83
g2277
sg76
(lp2289
S':'
asbag69
(g90
g71
NtRp2290
(dp2291
g74
(dp2292
sg83
g2277
sg76
(lp2293
g69
(g70
g71
NtRp2294
(dp2295
g74
(dp2296
g82
I5
ssg83
g2290
sg76
(lp2297
S'datetime.datetime(2013, 4, 16, 15, 41, 6, 815427)'
p2298
asbasbasbag69
(g85
g71
NtRp2299
(dp2300
g74
(dp2301
sg83
g79
sg76
(lp2302
g69
(g90
g71
NtRp2303
(dp2304
g74
(dp2305
g94
g95
ssg83
g2299
sg76
(lp2306
S'post_vars'
p2307
asbag69
(g90
g71
NtRp2308
(dp2309
g74
(dp2310
g101
g102
ssg83
g2299
sg76
(lp2311
S':'
asbag69
(g90
g71
NtRp2312
(dp2313
g74
(dp2314
sg83
g2299
sg76
(lp2315
g69
(g70
g71
NtRp2316
(dp2317
g74
(dp2318
g82
I5
ssg83
g2312
sg76
(lp2319
g69
(g78
g71
NtRp2320
(dp2321
g74
(dp2322
g82
I4
ssg83
Nsg76
(lp2323
sbasbasbasbag69
(g85
g71
NtRp2324
(dp2325
g74
(dp2326
sg83
g79
sg76
(lp2327
g69
(g90
g71
NtRp2328
(dp2329
g74
(dp2330
g94
g95
ssg83
g2324
sg76
(lp2331
S'url'
p2332
asbag69
(g90
g71
NtRp2333
(dp2334
g74
(dp2335
g101
g102
ssg83
g2324
sg76
(lp2336
S':'
asbag69
(g90
g71
NtRp2337
(dp2338
g74
(dp2339
sg83
g2324
sg76
(lp2340
g69
(g70
g71
NtRp2341
(dp2342
g74
(dp2343
g82
I5
ssg83
g2337
sg76
(lp2344
S'/SeniorProject/default/addtoproject'
p2345
asbasbasbag69
(g85
g71
NtRp2346
(dp2347
g74
(dp2348
sg83
g79
sg76
(lp2349
g69
(g90
g71
NtRp2350
(dp2351
g74
(dp2352
g94
g95
ssg83
g2346
sg76
(lp2353
S'utcnow'
p2354
asbag69
(g90
g71
NtRp2355
(dp2356
g74
(dp2357
g101
g102
ssg83
g2346
sg76
(lp2358
S':'
asbag69
(g90
g71
NtRp2359
(dp2360
g74
(dp2361
sg83
g2346
sg76
(lp2362
g69
(g70
g71
NtRp2363
(dp2364
g74
(dp2365
g82
I5
ssg83
g2359
sg76
(lp2366
S'datetime.datetime(2013, 4, 16, 20, 41, 6, 815436)'
p2367
asbasbasbag69
(g85
g71
NtRp2368
(dp2369
g74
(dp2370
sg83
g79
sg76
(lp2371
g69
(g90
g71
NtRp2372
(dp2373
g74
(dp2374
g94
g95
ssg83
g2368
sg76
(lp2375
S'uuid'
p2376
asbag69
(g90
g71
NtRp2377
(dp2378
g74
(dp2379
g101
g102
ssg83
g2368
sg76
(lp2380
S':'
asbag69
(g90
g71
NtRp2381
(dp2382
g74
(dp2383
sg83
g2368
sg76
(lp2384
g69
(g70
g71
NtRp2385
(dp2386
g74
(dp2387
g82
I5
ssg83
g2381
sg76
(lp2388
S'SeniorProject/127.0.0.1.2013-04-16.15-41-06.169de1a5-f1e7-4297-8f3c-c3084cd01f4d'
p2389
asbasbasbag69
(g85
g71
NtRp2390
(dp2391
g74
(dp2392
sg83
g79
sg76
(lp2393
g69
(g90
g71
NtRp2394
(dp2395
g74
(dp2396
g94
g95
ssg83
g2390
sg76
(lp2397
S'vars'
p2398
asbag69
(g90
g71
NtRp2399
(dp2400
g74
(dp2401
g101
g102
ssg83
g2390
sg76
(lp2402
S':'
asbag69
(g90
g71
NtRp2403
(dp2404
g74
(dp2405
sg83
g2390
sg76
(lp2406
g69
(g70
g71
NtRp2407
(dp2408
g74
(dp2409
g82
I5
ssg83
g2403
sg76
(lp2410
g69
(g78
g71
NtRp2411
(dp2412
g74
(dp2413
g82
I4
ssg83
Nsg76
(lp2414
sbasbasbasbag69
(g85
g71
NtRp2415
(dp2416
g74
(dp2417
sg83
g79
sg76
(lp2418
g69
(g90
g71
NtRp2419
(dp2420
g74
(dp2421
g94
g95
ssg83
g2415
sg76
(lp2422
S'wsgi'
p2423
asbag69
(g90
g71
NtRp2424
(dp2425
g74
(dp2426
g101
g102
ssg83
g2415
sg76
(lp2427
S':'
asbag69
(g90
g71
NtRp2428
(dp2429
g74
(dp2430
sg83
g2415
sg76
(lp2431
g69
(g70
g71
NtRp2432
(dp2433
g74
(dp2434
g82
I5
ssg83
g2428
sg76
(lp2435
g69
(g78
g71
NtRp2436
(dp2437
g74
(dp2438
g82
I4
ssg83
Nsg76
(lp2439
g69
(g85
g71
NtRp2440
(dp2441
g74
(dp2442
sg83
g2436
sg76
(lp2443
g69
(g90
g71
NtRp2444
(dp2445
g74
(dp2446
g94
g95
ssg83
g2440
sg76
(lp2447
S'environ'
p2448
asbag69
(g90
g71
NtRp2449
(dp2450
g74
(dp2451
g101
g102
ssg83
g2440
sg76
(lp2452
S':'
asbag69
(g90
g71
NtRp2453
(dp2454
g74
(dp2455
sg83
g2440
sg76
(lp2456
g69
(g70
g71
NtRp2457
(dp2458
g74
(dp2459
g82
I4
ssg83
g2453
sg76
(lp2460
g69
(g78
g71
NtRp2461
(dp2462
g74
(dp2463
g82
I3
ssg83
Nsg76
(lp2464
g69
(g85
g71
NtRp2465
(dp2466
g74
(dp2467
sg83
g2461
sg76
(lp2468
g69
(g90
g71
NtRp2469
(dp2470
g74
(dp2471
g94
g95
ssg83
g2465
sg76
(lp2472
S'HTTP_ACCEPT'
p2473
asbag69
(g90
g71
NtRp2474
(dp2475
g74
(dp2476
g101
g102
ssg83
g2465
sg76
(lp2477
S':'
asbag69
(g90
g71
NtRp2478
(dp2479
g74
(dp2480
sg83
g2465
sg76
(lp2481
g69
(g70
g71
NtRp2482
(dp2483
g74
(dp2484
g82
I3
ssg83
g2478
sg76
(lp2485
g1015
asbasbasbag69
(g85
g71
NtRp2486
(dp2487
g74
(dp2488
sg83
g2461
sg76
(lp2489
g69
(g90
g71
NtRp2490
(dp2491
g74
(dp2492
g94
g95
ssg83
g2486
sg76
(lp2493
S'HTTP_ACCEPT_CHARSET'
p2494
asbag69
(g90
g71
NtRp2495
(dp2496
g74
(dp2497
g101
g102
ssg83
g2486
sg76
(lp2498
S':'
asbag69
(g90
g71
NtRp2499
(dp2500
g74
(dp2501
sg83
g2486
sg76
(lp2502
g69
(g70
g71
NtRp2503
(dp2504
g74
(dp2505
g82
I3
ssg83
g2499
sg76
(lp2506
g1037
asbasbasbag69
(g85
g71
NtRp2507
(dp2508
g74
(dp2509
sg83
g2461
sg76
(lp2510
g69
(g90
g71
NtRp2511
(dp2512
g74
(dp2513
g94
g95
ssg83
g2507
sg76
(lp2514
S'HTTP_ACCEPT_ENCODING'
p2515
asbag69
(g90
g71
NtRp2516
(dp2517
g74
(dp2518
g101
g102
ssg83
g2507
sg76
(lp2519
S':'
asbag69
(g90
g71
NtRp2520
(dp2521
g74
(dp2522
sg83
g2507
sg76
(lp2523
g69
(g70
g71
NtRp2524
(dp2525
g74
(dp2526
g82
I3
ssg83
g2520
sg76
(lp2527
g1059
asbasbasbag69
(g85
g71
NtRp2528
(dp2529
g74
(dp2530
sg83
g2461
sg76
(lp2531
g69
(g90
g71
NtRp2532
(dp2533
g74
(dp2534
g94
g95
ssg83
g2528
sg76
(lp2535
S'HTTP_ACCEPT_LANGUAGE'
p2536
asbag69
(g90
g71
NtRp2537
(dp2538
g74
(dp2539
g101
g102
ssg83
g2528
sg76
(lp2540
S':'
asbag69
(g90
g71
NtRp2541
(dp2542
g74
(dp2543
sg83
g2528
sg76
(lp2544
g69
(g70
g71
NtRp2545
(dp2546
g74
(dp2547
g82
I3
ssg83
g2541
sg76
(lp2548
g1081
asbasbasbag69
(g85
g71
NtRp2549
(dp2550
g74
(dp2551
sg83
g2461
sg76
(lp2552
g69
(g90
g71
NtRp2553
(dp2554
g74
(dp2555
g94
g95
ssg83
g2549
sg76
(lp2556
S'HTTP_CACHE_CONTROL'
p2557
asbag69
(g90
g71
NtRp2558
(dp2559
g74
(dp2560
g101
g102
ssg83
g2549
sg76
(lp2561
S':'
asbag69
(g90
g71
NtRp2562
(dp2563
g74
(dp2564
sg83
g2549
sg76
(lp2565
g69
(g70
g71
NtRp2566
(dp2567
g74
(dp2568
g82
I3
ssg83
g2562
sg76
(lp2569
g1103
asbasbasbag69
(g85
g71
NtRp2570
(dp2571
g74
(dp2572
sg83
g2461
sg76
(lp2573
g69
(g90
g71
NtRp2574
(dp2575
g74
(dp2576
g94
g95
ssg83
g2570
sg76
(lp2577
S'HTTP_CONNECTION'
p2578
asbag69
(g90
g71
NtRp2579
(dp2580
g74
(dp2581
g101
g102
ssg83
g2570
sg76
(lp2582
S':'
asbag69
(g90
g71
NtRp2583
(dp2584
g74
(dp2585
sg83
g2570
sg76
(lp2586
g69
(g70
g71
NtRp2587
(dp2588
g74
(dp2589
g82
I3
ssg83
g2583
sg76
(lp2590
g1125
asbasbasbag69
(g85
g71
NtRp2591
(dp2592
g74
(dp2593
sg83
g2461
sg76
(lp2594
g69
(g90
g71
NtRp2595
(dp2596
g74
(dp2597
g94
g95
ssg83
g2591
sg76
(lp2598
S'HTTP_COOKIE'
p2599
asbag69
(g90
g71
NtRp2600
(dp2601
g74
(dp2602
g101
g102
ssg83
g2591
sg76
(lp2603
S':'
asbag69
(g90
g71
NtRp2604
(dp2605
g74
(dp2606
sg83
g2591
sg76
(lp2607
g69
(g70
g71
NtRp2608
(dp2609
g74
(dp2610
g82
I3
ssg83
g2604
sg76
(lp2611
g1147
asbasbasbag69
(g85
g71
NtRp2612
(dp2613
g74
(dp2614
sg83
g2461
sg76
(lp2615
g69
(g90
g71
NtRp2616
(dp2617
g74
(dp2618
g94
g95
ssg83
g2612
sg76
(lp2619
S'HTTP_HOST'
p2620
asbag69
(g90
g71
NtRp2621
(dp2622
g74
(dp2623
g101
g102
ssg83
g2612
sg76
(lp2624
S':'
asbag69
(g90
g71
NtRp2625
(dp2626
g74
(dp2627
sg83
g2612
sg76
(lp2628
g69
(g70
g71
NtRp2629
(dp2630
g74
(dp2631
g82
I3
ssg83
g2625
sg76
(lp2632
g1169
asbasbasbag69
(g85
g71
NtRp2633
(dp2634
g74
(dp2635
sg83
g2461
sg76
(lp2636
g69
(g90
g71
NtRp2637
(dp2638
g74
(dp2639
g94
g95
ssg83
g2633
sg76
(lp2640
S'HTTP_REFERER'
p2641
asbag69
(g90
g71
NtRp2642
(dp2643
g74
(dp2644
g101
g102
ssg83
g2633
sg76
(lp2645
S':'
asbag69
(g90
g71
NtRp2646
(dp2647
g74
(dp2648
sg83
g2633
sg76
(lp2649
g69
(g70
g71
NtRp2650
(dp2651
g74
(dp2652
g82
I3
ssg83
g2646
sg76
(lp2653
g1191
asbasbasbag69
(g85
g71
NtRp2654
(dp2655
g74
(dp2656
sg83
g2461
sg76
(lp2657
g69
(g90
g71
NtRp2658
(dp2659
g74
(dp2660
g94
g95
ssg83
g2654
sg76
(lp2661
S'HTTP_USER_AGENT'
p2662
asbag69
(g90
g71
NtRp2663
(dp2664
g74
(dp2665
g101
g102
ssg83
g2654
sg76
(lp2666
S':'
asbag69
(g90
g71
NtRp2667
(dp2668
g74
(dp2669
sg83
g2654
sg76
(lp2670
g69
(g70
g71
NtRp2671
(dp2672
g74
(dp2673
g82
I3
ssg83
g2667
sg76
(lp2674
g1213
asbasbasbag69
(g85
g71
NtRp2675
(dp2676
g74
(dp2677
sg83
g2461
sg76
(lp2678
g69
(g90
g71
NtRp2679
(dp2680
g74
(dp2681
g94
g95
ssg83
g2675
sg76
(lp2682
S'PATH_INFO'
p2683
asbag69
(g90
g71
NtRp2684
(dp2685
g74
(dp2686
g101
g102
ssg83
g2675
sg76
(lp2687
S':'
asbag69
(g90
g71
NtRp2688
(dp2689
g74
(dp2690
sg83
g2675
sg76
(lp2691
g69
(g70
g71
NtRp2692
(dp2693
g74
(dp2694
g82
I3
ssg83
g2688
sg76
(lp2695
g1277
asbasbasbag69
(g85
g71
NtRp2696
(dp2697
g74
(dp2698
sg83
g2461
sg76
(lp2699
g69
(g90
g71
NtRp2700
(dp2701
g74
(dp2702
g94
g95
ssg83
g2696
sg76
(lp2703
S'QUERY_STRING'
p2704
asbag69
(g90
g71
NtRp2705
(dp2706
g74
(dp2707
g101
g102
ssg83
g2696
sg76
(lp2708
S':'
asbag69
(g90
g71
NtRp2709
(dp2710
g74
(dp2711
sg83
g2696
sg76
(lp2712
g69
(g70
g71
NtRp2713
(dp2714
g74
(dp2715
g82
I3
ssg83
g2709
sg76
(lp2716
S''
asbasbasbag69
(g85
g71
NtRp2717
(dp2718
g74
(dp2719
sg83
g2461
sg76
(lp2720
g69
(g90
g71
NtRp2721
(dp2722
g74
(dp2723
g94
g95
ssg83
g2717
sg76
(lp2724
S'REMOTE_ADDR'
p2725
asbag69
(g90
g71
NtRp2726
(dp2727
g74
(dp2728
g101
g102
ssg83
g2717
sg76
(lp2729
S':'
asbag69
(g90
g71
NtRp2730
(dp2731
g74
(dp2732
sg83
g2717
sg76
(lp2733
g69
(g70
g71
NtRp2734
(dp2735
g74
(dp2736
g82
I3
ssg83
g2730
sg76
(lp2737
g202
asbasbasbag69
(g85
g71
NtRp2738
(dp2739
g74
(dp2740
sg83
g2461
sg76
(lp2741
g69
(g90
g71
NtRp2742
(dp2743
g74
(dp2744
g94
g95
ssg83
g2738
sg76
(lp2745
S'REMOTE_PORT'
p2746
asbag69
(g90
g71
NtRp2747
(dp2748
g74
(dp2749
g101
g102
ssg83
g2738
sg76
(lp2750
S':'
asbag69
(g90
g71
NtRp2751
(dp2752
g74
(dp2753
sg83
g2738
sg76
(lp2754
g69
(g70
g71
NtRp2755
(dp2756
g74
(dp2757
g82
I3
ssg83
g2751
sg76
(lp2758
g1341
asbasbasbag69
(g85
g71
NtRp2759
(dp2760
g74
(dp2761
sg83
g2461
sg76
(lp2762
g69
(g90
g71
NtRp2763
(dp2764
g74
(dp2765
g94
g95
ssg83
g2759
sg76
(lp2766
S'REQUEST_METHOD'
p2767
asbag69
(g90
g71
NtRp2768
(dp2769
g74
(dp2770
g101
g102
ssg83
g2759
sg76
(lp2771
S':'
asbag69
(g90
g71
NtRp2772
(dp2773
g74
(dp2774
sg83
g2759
sg76
(lp2775
g69
(g70
g71
NtRp2776
(dp2777
g74
(dp2778
g82
I3
ssg83
g2772
sg76
(lp2779
g1363
asbasbasbag69
(g85
g71
NtRp2780
(dp2781
g74
(dp2782
sg83
g2461
sg76
(lp2783
g69
(g90
g71
NtRp2784
(dp2785
g74
(dp2786
g94
g95
ssg83
g2780
sg76
(lp2787
S'SCRIPT_NAME'
p2788
asbag69
(g90
g71
NtRp2789
(dp2790
g74
(dp2791
g101
g102
ssg83
g2780
sg76
(lp2792
S':'
asbag69
(g90
g71
NtRp2793
(dp2794
g74
(dp2795
sg83
g2780
sg76
(lp2796
g69
(g70
g71
NtRp2797
(dp2798
g74
(dp2799
g82
I3
ssg83
g2793
sg76
(lp2800
S''
asbasbasbag69
(g85
g71
NtRp2801
(dp2802
g74
(dp2803
sg83
g2461
sg76
(lp2804
g69
(g90
g71
NtRp2805
(dp2806
g74
(dp2807
g94
g95
ssg83
g2801
sg76
(lp2808
S'SERVER_NAME'
p2809
asbag69
(g90
g71
NtRp2810
(dp2811
g74
(dp2812
g101
g102
ssg83
g2801
sg76
(lp2813
S':'
asbag69
(g90
g71
NtRp2814
(dp2815
g74
(dp2816
sg83
g2801
sg76
(lp2817
g69
(g70
g71
NtRp2818
(dp2819
g74
(dp2820
g82
I3
ssg83
g2814
sg76
(lp2821
g1406
asbasbasbag69
(g85
g71
NtRp2822
(dp2823
g74
(dp2824
sg83
g2461
sg76
(lp2825
g69
(g90
g71
NtRp2826
(dp2827
g74
(dp2828
g94
g95
ssg83
g2822
sg76
(lp2829
S'SERVER_PORT'
p2830
asbag69
(g90
g71
NtRp2831
(dp2832
g74
(dp2833
g101
g102
ssg83
g2822
sg76
(lp2834
S':'
asbag69
(g90
g71
NtRp2835
(dp2836
g74
(dp2837
sg83
g2822
sg76
(lp2838
g69
(g70
g71
NtRp2839
(dp2840
g74
(dp2841
g82
I3
ssg83
g2835
sg76
(lp2842
g1428
asbasbasbag69
(g85
g71
NtRp2843
(dp2844
g74
(dp2845
sg83
g2461
sg76
(lp2846
g69
(g90
g71
NtRp2847
(dp2848
g74
(dp2849
g94
g95
ssg83
g2843
sg76
(lp2850
S'SERVER_PROTOCOL'
p2851
asbag69
(g90
g71
NtRp2852
(dp2853
g74
(dp2854
g101
g102
ssg83
g2843
sg76
(lp2855
S':'
asbag69
(g90
g71
NtRp2856
(dp2857
g74
(dp2858
sg83
g2843
sg76
(lp2859
g69
(g70
g71
NtRp2860
(dp2861
g74
(dp2862
g82
I3
ssg83
g2856
sg76
(lp2863
g1450
asbasbasbag69
(g85
g71
NtRp2864
(dp2865
g74
(dp2866
sg83
g2461
sg76
(lp2867
g69
(g90
g71
NtRp2868
(dp2869
g74
(dp2870
g94
g95
ssg83
g2864
sg76
(lp2871
S'SERVER_SOFTWARE'
p2872
asbag69
(g90
g71
NtRp2873
(dp2874
g74
(dp2875
g101
g102
ssg83
g2864
sg76
(lp2876
S':'
asbag69
(g90
g71
NtRp2877
(dp2878
g74
(dp2879
sg83
g2864
sg76
(lp2880
g69
(g70
g71
NtRp2881
(dp2882
g74
(dp2883
g82
I3
ssg83
g2877
sg76
(lp2884
g1472
asbasbasbag69
(g85
g71
NtRp2885
(dp2886
g74
(dp2887
sg83
g2461
sg76
(lp2888
g69
(g90
g71
NtRp2889
(dp2890
g74
(dp2891
g94
g95
ssg83
g2885
sg76
(lp2892
S'wsgi.errors'
p2893
asbag69
(g90
g71
NtRp2894
(dp2895
g74
(dp2896
g101
g102
ssg83
g2885
sg76
(lp2897
S':'
asbag69
(g90
g71
NtRp2898
(dp2899
g74
(dp2900
sg83
g2885
sg76
(lp2901
g69
(g70
g71
NtRp2902
(dp2903
g74
(dp2904
g82
I3
ssg83
g2898
sg76
(lp2905
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p2906
asbasbasbag69
(g85
g71
NtRp2907
(dp2908
g74
(dp2909
sg83
g2461
sg76
(lp2910
g69
(g90
g71
NtRp2911
(dp2912
g74
(dp2913
g94
g95
ssg83
g2907
sg76
(lp2914
S'wsgi.file_wrapper'
p2915
asbag69
(g90
g71
NtRp2916
(dp2917
g74
(dp2918
g101
g102
ssg83
g2907
sg76
(lp2919
S':'
asbag69
(g90
g71
NtRp2920
(dp2921
g74
(dp2922
sg83
g2907
sg76
(lp2923
g69
(g70
g71
NtRp2924
(dp2925
g74
(dp2926
g82
I3
ssg83
g2920
sg76
(lp2927
S'<class wsgiref.util.FileWrapper at 0x101a17328>'
p2928
asbasbasbag69
(g85
g71
NtRp2929
(dp2930
g74
(dp2931
sg83
g2461
sg76
(lp2932
g69
(g90
g71
NtRp2933
(dp2934
g74
(dp2935
g94
g95
ssg83
g2929
sg76
(lp2936
S'wsgi.input'
p2937
asbag69
(g90
g71
NtRp2938
(dp2939
g74
(dp2940
g101
g102
ssg83
g2929
sg76
(lp2941
S':'
asbag69
(g90
g71
NtRp2942
(dp2943
g74
(dp2944
sg83
g2929
sg76
(lp2945
g69
(g70
g71
NtRp2946
(dp2947
g74
(dp2948
g82
I3
ssg83
g2942
sg76
(lp2949
S'<cStringIO.StringO object at 0x101f69618>'
p2950
asbasbasbag69
(g85
g71
NtRp2951
(dp2952
g74
(dp2953
sg83
g2461
sg76
(lp2954
g69
(g90
g71
NtRp2955
(dp2956
g74
(dp2957
g94
g95
ssg83
g2951
sg76
(lp2958
S'wsgi.multiprocess'
p2959
asbag69
(g90
g71
NtRp2960
(dp2961
g74
(dp2962
g101
g102
ssg83
g2951
sg76
(lp2963
S':'
asbag69
(g90
g71
NtRp2964
(dp2965
g74
(dp2966
sg83
g2951
sg76
(lp2967
g69
(g70
g71
NtRp2968
(dp2969
g74
(dp2970
g82
I3
ssg83
g2964
sg76
(lp2971
g112
asbasbasbag69
(g85
g71
NtRp2972
(dp2973
g74
(dp2974
sg83
g2461
sg76
(lp2975
g69
(g90
g71
NtRp2976
(dp2977
g74
(dp2978
g94
g95
ssg83
g2972
sg76
(lp2979
S'wsgi.multithread'
p2980
asbag69
(g90
g71
NtRp2981
(dp2982
g74
(dp2983
g101
g102
ssg83
g2972
sg76
(lp2984
S':'
asbag69
(g90
g71
NtRp2985
(dp2986
g74
(dp2987
sg83
g2972
sg76
(lp2988
g69
(g70
g71
NtRp2989
(dp2990
g74
(dp2991
g82
I3
ssg83
g2985
sg76
(lp2992
g1712
asbasbasbag69
(g85
g71
NtRp2993
(dp2994
g74
(dp2995
sg83
g2461
sg76
(lp2996
g69
(g90
g71
NtRp2997
(dp2998
g74
(dp2999
g94
g95
ssg83
g2993
sg76
(lp3000
S'wsgi.run_once'
p3001
asbag69
(g90
g71
NtRp3002
(dp3003
g74
(dp3004
g101
g102
ssg83
g2993
sg76
(lp3005
S':'
asbag69
(g90
g71
NtRp3006
(dp3007
g74
(dp3008
sg83
g2993
sg76
(lp3009
g69
(g70
g71
NtRp3010
(dp3011
g74
(dp3012
g82
I3
ssg83
g3006
sg76
(lp3013
g112
asbasbasbag69
(g85
g71
NtRp3014
(dp3015
g74
(dp3016
sg83
g2461
sg76
(lp3017
g69
(g90
g71
NtRp3018
(dp3019
g74
(dp3020
g94
g95
ssg83
g3014
sg76
(lp3021
S'wsgi.url_scheme'
p3022
asbag69
(g90
g71
NtRp3023
(dp3024
g74
(dp3025
g101
g102
ssg83
g3014
sg76
(lp3026
S':'
asbag69
(g90
g71
NtRp3027
(dp3028
g74
(dp3029
sg83
g3014
sg76
(lp3030
g69
(g70
g71
NtRp3031
(dp3032
g74
(dp3033
g82
I3
ssg83
g3027
sg76
(lp3034
g1755
asbasbasbag69
(g85
g71
NtRp3035
(dp3036
g74
(dp3037
sg83
g2461
sg76
(lp3038
g69
(g90
g71
NtRp3039
(dp3040
g74
(dp3041
g94
g95
ssg83
g3035
sg76
(lp3042
S'wsgi.version'
p3043
asbag69
(g90
g71
NtRp3044
(dp3045
g74
(dp3046
g101
g102
ssg83
g3035
sg76
(lp3047
S':'
asbag69
(g90
g71
NtRp3048
(dp3049
g74
(dp3050
sg83
g3035
sg76
(lp3051
g69
(g70
g71
NtRp3052
(dp3053
g74
(dp3054
g82
I3
ssg83
g3048
sg76
(lp3055
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3056
(lp3057
(dp3058
S'file'
p3059
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3060
sS'dump'
p3061
(dp3062
S'code'
p3063
S"'# -*- coding: utf-8 -*-\\n# this file is released ...l\\n\\nresponse._vars=response._caller(addtoproject)\\n'"
p3064
sS'layer'
p3065
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3066
sS'global compile2'
p3067
S'<function compile2>'
p3068
sS'ccode'
p3069
S'undefined'
p3070
ssS'lnum'
p3071
I204
sS'lines'
p3072
(dp3073
I199
S"    environment['__name__'] = '__restricted__'"
p3074
sI200
S'    try:'
p3075
sI201
S'        if type(code) == types.CodeType:'
p3076
sI202
S'            ccode = code'
p3077
sI203
S'        else:'
p3078
sI204
S'            ccode = compile2(code,layer)'
p3079
sI205
S'        exec ccode in environment'
p3080
sI206
S'    except HTTP:'
p3081
sI207
S'        raise'
p3082
sI208
S'    except RestrictedError:'
p3083
ssS'call'
p3084
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...l\\n\\nresponse._vars=response._caller(addtoproject)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3085
sS'func'
p3086
S'restricted'
p3087
sa(dp3088
g3059
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3089
sg3061
(dp3090
S'builtincompile'
p3091
S'<built-in function compile>'
p3092
sS'code'
p3093
S"'# -*- coding: utf-8 -*-\\n# this file is released ...l\\n\\nresponse._vars=response._caller(addtoproject)\\n'"
p3094
sS'code.rstrip'
p3095
S'<built-in method rstrip of str object>'
p3096
sS').replace'
p3097
g3070
sS'layer'
p3098
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3099
ssg3071
I189
sg3072
(dp3100
I192
S'    """'
p3101
sI193
S'    runs code in environment and returns the output. if an exception occurs'
p3102
sI184
S''
sI185
S'def compile2(code,layer):'
p3103
sI186
S'    """'
p3104
sI187
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p3105
sI188
S'    """'
p3106
sI189
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p3107
sI190
S''
sI191
S"def restricted(code, environment=None, layer='Unknown'):"
p3108
ssg3084
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...l\\n\\nresponse._vars=response._caller(addtoproject)\\n', layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3109
sg3086
S'compile2'
p3110
sasS'pyver'
p3111
S'Python 2.7.2: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python'
p3112
sS'session'
p3113
g69
(g70
g71
NtRp3114
(dp3115
g74
(dp3116
sg76
(lp3117
g69
(g78
g71
NtRp3118
(dp3119
g74
(dp3120
g82
I5
ssg83
Nsg76
(lp3121
g69
(g85
g71
NtRp3122
(dp3123
g74
(dp3124
sg83
g3118
sg76
(lp3125
g69
(g90
g71
NtRp3126
(dp3127
g74
(dp3128
g94
g95
ssg83
g3122
sg76
(lp3129
S'auth'
p3130
asbag69
(g90
g71
NtRp3131
(dp3132
g74
(dp3133
g101
g102
ssg83
g3122
sg76
(lp3134
S':'
asbag69
(g90
g71
NtRp3135
(dp3136
g74
(dp3137
sg83
g3122
sg76
(lp3138
g69
(g70
g71
NtRp3139
(dp3140
g74
(dp3141
g82
I5
ssg83
g3135
sg76
(lp3142
g69
(g78
g71
NtRp3143
(dp3144
g74
(dp3145
g82
I4
ssg83
Nsg76
(lp3146
g69
(g85
g71
NtRp3147
(dp3148
g74
(dp3149
sg83
g3143
sg76
(lp3150
g69
(g90
g71
NtRp3151
(dp3152
g74
(dp3153
g94
g95
ssg83
g3147
sg76
(lp3154
S'expiration'
p3155
asbag69
(g90
g71
NtRp3156
(dp3157
g74
(dp3158
g101
g102
ssg83
g3147
sg76
(lp3159
S':'
asbag69
(g90
g71
NtRp3160
(dp3161
g74
(dp3162
sg83
g3147
sg76
(lp3163
g69
(g70
g71
NtRp3164
(dp3165
g74
(dp3166
g82
I4
ssg83
g3160
sg76
(lp3167
S'3600'
p3168
asbasbasbag69
(g85
g71
NtRp3169
(dp3170
g74
(dp3171
sg83
g3143
sg76
(lp3172
g69
(g90
g71
NtRp3173
(dp3174
g74
(dp3175
g94
g95
ssg83
g3169
sg76
(lp3176
S'hmac_key'
p3177
asbag69
(g90
g71
NtRp3178
(dp3179
g74
(dp3180
g101
g102
ssg83
g3169
sg76
(lp3181
S':'
asbag69
(g90
g71
NtRp3182
(dp3183
g74
(dp3184
sg83
g3169
sg76
(lp3185
g69
(g70
g71
NtRp3186
(dp3187
g74
(dp3188
g82
I4
ssg83
g3182
sg76
(lp3189
S'3b0e0e2b-beca-4e51-9eea-b2f20cb02532'
p3190
asbasbasbag69
(g85
g71
NtRp3191
(dp3192
g74
(dp3193
sg83
g3143
sg76
(lp3194
g69
(g90
g71
NtRp3195
(dp3196
g74
(dp3197
g94
g95
ssg83
g3191
sg76
(lp3198
S'last_visit'
p3199
asbag69
(g90
g71
NtRp3200
(dp3201
g74
(dp3202
g101
g102
ssg83
g3191
sg76
(lp3203
S':'
asbag69
(g90
g71
NtRp3204
(dp3205
g74
(dp3206
sg83
g3191
sg76
(lp3207
g69
(g70
g71
NtRp3208
(dp3209
g74
(dp3210
g82
I4
ssg83
g3204
sg76
(lp3211
S'datetime.datetime(2013, 4, 16, 15, 40, 29, 119512)'
p3212
asbasbasbag69
(g85
g71
NtRp3213
(dp3214
g74
(dp3215
sg83
g3143
sg76
(lp3216
g69
(g90
g71
NtRp3217
(dp3218
g74
(dp3219
g94
g95
ssg83
g3213
sg76
(lp3220
S'remember'
p3221
asbag69
(g90
g71
NtRp3222
(dp3223
g74
(dp3224
g101
g102
ssg83
g3213
sg76
(lp3225
S':'
asbag69
(g90
g71
NtRp3226
(dp3227
g74
(dp3228
sg83
g3213
sg76
(lp3229
g69
(g70
g71
NtRp3230
(dp3231
g74
(dp3232
g82
I4
ssg83
g3226
sg76
(lp3233
g112
asbasbasbag69
(g85
g71
NtRp3234
(dp3235
g74
(dp3236
sg83
g3143
sg76
(lp3237
g69
(g90
g71
NtRp3238
(dp3239
g74
(dp3240
g94
g95
ssg83
g3234
sg76
(lp3241
S'user'
p3242
asbag69
(g90
g71
NtRp3243
(dp3244
g74
(dp3245
g101
g102
ssg83
g3234
sg76
(lp3246
S':'
asbag69
(g90
g71
NtRp3247
(dp3248
g74
(dp3249
sg83
g3234
sg76
(lp3250
g69
(g70
g71
NtRp3251
(dp3252
g74
(dp3253
g82
I4
ssg83
g3247
sg76
(lp3254
g69
(g78
g71
NtRp3255
(dp3256
g74
(dp3257
g82
I3
ssg83
Nsg76
(lp3258
g69
(g85
g71
NtRp3259
(dp3260
g74
(dp3261
sg83
g3255
sg76
(lp3262
g69
(g90
g71
NtRp3263
(dp3264
g74
(dp3265
g94
g95
ssg83
g3259
sg76
(lp3266
S'email'
p3267
asbag69
(g90
g71
NtRp3268
(dp3269
g74
(dp3270
g101
g102
ssg83
g3259
sg76
(lp3271
S':'
asbag69
(g90
g71
NtRp3272
(dp3273
g74
(dp3274
sg83
g3259
sg76
(lp3275
g69
(g70
g71
NtRp3276
(dp3277
g74
(dp3278
g82
I3
ssg83
g3272
sg76
(lp3279
S'hainna01@luther.edu'
p3280
asbasbasbag69
(g85
g71
NtRp3281
(dp3282
g74
(dp3283
sg83
g3255
sg76
(lp3284
g69
(g90
g71
NtRp3285
(dp3286
g74
(dp3287
g94
g95
ssg83
g3281
sg76
(lp3288
S'first_name'
p3289
asbag69
(g90
g71
NtRp3290
(dp3291
g74
(dp3292
g101
g102
ssg83
g3281
sg76
(lp3293
S':'
asbag69
(g90
g71
NtRp3294
(dp3295
g74
(dp3296
sg83
g3281
sg76
(lp3297
g69
(g70
g71
NtRp3298
(dp3299
g74
(dp3300
g82
I3
ssg83
g3294
sg76
(lp3301
S'Nathan'
p3302
asbasbasbag69
(g85
g71
NtRp3303
(dp3304
g74
(dp3305
sg83
g3255
sg76
(lp3306
g69
(g90
g71
NtRp3307
(dp3308
g74
(dp3309
g94
g95
ssg83
g3303
sg76
(lp3310
S'id'
p3311
asbag69
(g90
g71
NtRp3312
(dp3313
g74
(dp3314
g101
g102
ssg83
g3303
sg76
(lp3315
S':'
asbag69
(g90
g71
NtRp3316
(dp3317
g74
(dp3318
sg83
g3303
sg76
(lp3319
g69
(g70
g71
NtRp3320
(dp3321
g74
(dp3322
g82
I3
ssg83
g3316
sg76
(lp3323
S'1'
asbasbasbag69
(g85
g71
NtRp3324
(dp3325
g74
(dp3326
sg83
g3255
sg76
(lp3327
g69
(g90
g71
NtRp3328
(dp3329
g74
(dp3330
g94
g95
ssg83
g3324
sg76
(lp3331
S'last_name'
p3332
asbag69
(g90
g71
NtRp3333
(dp3334
g74
(dp3335
g101
g102
ssg83
g3324
sg76
(lp3336
S':'
asbag69
(g90
g71
NtRp3337
(dp3338
g74
(dp3339
sg83
g3324
sg76
(lp3340
g69
(g70
g71
NtRp3341
(dp3342
g74
(dp3343
g82
I3
ssg83
g3337
sg76
(lp3344
S'Haines'
p3345
asbasbasbag69
(g85
g71
NtRp3346
(dp3347
g74
(dp3348
sg83
g3255
sg76
(lp3349
g69
(g90
g71
NtRp3350
(dp3351
g74
(dp3352
g94
g95
ssg83
g3346
sg76
(lp3353
S'password'
p3354
asbag69
(g90
g71
NtRp3355
(dp3356
g74
(dp3357
g101
g102
ssg83
g3346
sg76
(lp3358
S':'
asbag69
(g90
g71
NtRp3359
(dp3360
g74
(dp3361
sg83
g3346
sg76
(lp3362
g69
(g70
g71
NtRp3363
(dp3364
g74
(dp3365
g82
I3
ssg83
g3359
sg76
(lp3366
S'2294263917c888315d89d599c6f77108'
p3367
asbasbasbag69
(g85
g71
NtRp3368
(dp3369
g74
(dp3370
sg83
g3255
sg76
(lp3371
g69
(g90
g71
NtRp3372
(dp3373
g74
(dp3374
g94
g95
ssg83
g3368
sg76
(lp3375
S'phone'
p3376
asbag69
(g90
g71
NtRp3377
(dp3378
g74
(dp3379
g101
g102
ssg83
g3368
sg76
(lp3380
S':'
asbag69
(g90
g71
NtRp3381
(dp3382
g74
(dp3383
sg83
g3368
sg76
(lp3384
g69
(g70
g71
NtRp3385
(dp3386
g74
(dp3387
g82
I3
ssg83
g3381
sg76
(lp3388
S''
asbasbasbag69
(g85
g71
NtRp3389
(dp3390
g74
(dp3391
sg83
g3255
sg76
(lp3392
g69
(g90
g71
NtRp3393
(dp3394
g74
(dp3395
g94
g95
ssg83
g3389
sg76
(lp3396
S'projects'
p3397
asbag69
(g90
g71
NtRp3398
(dp3399
g74
(dp3400
g101
g102
ssg83
g3389
sg76
(lp3401
S':'
asbag69
(g90
g71
NtRp3402
(dp3403
g74
(dp3404
sg83
g3389
sg76
(lp3405
g69
(g70
g71
NtRp3406
(dp3407
g74
(dp3408
g82
I3
ssg83
g3402
sg76
(lp3409
g69
(g78
g71
NtRp3410
(dp3411
g74
(dp3412
g82
I2
ssg83
Nsg76
(lp3413
g69
(g85
g71
NtRp3414
(dp3415
g74
(dp3416
sg83
g3410
sg76
(lp3417
g69
(g90
g71
NtRp3418
(dp3419
g74
(dp3420
sg83
g3414
sg76
(lp3421
g69
(g70
g71
NtRp3422
(dp3423
g74
(dp3424
g82
I2
ssg83
g3418
sg76
(lp3425
S'144'
p3426
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3427
(dp3428
g74
(dp3429
sg83
g3255
sg76
(lp3430
g69
(g90
g71
NtRp3431
(dp3432
g74
(dp3433
g94
g95
ssg83
g3427
sg76
(lp3434
S'registration_id'
p3435
asbag69
(g90
g71
NtRp3436
(dp3437
g74
(dp3438
g101
g102
ssg83
g3427
sg76
(lp3439
S':'
asbag69
(g90
g71
NtRp3440
(dp3441
g74
(dp3442
sg83
g3427
sg76
(lp3443
g69
(g70
g71
NtRp3444
(dp3445
g74
(dp3446
g82
I3
ssg83
g3440
sg76
(lp3447
S''
asbasbasbag69
(g85
g71
NtRp3448
(dp3449
g74
(dp3450
sg83
g3255
sg76
(lp3451
g69
(g90
g71
NtRp3452
(dp3453
g74
(dp3454
g94
g95
ssg83
g3448
sg76
(lp3455
S'registration_key'
p3456
asbag69
(g90
g71
NtRp3457
(dp3458
g74
(dp3459
g101
g102
ssg83
g3448
sg76
(lp3460
S':'
asbag69
(g90
g71
NtRp3461
(dp3462
g74
(dp3463
sg83
g3448
sg76
(lp3464
g69
(g70
g71
NtRp3465
(dp3466
g74
(dp3467
g82
I3
ssg83
g3461
sg76
(lp3468
S''
asbasbasbag69
(g85
g71
NtRp3469
(dp3470
g74
(dp3471
sg83
g3255
sg76
(lp3472
g69
(g90
g71
NtRp3473
(dp3474
g74
(dp3475
g94
g95
ssg83
g3469
sg76
(lp3476
S'reset_password_key'
p3477
asbag69
(g90
g71
NtRp3478
(dp3479
g74
(dp3480
g101
g102
ssg83
g3469
sg76
(lp3481
S':'
asbag69
(g90
g71
NtRp3482
(dp3483
g74
(dp3484
sg83
g3469
sg76
(lp3485
g69
(g70
g71
NtRp3486
(dp3487
g74
(dp3488
g82
I3
ssg83
g3482
sg76
(lp3489
S''
asbasbasbag69
(g85
g71
NtRp3490
(dp3491
g74
(dp3492
sg83
g3255
sg76
(lp3493
g69
(g90
g71
NtRp3494
(dp3495
g74
(dp3496
g94
g95
ssg83
g3490
sg76
(lp3497
S'role'
p3498
asbag69
(g90
g71
NtRp3499
(dp3500
g74
(dp3501
g101
g102
ssg83
g3490
sg76
(lp3502
S':'
asbag69
(g90
g71
NtRp3503
(dp3504
g74
(dp3505
sg83
g3490
sg76
(lp3506
g69
(g70
g71
NtRp3507
(dp3508
g74
(dp3509
g82
I3
ssg83
g3503
sg76
(lp3510
S'Cool Man'
p3511
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3512
(dp3513
g74
(dp3514
sg83
g3143
sg76
(lp3515
g69
(g90
g71
NtRp3516
(dp3517
g74
(dp3518
g94
g95
ssg83
g3512
sg76
(lp3519
S'user_groups'
p3520
asbag69
(g90
g71
NtRp3521
(dp3522
g74
(dp3523
g101
g102
ssg83
g3512
sg76
(lp3524
S':'
asbag69
(g90
g71
NtRp3525
(dp3526
g74
(dp3527
sg83
g3512
sg76
(lp3528
g69
(g70
g71
NtRp3529
(dp3530
g74
(dp3531
g82
I4
ssg83
g3525
sg76
(lp3532
g69
(g78
g71
NtRp3533
(dp3534
g74
(dp3535
g82
I3
ssg83
Nsg76
(lp3536
g69
(g85
g71
NtRp3537
(dp3538
g74
(dp3539
sg83
g3533
sg76
(lp3540
g69
(g90
g71
NtRp3541
(dp3542
g74
(dp3543
g94
g95
ssg83
g3537
sg76
(lp3544
S'2'
asbag69
(g90
g71
NtRp3545
(dp3546
g74
(dp3547
g101
g102
ssg83
g3537
sg76
(lp3548
S':'
asbag69
(g90
g71
NtRp3549
(dp3550
g74
(dp3551
sg83
g3537
sg76
(lp3552
g69
(g70
g71
NtRp3553
(dp3554
g74
(dp3555
g82
I3
ssg83
g3549
sg76
(lp3556
S'Admin'
p3557
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3558
(dp3559
g74
(dp3560
sg83
g3118
sg76
(lp3561
g69
(g90
g71
NtRp3562
(dp3563
g74
(dp3564
g94
g95
ssg83
g3558
sg76
(lp3565
S'last_query'
p3566
asbag69
(g90
g71
NtRp3567
(dp3568
g74
(dp3569
g101
g102
ssg83
g3558
sg76
(lp3570
S':'
asbag69
(g90
g71
NtRp3571
(dp3572
g74
(dp3573
sg83
g3558
sg76
(lp3574
g69
(g70
g71
NtRp3575
(dp3576
g74
(dp3577
g82
I5
ssg83
g3571
sg76
(lp3578
S'db.auth_user.id>0'
p3579
asbasbasbasbasbsS'etype'
p3580
S"<type 'exceptions.SyntaxError'>"
p3581
sS'date'
p3582
S'Tue Apr 16 15:41:06 2013'
p3583
sS'response'
p3584
g69
(g70
g71
NtRp3585
(dp3586
g74
(dp3587
sg76
(lp3588
g69
(g78
g71
NtRp3589
(dp3590
g74
(dp3591
g82
I5
ssg83
Nsg76
(lp3592
g69
(g85
g71
NtRp3593
(dp3594
g74
(dp3595
sg83
g3589
sg76
(lp3596
g69
(g90
g71
NtRp3597
(dp3598
g74
(dp3599
g94
g95
ssg83
g3593
sg76
(lp3600
g167
asbag69
(g90
g71
NtRp3601
(dp3602
g74
(dp3603
g101
g102
ssg83
g3593
sg76
(lp3604
S':'
asbag69
(g90
g71
NtRp3605
(dp3606
g74
(dp3607
sg83
g3593
sg76
(lp3608
g69
(g70
g71
NtRp3609
(dp3610
g74
(dp3611
g82
I5
ssg83
g3605
sg76
(lp3612
S'<cStringIO.StringO object at 0x101f69180>'
p3613
asbasbasbag69
(g85
g71
NtRp3614
(dp3615
g74
(dp3616
sg83
g3589
sg76
(lp3617
g69
(g90
g71
NtRp3618
(dp3619
g74
(dp3620
g94
g95
ssg83
g3614
sg76
(lp3621
g233
asbag69
(g90
g71
NtRp3622
(dp3623
g74
(dp3624
g101
g102
ssg83
g3614
sg76
(lp3625
S':'
asbag69
(g90
g71
NtRp3626
(dp3627
g74
(dp3628
sg83
g3614
sg76
(lp3629
g69
(g70
g71
NtRp3630
(dp3631
g74
(dp3632
g82
I5
ssg83
g3626
sg76
(lp3633
g69
(g78
g71
NtRp3634
(dp3635
g74
(dp3636
g82
I4
ssg83
Nsg76
(lp3637
g69
(g85
g71
NtRp3638
(dp3639
g74
(dp3640
sg83
g3634
sg76
(lp3641
g69
(g90
g71
NtRp3642
(dp3643
g74
(dp3644
g94
g95
ssg83
g3638
sg76
(lp3645
S'session_id_seniorproject'
p3646
asbag69
(g90
g71
NtRp3647
(dp3648
g74
(dp3649
g101
g102
ssg83
g3638
sg76
(lp3650
S':'
asbag69
(g90
g71
NtRp3651
(dp3652
g74
(dp3653
sg83
g3638
sg76
(lp3654
g69
(g70
g71
NtRp3655
(dp3656
g74
(dp3657
g82
I4
ssg83
g3651
sg76
(lp3658
g69
(g78
g71
NtRp3659
(dp3660
g74
(dp3661
g82
I3
ssg83
Nsg76
(lp3662
g69
(g85
g71
NtRp3663
(dp3664
g74
(dp3665
sg83
g3659
sg76
(lp3666
g69
(g90
g71
NtRp3667
(dp3668
g74
(dp3669
g94
g95
ssg83
g3663
sg76
(lp3670
g283
asbag69
(g90
g71
NtRp3671
(dp3672
g74
(dp3673
g101
g102
ssg83
g3663
sg76
(lp3674
S':'
asbag69
(g90
g71
NtRp3675
(dp3676
g74
(dp3677
sg83
g3663
sg76
(lp3678
g69
(g70
g71
NtRp3679
(dp3680
g74
(dp3681
g82
I3
ssg83
g3675
sg76
(lp3682
S''
asbasbasbag69
(g85
g71
NtRp3683
(dp3684
g74
(dp3685
sg83
g3659
sg76
(lp3686
g69
(g90
g71
NtRp3687
(dp3688
g74
(dp3689
g94
g95
ssg83
g3683
sg76
(lp3690
g304
asbag69
(g90
g71
NtRp3691
(dp3692
g74
(dp3693
g101
g102
ssg83
g3683
sg76
(lp3694
S':'
asbag69
(g90
g71
NtRp3695
(dp3696
g74
(dp3697
sg83
g3683
sg76
(lp3698
g69
(g70
g71
NtRp3699
(dp3700
g74
(dp3701
g82
I3
ssg83
g3695
sg76
(lp3702
S''
asbasbasbag69
(g85
g71
NtRp3703
(dp3704
g74
(dp3705
sg83
g3659
sg76
(lp3706
g69
(g90
g71
NtRp3707
(dp3708
g74
(dp3709
g94
g95
ssg83
g3703
sg76
(lp3710
g325
asbag69
(g90
g71
NtRp3711
(dp3712
g74
(dp3713
g101
g102
ssg83
g3703
sg76
(lp3714
S':'
asbag69
(g90
g71
NtRp3715
(dp3716
g74
(dp3717
sg83
g3703
sg76
(lp3718
g69
(g70
g71
NtRp3719
(dp3720
g74
(dp3721
g82
I3
ssg83
g3715
sg76
(lp3722
S''
asbasbasbag69
(g85
g71
NtRp3723
(dp3724
g74
(dp3725
sg83
g3659
sg76
(lp3726
g69
(g90
g71
NtRp3727
(dp3728
g74
(dp3729
g94
g95
ssg83
g3723
sg76
(lp3730
g346
asbag69
(g90
g71
NtRp3731
(dp3732
g74
(dp3733
g101
g102
ssg83
g3723
sg76
(lp3734
S':'
asbag69
(g90
g71
NtRp3735
(dp3736
g74
(dp3737
sg83
g3723
sg76
(lp3738
g69
(g70
g71
NtRp3739
(dp3740
g74
(dp3741
g82
I3
ssg83
g3735
sg76
(lp3742
S''
asbasbasbag69
(g85
g71
NtRp3743
(dp3744
g74
(dp3745
sg83
g3659
sg76
(lp3746
g69
(g90
g71
NtRp3747
(dp3748
g74
(dp3749
g94
g95
ssg83
g3743
sg76
(lp3750
g367
asbag69
(g90
g71
NtRp3751
(dp3752
g74
(dp3753
g101
g102
ssg83
g3743
sg76
(lp3754
S':'
asbag69
(g90
g71
NtRp3755
(dp3756
g74
(dp3757
sg83
g3743
sg76
(lp3758
g69
(g70
g71
NtRp3759
(dp3760
g74
(dp3761
g82
I3
ssg83
g3755
sg76
(lp3762
S''
asbasbasbag69
(g85
g71
NtRp3763
(dp3764
g74
(dp3765
sg83
g3659
sg76
(lp3766
g69
(g90
g71
NtRp3767
(dp3768
g74
(dp3769
g94
g95
ssg83
g3763
sg76
(lp3770
g388
asbag69
(g90
g71
NtRp3771
(dp3772
g74
(dp3773
g101
g102
ssg83
g3763
sg76
(lp3774
S':'
asbag69
(g90
g71
NtRp3775
(dp3776
g74
(dp3777
sg83
g3763
sg76
(lp3778
g69
(g70
g71
NtRp3779
(dp3780
g74
(dp3781
g82
I3
ssg83
g3775
sg76
(lp3782
S'/'
asbasbasbag69
(g85
g71
NtRp3783
(dp3784
g74
(dp3785
sg83
g3659
sg76
(lp3786
g69
(g90
g71
NtRp3787
(dp3788
g74
(dp3789
g94
g95
ssg83
g3783
sg76
(lp3790
g409
asbag69
(g90
g71
NtRp3791
(dp3792
g74
(dp3793
g101
g102
ssg83
g3783
sg76
(lp3794
S':'
asbag69
(g90
g71
NtRp3795
(dp3796
g74
(dp3797
sg83
g3783
sg76
(lp3798
g69
(g70
g71
NtRp3799
(dp3800
g74
(dp3801
g82
I3
ssg83
g3795
sg76
(lp3802
S''
asbasbasbag69
(g85
g71
NtRp3803
(dp3804
g74
(dp3805
sg83
g3659
sg76
(lp3806
g69
(g90
g71
NtRp3807
(dp3808
g74
(dp3809
g94
g95
ssg83
g3803
sg76
(lp3810
g430
asbag69
(g90
g71
NtRp3811
(dp3812
g74
(dp3813
g101
g102
ssg83
g3803
sg76
(lp3814
S':'
asbag69
(g90
g71
NtRp3815
(dp3816
g74
(dp3817
sg83
g3803
sg76
(lp3818
g69
(g70
g71
NtRp3819
(dp3820
g74
(dp3821
g82
I3
ssg83
g3815
sg76
(lp3822
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3823
(dp3824
g74
(dp3825
sg83
g3589
sg76
(lp3826
g69
(g90
g71
NtRp3827
(dp3828
g74
(dp3829
g94
g95
ssg83
g3823
sg76
(lp3830
S'delimiters'
p3831
asbag69
(g90
g71
NtRp3832
(dp3833
g74
(dp3834
g101
g102
ssg83
g3823
sg76
(lp3835
S':'
asbag69
(g90
g71
NtRp3836
(dp3837
g74
(dp3838
sg83
g3823
sg76
(lp3839
g69
(g70
g71
NtRp3840
(dp3841
g74
(dp3842
g82
I5
ssg83
g3836
sg76
(lp3843
g69
(g78
g71
NtRp3844
(dp3845
g74
(dp3846
g82
I4
ssg83
Nsg76
(lp3847
g69
(g85
g71
NtRp3848
(dp3849
g74
(dp3850
sg83
g3844
sg76
(lp3851
g69
(g90
g71
NtRp3852
(dp3853
g74
(dp3854
sg83
g3848
sg76
(lp3855
g69
(g70
g71
NtRp3856
(dp3857
g74
(dp3858
g82
I4
ssg83
g3852
sg76
(lp3859
S'{{'
p3860
asbasbasbag69
(g85
g71
NtRp3861
(dp3862
g74
(dp3863
sg83
g3844
sg76
(lp3864
g69
(g90
g71
NtRp3865
(dp3866
g74
(dp3867
sg83
g3861
sg76
(lp3868
g69
(g70
g71
NtRp3869
(dp3870
g74
(dp3871
g82
I4
ssg83
g3865
sg76
(lp3872
S'}}'
p3873
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3874
(dp3875
g74
(dp3876
sg83
g3589
sg76
(lp3877
g69
(g90
g71
NtRp3878
(dp3879
g74
(dp3880
g94
g95
ssg83
g3874
sg76
(lp3881
S'files'
p3882
asbag69
(g90
g71
NtRp3883
(dp3884
g74
(dp3885
g101
g102
ssg83
g3874
sg76
(lp3886
S':'
asbag69
(g90
g71
NtRp3887
(dp3888
g74
(dp3889
sg83
g3874
sg76
(lp3890
g69
(g70
g71
NtRp3891
(dp3892
g74
(dp3893
g82
I5
ssg83
g3887
sg76
(lp3894
g69
(g78
g71
NtRp3895
(dp3896
g74
(dp3897
g82
I4
ssg83
Nsg76
(lp3898
sbasbasbasbag69
(g85
g71
NtRp3899
(dp3900
g74
(dp3901
sg83
g3589
sg76
(lp3902
g69
(g90
g71
NtRp3903
(dp3904
g74
(dp3905
g94
g95
ssg83
g3899
sg76
(lp3906
S'flash'
p3907
asbag69
(g90
g71
NtRp3908
(dp3909
g74
(dp3910
g101
g102
ssg83
g3899
sg76
(lp3911
S':'
asbag69
(g90
g71
NtRp3912
(dp3913
g74
(dp3914
sg83
g3899
sg76
(lp3915
g69
(g70
g71
NtRp3916
(dp3917
g74
(dp3918
g82
I5
ssg83
g3912
sg76
(lp3919
S''
asbasbasbag69
(g85
g71
NtRp3920
(dp3921
g74
(dp3922
sg83
g3589
sg76
(lp3923
g69
(g90
g71
NtRp3924
(dp3925
g74
(dp3926
g94
g95
ssg83
g3920
sg76
(lp3927
S'generic_patterns'
p3928
asbag69
(g90
g71
NtRp3929
(dp3930
g74
(dp3931
g101
g102
ssg83
g3920
sg76
(lp3932
S':'
asbag69
(g90
g71
NtRp3933
(dp3934
g74
(dp3935
sg83
g3920
sg76
(lp3936
g69
(g70
g71
NtRp3937
(dp3938
g74
(dp3939
g82
I5
ssg83
g3933
sg76
(lp3940
g69
(g78
g71
NtRp3941
(dp3942
g74
(dp3943
g82
I4
ssg83
Nsg76
(lp3944
g69
(g85
g71
NtRp3945
(dp3946
g74
(dp3947
sg83
g3941
sg76
(lp3948
g69
(g90
g71
NtRp3949
(dp3950
g74
(dp3951
sg83
g3945
sg76
(lp3952
g69
(g70
g71
NtRp3953
(dp3954
g74
(dp3955
g82
I4
ssg83
g3949
sg76
(lp3956
S'*'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3957
(dp3958
g74
(dp3959
sg83
g3589
sg76
(lp3960
g69
(g90
g71
NtRp3961
(dp3962
g74
(dp3963
g94
g95
ssg83
g3957
sg76
(lp3964
S'headers'
p3965
asbag69
(g90
g71
NtRp3966
(dp3967
g74
(dp3968
g101
g102
ssg83
g3957
sg76
(lp3969
S':'
asbag69
(g90
g71
NtRp3970
(dp3971
g74
(dp3972
sg83
g3957
sg76
(lp3973
g69
(g70
g71
NtRp3974
(dp3975
g74
(dp3976
g82
I5
ssg83
g3970
sg76
(lp3977
g69
(g78
g71
NtRp3978
(dp3979
g74
(dp3980
g82
I4
ssg83
Nsg76
(lp3981
g69
(g85
g71
NtRp3982
(dp3983
g74
(dp3984
sg83
g3978
sg76
(lp3985
g69
(g90
g71
NtRp3986
(dp3987
g74
(dp3988
g94
g95
ssg83
g3982
sg76
(lp3989
S'Cache-Control'
p3990
asbag69
(g90
g71
NtRp3991
(dp3992
g74
(dp3993
g101
g102
ssg83
g3982
sg76
(lp3994
S':'
asbag69
(g90
g71
NtRp3995
(dp3996
g74
(dp3997
sg83
g3982
sg76
(lp3998
g69
(g70
g71
NtRp3999
(dp4000
g74
(dp4001
g82
I4
ssg83
g3995
sg76
(lp4002
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p4003
asbasbasbag69
(g85
g71
NtRp4004
(dp4005
g74
(dp4006
sg83
g3978
sg76
(lp4007
g69
(g90
g71
NtRp4008
(dp4009
g74
(dp4010
g94
g95
ssg83
g4004
sg76
(lp4011
S'Content-Type'
p4012
asbag69
(g90
g71
NtRp4013
(dp4014
g74
(dp4015
g101
g102
ssg83
g4004
sg76
(lp4016
S':'
asbag69
(g90
g71
NtRp4017
(dp4018
g74
(dp4019
sg83
g4004
sg76
(lp4020
g69
(g70
g71
NtRp4021
(dp4022
g74
(dp4023
g82
I4
ssg83
g4017
sg76
(lp4024
S'text/html; charset=utf-8'
p4025
asbasbasbag69
(g85
g71
NtRp4026
(dp4027
g74
(dp4028
sg83
g3978
sg76
(lp4029
g69
(g90
g71
NtRp4030
(dp4031
g74
(dp4032
g94
g95
ssg83
g4026
sg76
(lp4033
S'Expires'
p4034
asbag69
(g90
g71
NtRp4035
(dp4036
g74
(dp4037
g101
g102
ssg83
g4026
sg76
(lp4038
S':'
asbag69
(g90
g71
NtRp4039
(dp4040
g74
(dp4041
sg83
g4026
sg76
(lp4042
g69
(g70
g71
NtRp4043
(dp4044
g74
(dp4045
g82
I4
ssg83
g4039
sg76
(lp4046
S'Tue, 16 Apr 2013 20:41:06 GMT'
p4047
asbasbasbag69
(g85
g71
NtRp4048
(dp4049
g74
(dp4050
sg83
g3978
sg76
(lp4051
g69
(g90
g71
NtRp4052
(dp4053
g74
(dp4054
g94
g95
ssg83
g4048
sg76
(lp4055
S'Pragma'
p4056
asbag69
(g90
g71
NtRp4057
(dp4058
g74
(dp4059
g101
g102
ssg83
g4048
sg76
(lp4060
S':'
asbag69
(g90
g71
NtRp4061
(dp4062
g74
(dp4063
sg83
g4048
sg76
(lp4064
g69
(g70
g71
NtRp4065
(dp4066
g74
(dp4067
g82
I4
ssg83
g4061
sg76
(lp4068
S'no-cache'
p4069
asbasbasbag69
(g85
g71
NtRp4070
(dp4071
g74
(dp4072
sg83
g3978
sg76
(lp4073
g69
(g90
g71
NtRp4074
(dp4075
g74
(dp4076
g94
g95
ssg83
g4070
sg76
(lp4077
S'X-Powered-By'
p4078
asbag69
(g90
g71
NtRp4079
(dp4080
g74
(dp4081
g101
g102
ssg83
g4070
sg76
(lp4082
S':'
asbag69
(g90
g71
NtRp4083
(dp4084
g74
(dp4085
sg83
g4070
sg76
(lp4086
g69
(g70
g71
NtRp4087
(dp4088
g74
(dp4089
g82
I4
ssg83
g4083
sg76
(lp4090
S'web2py'
p4091
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4092
(dp4093
g74
(dp4094
sg83
g3589
sg76
(lp4095
g69
(g90
g71
NtRp4096
(dp4097
g74
(dp4098
g94
g95
ssg83
g4092
sg76
(lp4099
S'menu'
p4100
asbag69
(g90
g71
NtRp4101
(dp4102
g74
(dp4103
g101
g102
ssg83
g4092
sg76
(lp4104
S':'
asbag69
(g90
g71
NtRp4105
(dp4106
g74
(dp4107
sg83
g4092
sg76
(lp4108
g69
(g70
g71
NtRp4109
(dp4110
g74
(dp4111
g82
I5
ssg83
g4105
sg76
(lp4112
g69
(g78
g71
NtRp4113
(dp4114
g74
(dp4115
g82
I4
ssg83
Nsg76
(lp4116
g69
(g85
g71
NtRp4117
(dp4118
g74
(dp4119
sg83
g4113
sg76
(lp4120
g69
(g90
g71
NtRp4121
(dp4122
g74
(dp4123
sg83
g4117
sg76
(lp4124
g69
(g70
g71
NtRp4125
(dp4126
g74
(dp4127
g82
I4
ssg83
g4121
sg76
(lp4128
g69
(g78
g71
NtRp4129
(dp4130
g74
(dp4131
g82
I3
ssg83
Nsg76
(lp4132
g69
(g85
g71
NtRp4133
(dp4134
g74
(dp4135
sg83
g4129
sg76
(lp4136
g69
(g90
g71
NtRp4137
(dp4138
g74
(dp4139
sg83
g4133
sg76
(lp4140
g69
(g70
g71
NtRp4141
(dp4142
g74
(dp4143
g82
I3
ssg83
g4137
sg76
(lp4144
cgluon.languages
lazyT_unpickle
p4145
(S't\x04\x00\x00\x00Home'
tRp4146
asbasbasbag69
(g85
g71
NtRp4147
(dp4148
g74
(dp4149
sg83
g4129
sg76
(lp4150
g69
(g90
g71
NtRp4151
(dp4152
g74
(dp4153
sg83
g4147
sg76
(lp4154
g69
(g70
g71
NtRp4155
(dp4156
g74
(dp4157
g82
I3
ssg83
g4151
sg76
(lp4158
g112
asbasbasbag69
(g85
g71
NtRp4159
(dp4160
g74
(dp4161
sg83
g4129
sg76
(lp4162
g69
(g90
g71
NtRp4163
(dp4164
g74
(dp4165
sg83
g4159
sg76
(lp4166
g69
(g70
g71
NtRp4167
(dp4168
g74
(dp4169
g82
I3
ssg83
g4163
sg76
(lp4170
S'/SeniorProject/default/index'
p4171
asbasbasbag69
(g85
g71
NtRp4172
(dp4173
g74
(dp4174
sg83
g4129
sg76
(lp4175
g69
(g90
g71
NtRp4176
(dp4177
g74
(dp4178
sg83
g4172
sg76
(lp4179
g69
(g70
g71
NtRp4180
(dp4181
g74
(dp4182
g82
I3
ssg83
g4176
sg76
(lp4183
g69
(g78
g71
NtRp4184
(dp4185
g74
(dp4186
g82
I2
ssg83
Nsg76
(lp4187
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4188
(dp4189
g74
(dp4190
sg83
g4113
sg76
(lp4191
g69
(g90
g71
NtRp4192
(dp4193
g74
(dp4194
sg83
g4188
sg76
(lp4195
g69
(g70
g71
NtRp4196
(dp4197
g74
(dp4198
g82
I4
ssg83
g4192
sg76
(lp4199
g69
(g78
g71
NtRp4200
(dp4201
g74
(dp4202
g82
I3
ssg83
Nsg76
(lp4203
g69
(g85
g71
NtRp4204
(dp4205
g74
(dp4206
sg83
g4200
sg76
(lp4207
g69
(g90
g71
NtRp4208
(dp4209
g74
(dp4210
sg83
g4204
sg76
(lp4211
g69
(g70
g71
NtRp4212
(dp4213
g74
(dp4214
g82
I3
ssg83
g4208
sg76
(lp4215
g69
(cgluon.html
SPAN
p4216
g71
NtRp4217
(dp4218
g74
(dp4219
g94
S'color:yellow'
p4220
ssg83
Nsg76
(lp4221
g4091
asbasbasbasbag69
(g85
g71
NtRp4222
(dp4223
g74
(dp4224
sg83
g4200
sg76
(lp4225
g69
(g90
g71
NtRp4226
(dp4227
g74
(dp4228
sg83
g4222
sg76
(lp4229
g69
(g70
g71
NtRp4230
(dp4231
g74
(dp4232
g82
I3
ssg83
g4226
sg76
(lp4233
g112
asbasbasbag69
(g85
g71
NtRp4234
(dp4235
g74
(dp4236
sg83
g4200
sg76
(lp4237
g69
(g90
g71
NtRp4238
(dp4239
g74
(dp4240
sg83
g4234
sg76
(lp4241
g69
(g70
g71
NtRp4242
(dp4243
g74
(dp4244
g82
I3
ssg83
g4238
sg76
(lp4245
S'None'
p4246
asbasbasbag69
(g85
g71
NtRp4247
(dp4248
g74
(dp4249
sg83
g4200
sg76
(lp4250
g69
(g90
g71
NtRp4251
(dp4252
g74
(dp4253
sg83
g4247
sg76
(lp4254
g69
(g70
g71
NtRp4255
(dp4256
g74
(dp4257
g82
I3
ssg83
g4251
sg76
(lp4258
g69
(g78
g71
NtRp4259
(dp4260
g74
(dp4261
g82
I2
ssg83
Nsg76
(lp4262
g69
(g85
g71
NtRp4263
(dp4264
g74
(dp4265
sg83
g4259
sg76
(lp4266
g69
(g90
g71
NtRp4267
(dp4268
g74
(dp4269
sg83
g4263
sg76
(lp4270
g69
(g70
g71
NtRp4271
(dp4272
g74
(dp4273
g82
I2
ssg83
g4267
sg76
(lp4274
g69
(g78
g71
NtRp4275
(dp4276
g74
(dp4277
g82
I1
ssg83
Nsg76
(lp4278
g69
(g85
g71
NtRp4279
(dp4280
g74
(dp4281
sg83
g4275
sg76
(lp4282
g69
(g90
g71
NtRp4283
(dp4284
g74
(dp4285
sg83
g4279
sg76
(lp4286
g69
(g70
g71
NtRp4287
(dp4288
g74
(dp4289
g82
I1
ssg83
g4283
sg76
(lp4290
g4145
(S's\x08\x00\x00\x00My Sites'
tRp4291
asbasbasbag69
(g85
g71
NtRp4292
(dp4293
g74
(dp4294
sg83
g4275
sg76
(lp4295
g69
(g90
g71
NtRp4296
(dp4297
g74
(dp4298
sg83
g4292
sg76
(lp4299
g69
(g70
g71
NtRp4300
(dp4301
g74
(dp4302
g82
I1
ssg83
g4296
sg76
(lp4303
I00
asbasbasbag69
(g85
g71
NtRp4304
(dp4305
g74
(dp4306
sg83
g4275
sg76
(lp4307
g69
(g90
g71
NtRp4308
(dp4309
g74
(dp4310
sg83
g4304
sg76
(lp4311
g69
(g70
g71
NtRp4312
(dp4313
g74
(dp4314
g82
I1
ssg83
g4308
sg76
(lp4315
S'/admin/default/site'
p4316
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4317
(dp4318
g74
(dp4319
sg83
g4259
sg76
(lp4320
g69
(g90
g71
NtRp4321
(dp4322
g74
(dp4323
sg83
g4317
sg76
(lp4324
g69
(g70
g71
NtRp4325
(dp4326
g74
(dp4327
g82
I2
ssg83
g4321
sg76
(lp4328
g69
(g78
g71
NtRp4329
(dp4330
g74
(dp4331
g82
I1
ssg83
Nsg76
(lp4332
g69
(g85
g71
NtRp4333
(dp4334
g74
(dp4335
sg83
g4329
sg76
(lp4336
g69
(g90
g71
NtRp4337
(dp4338
g74
(dp4339
sg83
g4333
sg76
(lp4340
g69
(g70
g71
NtRp4341
(dp4342
g74
(dp4343
g82
I1
ssg83
g4337
sg76
(lp4344
g4145
(S's\x08\x00\x00\x00This App'
tRp4345
asbasbasbag69
(g85
g71
NtRp4346
(dp4347
g74
(dp4348
sg83
g4329
sg76
(lp4349
g69
(g90
g71
NtRp4350
(dp4351
g74
(dp4352
sg83
g4346
sg76
(lp4353
g69
(g70
g71
NtRp4354
(dp4355
g74
(dp4356
g82
I1
ssg83
g4350
sg76
(lp4357
I00
asbasbasbag69
(g85
g71
NtRp4358
(dp4359
g74
(dp4360
sg83
g4329
sg76
(lp4361
g69
(g90
g71
NtRp4362
(dp4363
g74
(dp4364
sg83
g4358
sg76
(lp4365
g69
(g70
g71
NtRp4366
(dp4367
g74
(dp4368
g82
I1
ssg83
g4362
sg76
(lp4369
S'/admin/default/design/SeniorProject'
p4370
asbasbasbag69
(g85
g71
NtRp4371
(dp4372
g74
(dp4373
sg83
g4329
sg76
(lp4374
g69
(g90
g71
NtRp4375
(dp4376
g74
(dp4377
sg83
g4371
sg76
(lp4378
g69
(g70
g71
NtRp4379
(dp4380
g74
(dp4381
g82
I1
ssg83
g4375
sg76
(lp4382
(lp4383
(g4145
(S't\n\x00\x00\x00Controller'
tRp4384
I00
S'/admin/default/edit/SeniorProject/controllers/default.py'
tp4385
a(g4145
(S't\x04\x00\x00\x00View'
tRp4386
I00
S'/admin/default/edit/SeniorProject/views/default/addtoproject.html'
tp4387
a(g4145
(S't\x06\x00\x00\x00Layout'
tRp4388
I00
S'/admin/default/edit/SeniorProject/views/layout.html'
tp4389
a(g4145
(S't\n\x00\x00\x00Stylesheet'
tRp4390
I00
S'/admin/default/edit/SeniorProject/static/css/web2py.css'
tp4391
a(g4145
(S's\x08\x00\x00\x00DB Model'
tRp4392
I00
S'/admin/default/edit/SeniorProject/models/db.py'
tp4393
a(g4145
(S's\n\x00\x00\x00Menu Model'
tRp4394
I00
S'/admin/default/edit/SeniorProject/models/menu.py'
tp4395
a(g4145
(S't\x08\x00\x00\x00Database'
tRp4396
I00
S'/SeniorProject/appadmin/index'
tp4397
a(g4145
(S't\x06\x00\x00\x00Errors'
tRp4398
I00
S'/admin/default/errors/SeniorProject'
tp4399
a(g4145
(S't\x05\x00\x00\x00About'
tRp4400
I00
S'/admin/default/about/SeniorProject'
tp4401
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4402
(dp4403
g74
(dp4404
sg83
g4259
sg76
(lp4405
g69
(g90
g71
NtRp4406
(dp4407
g74
(dp4408
sg83
g4402
sg76
(lp4409
g69
(g70
g71
NtRp4410
(dp4411
g74
(dp4412
g82
I2
ssg83
g4406
sg76
(lp4413
g69
(g78
g71
NtRp4414
(dp4415
g74
(dp4416
g82
I1
ssg83
Nsg76
(lp4417
g69
(g85
g71
NtRp4418
(dp4419
g74
(dp4420
sg83
g4414
sg76
(lp4421
g69
(g90
g71
NtRp4422
(dp4423
g74
(dp4424
sg83
g4418
sg76
(lp4425
g69
(g70
g71
NtRp4426
(dp4427
g74
(dp4428
g82
I1
ssg83
g4422
sg76
(lp4429
S'web2py.com'
p4430
asbasbasbag69
(g85
g71
NtRp4431
(dp4432
g74
(dp4433
sg83
g4414
sg76
(lp4434
g69
(g90
g71
NtRp4435
(dp4436
g74
(dp4437
sg83
g4431
sg76
(lp4438
g69
(g70
g71
NtRp4439
(dp4440
g74
(dp4441
g82
I1
ssg83
g4435
sg76
(lp4442
I00
asbasbasbag69
(g85
g71
NtRp4443
(dp4444
g74
(dp4445
sg83
g4414
sg76
(lp4446
g69
(g90
g71
NtRp4447
(dp4448
g74
(dp4449
sg83
g4443
sg76
(lp4450
g69
(g70
g71
NtRp4451
(dp4452
g74
(dp4453
g82
I1
ssg83
g4447
sg76
(lp4454
S'http://www.web2py.com'
p4455
asbasbasbag69
(g85
g71
NtRp4456
(dp4457
g74
(dp4458
sg83
g4414
sg76
(lp4459
g69
(g90
g71
NtRp4460
(dp4461
g74
(dp4462
sg83
g4456
sg76
(lp4463
g69
(g70
g71
NtRp4464
(dp4465
g74
(dp4466
g82
I1
ssg83
g4460
sg76
(lp4467
(lp4468
(g4145
(S't\x08\x00\x00\x00Download'
tRp4469
I00
S'http://www.web2py.com/examples/default/download'
p4470
tp4471
a(g4145
(S't\x07\x00\x00\x00Support'
tRp4472
I00
S'http://www.web2py.com/examples/default/support'
p4473
tp4474
a(g4145
(S't\x04\x00\x00\x00Demo'
tRp4475
I00
S'http://web2py.com/demo_admin'
p4476
tp4477
a(g4145
(S's\x0e\x00\x00\x00Quick Examples'
tRp4478
I00
S'http://web2py.com/examples/default/examples'
p4479
tp4480
a(g4145
(S't\x03\x00\x00\x00FAQ'
tRp4481
I00
S'http://web2py.com/AlterEgo'
p4482
tp4483
a(g4145
(S't\x06\x00\x00\x00Videos'
tRp4484
I00
S'http://www.web2py.com/examples/default/videos/'
p4485
tp4486
a(g4145
(S's\x11\x00\x00\x00Free Applications'
tRp4487
I00
S'http://web2py.com/appliances'
p4488
tp4489
a(g4145
(S't\x07\x00\x00\x00Plugins'
tRp4490
I00
S'http://web2py.com/plugins'
p4491
tp4492
a(g4145
(S't\x07\x00\x00\x00Layouts'
tRp4493
I00
S'http://web2py.com/layouts'
p4494
tp4495
a(g4145
(S't\x07\x00\x00\x00Recipes'
tRp4496
I00
S'http://web2pyslices.com/'
p4497
tp4498
a(g4145
(S't\x08\x00\x00\x00Semantic'
tRp4499
I00
S'http://web2py.com/semantic'
p4500
tp4501
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4502
(dp4503
g74
(dp4504
sg83
g4259
sg76
(lp4505
g69
(g90
g71
NtRp4506
(dp4507
g74
(dp4508
sg83
g4502
sg76
(lp4509
g69
(g70
g71
NtRp4510
(dp4511
g74
(dp4512
g82
I2
ssg83
g4506
sg76
(lp4513
g69
(g78
g71
NtRp4514
(dp4515
g74
(dp4516
g82
I1
ssg83
Nsg76
(lp4517
g69
(g85
g71
NtRp4518
(dp4519
g74
(dp4520
sg83
g4514
sg76
(lp4521
g69
(g90
g71
NtRp4522
(dp4523
g74
(dp4524
sg83
g4518
sg76
(lp4525
g69
(g70
g71
NtRp4526
(dp4527
g74
(dp4528
g82
I1
ssg83
g4522
sg76
(lp4529
g4145
(S't\r\x00\x00\x00Documentation'
tRp4530
asbasbasbag69
(g85
g71
NtRp4531
(dp4532
g74
(dp4533
sg83
g4514
sg76
(lp4534
g69
(g90
g71
NtRp4535
(dp4536
g74
(dp4537
sg83
g4531
sg76
(lp4538
g69
(g70
g71
NtRp4539
(dp4540
g74
(dp4541
g82
I1
ssg83
g4535
sg76
(lp4542
I00
asbasbasbag69
(g85
g71
NtRp4543
(dp4544
g74
(dp4545
sg83
g4514
sg76
(lp4546
g69
(g90
g71
NtRp4547
(dp4548
g74
(dp4549
sg83
g4543
sg76
(lp4550
g69
(g70
g71
NtRp4551
(dp4552
g74
(dp4553
g82
I1
ssg83
g4547
sg76
(lp4554
S'http://www.web2py.com/book'
p4555
asbasbasbag69
(g85
g71
NtRp4556
(dp4557
g74
(dp4558
sg83
g4514
sg76
(lp4559
g69
(g90
g71
NtRp4560
(dp4561
g74
(dp4562
sg83
g4556
sg76
(lp4563
g69
(g70
g71
NtRp4564
(dp4565
g74
(dp4566
g82
I1
ssg83
g4560
sg76
(lp4567
(lp4568
(g4145
(S't\x07\x00\x00\x00Preface'
tRp4569
I00
S'http://www.web2py.com/book/default/chapter/00'
p4570
tp4571
a(g4145
(S't\x0c\x00\x00\x00Introduction'
tRp4572
I00
S'http://www.web2py.com/book/default/chapter/01'
p4573
tp4574
a(g4145
(S't\x06\x00\x00\x00Python'
tRp4575
I00
S'http://www.web2py.com/book/default/chapter/02'
p4576
tp4577
a(g4145
(S't\x08\x00\x00\x00Overview'
tRp4578
I00
S'http://www.web2py.com/book/default/chapter/03'
p4579
tp4580
a(g4145
(S's\x08\x00\x00\x00The Core'
tRp4581
I00
S'http://www.web2py.com/book/default/chapter/04'
p4582
tp4583
a(g4145
(S's\t\x00\x00\x00The Views'
tRp4584
I00
S'http://www.web2py.com/book/default/chapter/05'
p4585
tp4586
a(g4145
(S't\x08\x00\x00\x00Database'
tRp4587
I00
S'http://www.web2py.com/book/default/chapter/06'
p4588
tp4589
a(g4145
(S's\x14\x00\x00\x00Forms and Validators'
tRp4590
I00
S'http://www.web2py.com/book/default/chapter/07'
p4591
tp4592
a(g4145
(S's\r\x00\x00\x00Email and SMS'
tRp4593
I00
S'http://www.web2py.com/book/default/chapter/08'
p4594
tp4595
a(g4145
(S's\x0e\x00\x00\x00Access Control'
tRp4596
I00
S'http://www.web2py.com/book/default/chapter/09'
p4597
tp4598
a(g4145
(S't\x08\x00\x00\x00Services'
tRp4599
I00
S'http://www.web2py.com/book/default/chapter/10'
p4600
tp4601
a(g4145
(S's\x0c\x00\x00\x00Ajax Recipes'
tRp4602
I00
S'http://www.web2py.com/book/default/chapter/11'
p4603
tp4604
a(g4145
(S's\x16\x00\x00\x00Components and Plugins'
tRp4605
I00
S'http://www.web2py.com/book/default/chapter/12'
p4606
tp4607
a(g4145
(S's\x12\x00\x00\x00Deployment Recipes'
tRp4608
I00
S'http://www.web2py.com/book/default/chapter/13'
p4609
tp4610
a(g4145
(S's\r\x00\x00\x00Other Recipes'
tRp4611
I00
S'http://www.web2py.com/book/default/chapter/14'
p4612
tp4613
a(g4145
(S's\r\x00\x00\x00Buy this book'
tRp4614
I00
S'http://stores.lulu.com/web2py'
p4615
tp4616
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4617
(dp4618
g74
(dp4619
sg83
g4259
sg76
(lp4620
g69
(g90
g71
NtRp4621
(dp4622
g74
(dp4623
sg83
g4617
sg76
(lp4624
g69
(g70
g71
NtRp4625
(dp4626
g74
(dp4627
g82
I2
ssg83
g4621
sg76
(lp4628
g69
(g78
g71
NtRp4629
(dp4630
g74
(dp4631
g82
I1
ssg83
Nsg76
(lp4632
g69
(g85
g71
NtRp4633
(dp4634
g74
(dp4635
sg83
g4629
sg76
(lp4636
g69
(g90
g71
NtRp4637
(dp4638
g74
(dp4639
sg83
g4633
sg76
(lp4640
g69
(g70
g71
NtRp4641
(dp4642
g74
(dp4643
g82
I1
ssg83
g4637
sg76
(lp4644
g4145
(S't\t\x00\x00\x00Community'
tRp4645
asbasbasbag69
(g85
g71
NtRp4646
(dp4647
g74
(dp4648
sg83
g4629
sg76
(lp4649
g69
(g90
g71
NtRp4650
(dp4651
g74
(dp4652
sg83
g4646
sg76
(lp4653
g69
(g70
g71
NtRp4654
(dp4655
g74
(dp4656
g82
I1
ssg83
g4650
sg76
(lp4657
I00
asbasbasbag69
(g85
g71
NtRp4658
(dp4659
g74
(dp4660
sg83
g4629
sg76
(lp4661
g69
(g90
g71
NtRp4662
(dp4663
g74
(dp4664
sg83
g4658
sg76
(lp4665
g69
(g70
g71
NtRp4666
(dp4667
g74
(dp4668
g82
I1
ssg83
g4662
sg76
(lp4669
Nasbasbasbag69
(g85
g71
NtRp4670
(dp4671
g74
(dp4672
sg83
g4629
sg76
(lp4673
g69
(g90
g71
NtRp4674
(dp4675
g74
(dp4676
sg83
g4670
sg76
(lp4677
g69
(g70
g71
NtRp4678
(dp4679
g74
(dp4680
g82
I1
ssg83
g4674
sg76
(lp4681
(lp4682
(g4145
(S't\x06\x00\x00\x00Groups'
tRp4683
I00
S'http://www.web2py.com/examples/default/usergroups'
p4684
tp4685
a(g4145
(S't\x07\x00\x00\x00Twitter'
tRp4686
I00
S'http://twitter.com/web2py'
p4687
tp4688
a(g4145
(S's\t\x00\x00\x00Live Chat'
tRp4689
I00
S'http://webchat.freenode.net/?channels=web2py'
p4690
tp4691
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4692
(dp4693
g74
(dp4694
sg83
g4259
sg76
(lp4695
g69
(g90
g71
NtRp4696
(dp4697
g74
(dp4698
sg83
g4692
sg76
(lp4699
g69
(g70
g71
NtRp4700
(dp4701
g74
(dp4702
g82
I2
ssg83
g4696
sg76
(lp4703
g69
(g78
g71
NtRp4704
(dp4705
g74
(dp4706
g82
I1
ssg83
Nsg76
(lp4707
g69
(g85
g71
NtRp4708
(dp4709
g74
(dp4710
sg83
g4704
sg76
(lp4711
g69
(g90
g71
NtRp4712
(dp4713
g74
(dp4714
sg83
g4708
sg76
(lp4715
g69
(g70
g71
NtRp4716
(dp4717
g74
(dp4718
g82
I1
ssg83
g4712
sg76
(lp4719
g4145
(S't\x07\x00\x00\x00Plugins'
tRp4720
asbasbasbag69
(g85
g71
NtRp4721
(dp4722
g74
(dp4723
sg83
g4704
sg76
(lp4724
g69
(g90
g71
NtRp4725
(dp4726
g74
(dp4727
sg83
g4721
sg76
(lp4728
g69
(g70
g71
NtRp4729
(dp4730
g74
(dp4731
g82
I1
ssg83
g4725
sg76
(lp4732
I00
asbasbasbag69
(g85
g71
NtRp4733
(dp4734
g74
(dp4735
sg83
g4704
sg76
(lp4736
g69
(g90
g71
NtRp4737
(dp4738
g74
(dp4739
sg83
g4733
sg76
(lp4740
g69
(g70
g71
NtRp4741
(dp4742
g74
(dp4743
g82
I1
ssg83
g4737
sg76
(lp4744
Nasbasbasbag69
(g85
g71
NtRp4745
(dp4746
g74
(dp4747
sg83
g4704
sg76
(lp4748
g69
(g90
g71
NtRp4749
(dp4750
g74
(dp4751
sg83
g4745
sg76
(lp4752
g69
(g70
g71
NtRp4753
(dp4754
g74
(dp4755
g82
I1
ssg83
g4749
sg76
(lp4756
(lp4757
(S'plugin_wiki'
p4758
I00
S'http://web2py.com/examples/default/download'
p4759
tp4760
a(g4145
(S's\r\x00\x00\x00Other Plugins'
tRp4761
I00
g4491
tp4762
a(g4145
(S's\x0e\x00\x00\x00Layout Plugins'
tRp4763
I00
g4494
tp4764
aasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4765
(dp4766
g74
(dp4767
sg83
g3589
sg76
(lp4768
g69
(g90
g71
NtRp4769
(dp4770
g74
(dp4771
g94
g95
ssg83
g4765
sg76
(lp4772
S'meta'
p4773
asbag69
(g90
g71
NtRp4774
(dp4775
g74
(dp4776
g101
g102
ssg83
g4765
sg76
(lp4777
S':'
asbag69
(g90
g71
NtRp4778
(dp4779
g74
(dp4780
sg83
g4765
sg76
(lp4781
g69
(g70
g71
NtRp4782
(dp4783
g74
(dp4784
g82
I5
ssg83
g4778
sg76
(lp4785
g69
(g78
g71
NtRp4786
(dp4787
g74
(dp4788
g82
I4
ssg83
Nsg76
(lp4789
g69
(g85
g71
NtRp4790
(dp4791
g74
(dp4792
sg83
g4786
sg76
(lp4793
g69
(g90
g71
NtRp4794
(dp4795
g74
(dp4796
g94
g95
ssg83
g4790
sg76
(lp4797
S'author'
p4798
asbag69
(g90
g71
NtRp4799
(dp4800
g74
(dp4801
g101
g102
ssg83
g4790
sg76
(lp4802
S':'
asbag69
(g90
g71
NtRp4803
(dp4804
g74
(dp4805
sg83
g4790
sg76
(lp4806
g69
(g70
g71
NtRp4807
(dp4808
g74
(dp4809
g82
I4
ssg83
g4803
sg76
(lp4810
S'Your Name <you@example.com>'
p4811
asbasbasbag69
(g85
g71
NtRp4812
(dp4813
g74
(dp4814
sg83
g4786
sg76
(lp4815
g69
(g90
g71
NtRp4816
(dp4817
g74
(dp4818
g94
g95
ssg83
g4812
sg76
(lp4819
S'copyright'
p4820
asbag69
(g90
g71
NtRp4821
(dp4822
g74
(dp4823
g101
g102
ssg83
g4812
sg76
(lp4824
S':'
asbag69
(g90
g71
NtRp4825
(dp4826
g74
(dp4827
sg83
g4812
sg76
(lp4828
g69
(g70
g71
NtRp4829
(dp4830
g74
(dp4831
g82
I4
ssg83
g4825
sg76
(lp4832
S'Copyright 2011'
p4833
asbasbasbag69
(g85
g71
NtRp4834
(dp4835
g74
(dp4836
sg83
g4786
sg76
(lp4837
g69
(g90
g71
NtRp4838
(dp4839
g74
(dp4840
g94
g95
ssg83
g4834
sg76
(lp4841
S'description'
p4842
asbag69
(g90
g71
NtRp4843
(dp4844
g74
(dp4845
g101
g102
ssg83
g4834
sg76
(lp4846
S':'
asbag69
(g90
g71
NtRp4847
(dp4848
g74
(dp4849
sg83
g4834
sg76
(lp4850
g69
(g70
g71
NtRp4851
(dp4852
g74
(dp4853
g82
I4
ssg83
g4847
sg76
(lp4854
S'a cool new app'
p4855
asbasbasbag69
(g85
g71
NtRp4856
(dp4857
g74
(dp4858
sg83
g4786
sg76
(lp4859
g69
(g90
g71
NtRp4860
(dp4861
g74
(dp4862
g94
g95
ssg83
g4856
sg76
(lp4863
S'generator'
p4864
asbag69
(g90
g71
NtRp4865
(dp4866
g74
(dp4867
g101
g102
ssg83
g4856
sg76
(lp4868
S':'
asbag69
(g90
g71
NtRp4869
(dp4870
g74
(dp4871
sg83
g4856
sg76
(lp4872
g69
(g70
g71
NtRp4873
(dp4874
g74
(dp4875
g82
I4
ssg83
g4869
sg76
(lp4876
S'Web2py Web Framework'
p4877
asbasbasbag69
(g85
g71
NtRp4878
(dp4879
g74
(dp4880
sg83
g4786
sg76
(lp4881
g69
(g90
g71
NtRp4882
(dp4883
g74
(dp4884
g94
g95
ssg83
g4878
sg76
(lp4885
S'keywords'
p4886
asbag69
(g90
g71
NtRp4887
(dp4888
g74
(dp4889
g101
g102
ssg83
g4878
sg76
(lp4890
S':'
asbag69
(g90
g71
NtRp4891
(dp4892
g74
(dp4893
sg83
g4878
sg76
(lp4894
g69
(g70
g71
NtRp4895
(dp4896
g74
(dp4897
g82
I4
ssg83
g4891
sg76
(lp4898
S'web2py, python, framework'
p4899
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4900
(dp4901
g74
(dp4902
sg83
g3589
sg76
(lp4903
g69
(g90
g71
NtRp4904
(dp4905
g74
(dp4906
g94
g95
ssg83
g4900
sg76
(lp4907
S'postprocessing'
p4908
asbag69
(g90
g71
NtRp4909
(dp4910
g74
(dp4911
g101
g102
ssg83
g4900
sg76
(lp4912
S':'
asbag69
(g90
g71
NtRp4913
(dp4914
g74
(dp4915
sg83
g4900
sg76
(lp4916
g69
(g70
g71
NtRp4917
(dp4918
g74
(dp4919
g82
I5
ssg83
g4913
sg76
(lp4920
g69
(g78
g71
NtRp4921
(dp4922
g74
(dp4923
g82
I4
ssg83
Nsg76
(lp4924
sbasbasbasbag69
(g85
g71
NtRp4925
(dp4926
g74
(dp4927
sg83
g3589
sg76
(lp4928
g69
(g90
g71
NtRp4929
(dp4930
g74
(dp4931
g94
g95
ssg83
g4925
sg76
(lp4932
S'session_file'
p4933
asbag69
(g90
g71
NtRp4934
(dp4935
g74
(dp4936
g101
g102
ssg83
g4925
sg76
(lp4937
S':'
asbag69
(g90
g71
NtRp4938
(dp4939
g74
(dp4940
sg83
g4925
sg76
(lp4941
g69
(g70
g71
NtRp4942
(dp4943
g74
(dp4944
g82
I5
ssg83
g4938
sg76
(lp4945
S"<open file '/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b', mode 'rb+' at 0x108c37930>"
p4946
asbasbasbag69
(g85
g71
NtRp4947
(dp4948
g74
(dp4949
sg83
g3589
sg76
(lp4950
g69
(g90
g71
NtRp4951
(dp4952
g74
(dp4953
g94
g95
ssg83
g4947
sg76
(lp4954
S'session_filename'
p4955
asbag69
(g90
g71
NtRp4956
(dp4957
g74
(dp4958
g101
g102
ssg83
g4947
sg76
(lp4959
S':'
asbag69
(g90
g71
NtRp4960
(dp4961
g74
(dp4962
sg83
g4947
sg76
(lp4963
g69
(g70
g71
NtRp4964
(dp4965
g74
(dp4966
g82
I5
ssg83
g4960
sg76
(lp4967
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p4968
asbasbasbag69
(g85
g71
NtRp4969
(dp4970
g74
(dp4971
sg83
g3589
sg76
(lp4972
g69
(g90
g71
NtRp4973
(dp4974
g74
(dp4975
g94
g95
ssg83
g4969
sg76
(lp4976
S'session_id'
p4977
asbag69
(g90
g71
NtRp4978
(dp4979
g74
(dp4980
g101
g102
ssg83
g4969
sg76
(lp4981
S':'
asbag69
(g90
g71
NtRp4982
(dp4983
g74
(dp4984
sg83
g4969
sg76
(lp4985
g69
(g70
g71
NtRp4986
(dp4987
g74
(dp4988
g82
I5
ssg83
g4982
sg76
(lp4989
S'127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p4990
asbasbasbag69
(g85
g71
NtRp4991
(dp4992
g74
(dp4993
sg83
g3589
sg76
(lp4994
g69
(g90
g71
NtRp4995
(dp4996
g74
(dp4997
g94
g95
ssg83
g4991
sg76
(lp4998
S'session_id_name'
p4999
asbag69
(g90
g71
NtRp5000
(dp5001
g74
(dp5002
g101
g102
ssg83
g4991
sg76
(lp5003
S':'
asbag69
(g90
g71
NtRp5004
(dp5005
g74
(dp5006
sg83
g4991
sg76
(lp5007
g69
(g70
g71
NtRp5008
(dp5009
g74
(dp5010
g82
I5
ssg83
g5004
sg76
(lp5011
g3646
asbasbasbag69
(g85
g71
NtRp5012
(dp5013
g74
(dp5014
sg83
g3589
sg76
(lp5015
g69
(g90
g71
NtRp5016
(dp5017
g74
(dp5018
g94
g95
ssg83
g5012
sg76
(lp5019
S'session_locked'
p5020
asbag69
(g90
g71
NtRp5021
(dp5022
g74
(dp5023
g101
g102
ssg83
g5012
sg76
(lp5024
S':'
asbag69
(g90
g71
NtRp5025
(dp5026
g74
(dp5027
sg83
g5012
sg76
(lp5028
g69
(g70
g71
NtRp5029
(dp5030
g74
(dp5031
g82
I5
ssg83
g5025
sg76
(lp5032
g1712
asbasbasbag69
(g85
g71
NtRp5033
(dp5034
g74
(dp5035
sg83
g3589
sg76
(lp5036
g69
(g90
g71
NtRp5037
(dp5038
g74
(dp5039
g94
g95
ssg83
g5033
sg76
(lp5040
S'session_new'
p5041
asbag69
(g90
g71
NtRp5042
(dp5043
g74
(dp5044
g101
g102
ssg83
g5033
sg76
(lp5045
S':'
asbag69
(g90
g71
NtRp5046
(dp5047
g74
(dp5048
sg83
g5033
sg76
(lp5049
g69
(g70
g71
NtRp5050
(dp5051
g74
(dp5052
g82
I5
ssg83
g5046
sg76
(lp5053
g112
asbasbasbag69
(g85
g71
NtRp5054
(dp5055
g74
(dp5056
sg83
g3589
sg76
(lp5057
g69
(g90
g71
NtRp5058
(dp5059
g74
(dp5060
g94
g95
ssg83
g5054
sg76
(lp5061
S'status'
p5062
asbag69
(g90
g71
NtRp5063
(dp5064
g74
(dp5065
g101
g102
ssg83
g5054
sg76
(lp5066
S':'
asbag69
(g90
g71
NtRp5067
(dp5068
g74
(dp5069
sg83
g5054
sg76
(lp5070
g69
(g70
g71
NtRp5071
(dp5072
g74
(dp5073
g82
I5
ssg83
g5067
sg76
(lp5074
S'200'
p5075
asbasbasbag69
(g85
g71
NtRp5076
(dp5077
g74
(dp5078
sg83
g3589
sg76
(lp5079
g69
(g90
g71
NtRp5080
(dp5081
g74
(dp5082
g94
g95
ssg83
g5076
sg76
(lp5083
S'subtitle'
p5084
asbag69
(g90
g71
NtRp5085
(dp5086
g74
(dp5087
g101
g102
ssg83
g5076
sg76
(lp5088
S':'
asbag69
(g90
g71
NtRp5089
(dp5090
g74
(dp5091
sg83
g5076
sg76
(lp5092
g69
(g70
g71
NtRp5093
(dp5094
g74
(dp5095
g82
I5
ssg83
g5089
sg76
(lp5096
g4145
(S's\r\x00\x00\x00customize me!'
tRp5097
asbasbasbag69
(g85
g71
NtRp5098
(dp5099
g74
(dp5100
sg83
g3589
sg76
(lp5101
g69
(g90
g71
NtRp5102
(dp5103
g74
(dp5104
g94
g95
ssg83
g5098
sg76
(lp5105
S'title'
p5106
asbag69
(g90
g71
NtRp5107
(dp5108
g74
(dp5109
g101
g102
ssg83
g5098
sg76
(lp5110
S':'
asbag69
(g90
g71
NtRp5111
(dp5112
g74
(dp5113
sg83
g5098
sg76
(lp5114
g69
(g70
g71
NtRp5115
(dp5116
g74
(dp5117
g82
I5
ssg83
g5111
sg76
(lp5118
S'Seniorproject'
p5119
asbasbasbag69
(g85
g71
NtRp5120
(dp5121
g74
(dp5122
sg83
g3589
sg76
(lp5123
g69
(g90
g71
NtRp5124
(dp5125
g74
(dp5126
g94
g95
ssg83
g5120
sg76
(lp5127
g2376
asbag69
(g90
g71
NtRp5128
(dp5129
g74
(dp5130
g101
g102
ssg83
g5120
sg76
(lp5131
S':'
asbag69
(g90
g71
NtRp5132
(dp5133
g74
(dp5134
sg83
g5120
sg76
(lp5135
g69
(g70
g71
NtRp5136
(dp5137
g74
(dp5138
g82
I5
ssg83
g5132
sg76
(lp5139
g2389
asbasbasbag69
(g85
g71
NtRp5140
(dp5141
g74
(dp5142
sg83
g3589
sg76
(lp5143
g69
(g90
g71
NtRp5144
(dp5145
g74
(dp5146
g94
g95
ssg83
g5140
sg76
(lp5147
S'view'
p5148
asbag69
(g90
g71
NtRp5149
(dp5150
g74
(dp5151
g101
g102
ssg83
g5140
sg76
(lp5152
S':'
asbag69
(g90
g71
NtRp5153
(dp5154
g74
(dp5155
sg83
g5140
sg76
(lp5156
g69
(g70
g71
NtRp5157
(dp5158
g74
(dp5159
g82
I5
ssg83
g5153
sg76
(lp5160
S'default/addtoproject.html'
p5161
asbasbasbasbasbsS'locals'
p5162
(dp5163
g4
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p5164
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ...l\\n\\nresponse._vars=response._caller(addtoproject)\\n'"
p5165
sssS'traceback'
p5166
S'Traceback (most recent call last):\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 204, in restricted\n    ccode = compile2(code,layer)\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 189, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py", line 284\n    projectList = db(auth_user.id = int(userid)).select().first().projects\nSyntaxError: keyword can\'t be an expression\n'
p5167
s.