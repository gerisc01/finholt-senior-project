(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> invalid syntax (default.py, line 119)"
p3
sS'layer'
p4
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n#Import necessary modules\nimport flickrapi\nimport appy\nfrom datetime import datetime\n\nimport mechanize\nimport cookielib\n#Flickr API keys\nKEY = \'614fd86a34a00d38293c7e803d14c3ab\'\nSECRET_KEY = \'ad86826c3187eb4d\'\nUSER_ID = \'93142072@N05\'\n\n#Create the static links to be passed in to the views\nheader = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\')), _href=URL(\'default\',\'index\')), _id="header")\nheader_archived = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\'))), _id="header")\nfooter = DIV(A("Home Page", _href=URL(\'default\',\'index\')), TD("------"), A("Log out", _href=URL(\'default\',\'user\', args=\'logout\')), _id="footer")\ncss = "/SeniorProject/static/css/bluestyle.css"\n    \nif not db(db.PhotoToken).isempty():\n    tok = (db.PhotoToken(db.PhotoToken.id>0)).token\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #create a flickr object\nelse:\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n\n#Returns the current user (object) of the site\ndef getUser():\n    user = None\n    if auth.user != None:\n        user = db(db.auth_user.id == auth.user.id).select().first()\n    return user\n\n\nif auth.user != None:\n    record = auth.user.id     #Gets the info for the current user\n    myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\nelse: \n    myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n#Returns the form that will be displayed when the "My Profile" tab is clicked (the paratmeter passed in is a user object)\ndef getProfileFormForUser(user):\n    if user != None:        #We will display the form with the user\'s current information filled in\n        record = user.id    #Gets the info for the current user    \n        myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    else:                   #Display the form with no fields filled in \n        myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    return myProfileForm\n\ndef getProjectsForUser(user):\n    projects = []\n    if user != None and user.projects != None:\n        if auth.has_membership(user_id=user.id, role="Admin"):\n            projects = db(db.Project.archived == False).select()\n        else:\n            for item in user.projects:\n                rows = db((db.Project.archived == False) & (db.Project.projNum == item)).select()\n                if len(projects) ==0:\n                    projects = rows\n                else:\n                    projects= projects & rows   \n    return projects\n\n#Checks if the current token is valid; if not, then redirects to flickr to be authenticated and get a token\ndef setUpFlickrStuff():   \n    if not db(db.PhotoToken).isempty():                                #We already have a PhotoToken, so use the token when creating a flickr object\n        tok = (db.PhotoToken(db.PhotoToken.id > 0)).token              #Get the token from the database\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #Create a flickr object\n    else:\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n    \n    if not db(db.PhotoToken).isempty():\n        #We have a token, but it might not be valid\n        #Check the token. If there was an error, then delete the token from the database\n        try:\n            flickr.auth_checkToken() \n        except flickrapi.FlickrError:\n            db(db.PhotoToken.id > 0).delete()\n    if db(db.PhotoToken).isempty():                 #We don\'t have the token yet, or it was deleted because it wasn\'t valid\n        if request.vars.frob:                       #If the frob is in the request (coming back from being authenticated by flickr)\n            db.PhotoToken[0] = {"token" : flickr.get_token(request.vars.frob)}    #Insert a new row into the database with the new token\n        else:\n            url = flickr.web_login_url(\'write\')     #Get the url to go to in order to authenticate\n            br = mechanize.Browser()\n            # Browser options\n            br.set_handle_equiv(True)\n            br.set_handle_gzip(True)\n            br.set_handle_redirect(True)\n            br.set_handle_referer(True)\n            br.set_handle_robots(False)\n\n            # Cookie Jar\n            cj = cookielib.LWPCookieJar()\n            br.set_cookiejar(cj)\n    #Returns all the non-archived projects the specified user is associated with (the parameter passed in is a user object)\n\n\n            # Follows refresh 0 but not hangs on refresh > 0\n            br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n            r = br.open(url)\n            br.select_form("login_form")\n            br.form["login"]="alyssealyssetest"\n            br.form["passwd"]="finholt1"\n            br.find_control(".persistent").items[0].selected=True\n            br.submit()      \n\n    thing =flickr.sign({\n        "method":"flickr.photos.getInfo",\n        "api_key":"f8525c74b1f8dcd19791a39cbd947dd0",\n        "photo_id":"8655391465",\n        "secret"="ad86826c3187eb4d"\n        "format":"json",\n        "nojsoncallback":"1",\n        "auth_token":"72157632878384274-4abc077968f36490"  \n\n    })  \n    import tkMessageBox\n    tkMessageBox.showinfo(title="Greetings", message=thing)                         #Redirect to that website\n            \n            \n#Do all the set-up/initializing that is necessary for using the site (calling the above functions)   \nuser = getUser()                            #Get the current user of the site\nprojects = getProjectsForUser(user)         #Get the projects that the user is associated with\nmyProfileForm = getProfileFormForUser(user) #Get the form for the "My Profile" tab\nsetUpFlickrStuff()                          #Make sure all the flickr stuff is good to go (make sure we\'re authenticated)\n\n\n#Called when a new photoForm is submitted (called from showform when the photoForm is accepted)\ndef uploadPhotoToFlickr(photoForm):\n    #Get the info from the submitted photo form\n    photoWeb2pyId = photoForm.vars.id\n    projNum = photoForm.vars.projectNum\n    title = photoForm.vars.title\n    descr = photoForm.vars.description\n    name = "applications/SeniorProject/uploads/" + photoForm.vars.photo\n    \n    #Upload the photo to flickr and get the id of the photo in order to construct the url of the photo\n    idElement = flickr.upload(filename=name, title=title, description=descr)\n    id = idElement.find(\'photoid\').text\n    flickrUrl =  "http://www.flickr.com/photos/"+USER_ID+"/"+str(id)+"/"  \n\n    #Delete the corresponding row in our database (because we don\'t want to store the actual photo no our server)\n    db(db.Photos.id == photoWeb2pyId).delete()\n    \n    #Create a new row in our database with all the same info as the deleted row, but without the photo file\n    db.Photos.insert(projectNum=projNum, flickrURL=flickrUrl, title=title, description=descr)\n\n#Returns a dictionary used by the view default/index.html (which is the home screen)\n@auth.requires_login()\ndef index():\n    #response.flash = "Welcome " + auth.user.first_name + "!"    #Welcome the user to the site\n    response.flash = "Erik Smellz"\n    projectNums = []                                            #Get the project numbers of all the projects the user is associated with\n    for project in projects:\n        projectNums.append(project.projNum) \n    \n    #Get all the newsfeed entries for the user\'s projects, ordering by time created (most recent entry listed first)\n    entries = db(db.NewsFeed.projectNum.belongs(projectNums)).select(orderby=~db.NewsFeed.created_on)\n    \n    if entries == None or len(entries) == 0:                    #If there aren\'t any entries, set entries to None (this is checked in the View)\n        entries = None\n    elif len(entries) > 20:\n        entries = entries[0:20]                                 #Only display the first 20 newsfeed entries on the homescreen\n    \n    return dict(projects=projects,\n                myProfileForm=myProfileForm,\n                header=header,\n                footer=footer,\n                css=css,\n                entries=entries)\n\n#Created by web2py\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth(), header=header, footer=footer, css=css)\n\n#Created by web2py\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n#Created by web2py\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n#Created by web2py\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud(), css=css, footer=footer)\n\n#This is called when an admin clicks "Create User". It returns a dictionary used by the view default/regiser.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef register():\n    form = SQLFORM(db.auth_user)                                            #Create a form with the fields for a user\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.first_name) + \' created as user\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a user\'\n       \n    if form.validate():                                                     #Add the new user with membership in the General group (rather than Admin)\n        admin_user = auth.user\n        auth.get_or_create_user(form.vars)\n        auth.add_membership(auth.id_group(role="General"),auth.user_id)\n        auth.user = admin_user\n        redirect(URL(\'default\',\'register\'))                                 #Redirect to the same screen so the admin can create more users if needed\n        \n    return dict(form=form, header=header, footer=footer, css=css)\n\n#This is called when an admin clicks "User Permissions". It returns a dictionary used by the view default/changepermissions.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef changepermissions():\n     #Get all the users in alphabetical order, except the current user (don\'t want a user to change his own permissions)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)     \n     #Represent the user\'s id as a dropdown with the values of Admin or General, with the current value as the user\'s current group membership\n     db.auth_user.id.represent = lambda id: SELECT(getUserRole(id), XML(getOtherRoles(id)), _name=\'%i\'%id) \n     #Create a table with all the users and their current memberships\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Change Permission","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\'))\n \n     if table.accepts(request.vars): \n        for item in request.vars.keys():               #For each user selected..\n            if item.isdigit():\n                if not auth.has_membership(user_id=int(item), role=request.vars[item]):\n                    if auth.has_membership(user_id=int(item), role=getUserRole(int(item))): #in case they are in their individual user group. We should only delete them from the group we are in if they are switching from General to Admin or vice versa.\n                        auth.del_membership(auth.id_group(role=getUserRole(int(item))),int(item))\n                    auth.add_membership(auth.id_group(role=request.vars[item]),int(item)) #Add the user\'s membership\n                    \n        session.flash = \'Permissions changed\'\n        redirect(URL(\'default\',\'changepermissions\'))    #Redirect to the same screen so the admin can see the current permission level of every user\n        \n     elif table.errors:\n         session.flash = \'An error has occured\'\n     else:\n         session.flash = \'Modify user permissions\'\n     \n     return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Add Users to Projects". It returns a dictionary used by the view default/addtoproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef addtoproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)        #Get all the users of the site (in alphabetical order)\n    #Represent the user\'s id as checkboxes of possible projects for the user to be added to\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getAllProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Add To","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\')) \n    \n    if table.accepts(request.vars):\n        for userid in request.vars.keys():           #For each user selected..\n            if userid.isdigit():\n                projectList = db(db.auth_user.id == int(userid)).select().first().projects\n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projectList.append(int(item))\n                else:\n                    projectList.append(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projectList)\n        redirect(URL(\'default\',\'addtoproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete Users from Projects". It returns a dictionary used by the view default/deletefromproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef deletefromproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)    #Get all the users of the site (in alphabetical order)\n    #Represents the user\'s id as checkboxes of all the user\'s associated projects\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getUsersProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove From","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\')) \n   \n    if table.accepts(request.vars): \n        for userid in request.vars.keys():                                    #For each user selected..\n            if userid.isdigit():\n                user = db(db.auth_user.id ==int(userid)).select().first()\n                projects = user.projects\n                \n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projects.remove(int(item))\n                else:\n                    projects.remove(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projects)\n        redirect(URL(\'default\',\'deletefromproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete User". It returns a dictionary used by the view default/deleteusers.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef deleteusers():\n     #Get all the users on the site in alphabetical order, except the current user (don\'t want someone to delete himself)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)  \n     db.auth_user.id.represent = lambda id: DIV(id, INPUT (_type=\'checkbox\',_name=\'%i\'%id)) #Create a checkbox for each user\n     #Create a table of the information\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove User","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\'))\n     \n     if table.process().accepted:\n       response.flash = str(request.vars.first_name) + \' deleted as user\'\n     elif table.errors:\n       response.flash = \'Form has errors\'\n     else:\n       response.flash = \'Select users to delete\'\n     \n     if table.accepts(request.vars): \n        for item in request.vars.keys():                     #For each user selected..\n            if item.isdigit():\n                db(db.auth_user.id == int(item)).delete()    #Delete the user that was selected\n                \n        session.flash = \'User deleted\'\n        redirect(URL(\'default\',\'deleteusers\'))               #Redirect back to the same screen\n\n     return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Add Project". It returns a dictionary used by the view default/createproject.html \n@auth.requires_login()    \n@auth.requires_membership(\'Admin\')\ndef createproject():\n    #Create a form for inserting a new project into the database\n    form = SQLFORM(db.Project, labels={\'projNum\':\'Project Number\', \'openDate\':\'Open Date\', \'closedDate\':\'Closed Date\'})\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.name) + \' has been created\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a project\'\n       \n    return dict(form=form, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Manage Projects". It returns a dictionary used by the view default/manageprojects.html\n@auth.requires_login()   \n@auth.requires_membership(\'Admin\')\ndef manageprojects():\n    table = None\n    rows = db(db.Project.archived == False).select() #Get all the non-archived projects\n    \n    if len(rows) == 0:\n        table = "There are currently no non-archived projects"\n        \n    else:   #There is at least one on-going project\n        db.Project.id.represent = lambda id: DIV(id, INPUT(_type=\'checkbox\',_name=\'%i\'%id)) #Represent the project id as a checkbox\n        #Create a table of all the non-archived projects, each with a checkbox for the option to archive\n        table = FORM(SQLTABLE(rows, columns=["Project.id","Project.name","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.id":"Archive","Project.name":"Project Name","Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}), INPUT(_type=\'submit\'))\n        \n        table["_onsubmit"] = "return confirm(\'Are you sure you want to archive this project?\');"\n        \n        if table.process().accepted:\n           response.flash = str(request.vars.name) + \' has been archived\'\n        elif table.errors:\n           response.flash = \'Form has errors\'\n        else:\n           response.flash = \'Select a project to archive\'\n        \n        if table.accepts(request.vars):\n            for pID in request.vars.keys():                             #For each project that we want to archive..\n                if pID.isdigit():\n                    db(db.Project.id == int(pID)).update(archived=True) #Set archived=True for the project and update the database\n                    \n            redirect(URL(\'default\',\'manageprojects\'))                   #Redirect to the same screen\n            \n    return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Archived Projects". It returns a dictionary used by the view default/archiveprojects.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef archiveprojects():\n    table = None\n    rows = db(db.Project.archived == True).select()                #Get all the archived projects\n    \n    if len(rows) == 0:\n        table = "There are no projects that have been achived."\n        \n    else:                                                          #There is at least one archived project\n        #This column contains the option to view a project when "View" is clicked. It opens a new tab to display the selected project                                                      \n        extracolumn = [{\'label\':\'View Archived Project\', #label of the entirecolumn\n                        \'class\': \'\', #class name of the header\n                        \'width\': \'\', #width in pixels or %\n                        \'content\': lambda row, rc: A("View", _href=URL(\'default\',\'viewArchive\', args=row.id), _target=\'new\'), #what goes in each row\n                        \'selected\': False #aggregate class selected to this column\n                       }]\n        #Create a table of the archived projects, with the rightmost column containing the extracolumn\n        table = SQLTABLE(rows, columns=["Project.name","Project.owner","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.name":"Project Name", "Project.owner":"Owner", "Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}, extracolumns=extracolumn)\n    \n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "View" on the Archived Projects screen. It returns a dictionary used by the view default/viewArchive.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef viewArchive():\n    #Get the archived project that the user wants to view (the "archivedprojects" method puts the project id in args)\n    project = db(db.Project.id == request.args(0)).select().first()  \n    return dict(project=project, header=header_archived, css=css)\n\n#This is called when a user clicks on "News Feed" for a project in the sidebar. It returns a dictionary used by the view default/newsfeed.html\n@auth.requires_login()\ndef newsfeed():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Create an SQLFORM for the user to make a new status update\n    form = SQLFORM(db.NewsFeed, labels={\'description\':\'New Status Update\'}, fields=[\'description\'])\n    form.vars.projectNum = request.vars.projectNum                        #Initialize the project number to be the current project\'s number\n    form.vars.type = "human"                                              #Initialize the type to be" human"\n    form.vars.created_on = datetime.today()                               #Initialize the time created to be the current date and time\n    form.vars.creator = auth.user.first_name + " " + auth.user.last_name  #Initiaize the creator to be the current user\n    \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Status created successfully\')\n        elif form.errors:\n            response.flash = \'Form has errors\'\n                \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on) \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None\n        \n    return dict(form=form, entries=entries, fullTable=True, project=project, projects=projects, myProfileForm=myProfileForm, header=header, footer=footer, css=css)\n\n#This is called when a user clicks on "News Feed" on an archived project\'s sidebar. It returns a dictionary used by the view default/newsfeedarchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef newsfeedarchived():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on)   \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None   \n        \n    return dict(entries=entries, fullTable=True, project=project, header=header_archived, css=css)  \n\n#This is called when a user clicks on any of the tabs (to upload/generate a new document). It returns a dictionary used by the view default/showform.html\n@auth.requires_login() \ndef showform():\n    displayForm = request.vars.displayForm                                       #Get the type of form we want to display\n    form = None                                                                  #The SQLFORM that we will display\n    \n    if displayForm == "CCD":\n        #Create a form with all the CCD fields\n        form = SQLFORM(db.CCD, labels={\'ccdNum\':\'CCD #\',\'projectNum\': "Project #"}) \n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()    #Get all the CCD\'s for the current project\n        form.vars.ccdNum = len(rows) + 1               #Initialize the form\'s CCD number to be one more than the current number of CCDs               \n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "RFI":\n        #Create a dropdown of all the users\' names for the Request Referred To field\n        db.RFI.reqRefTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a form with the RFI fields specified by the fields parameter\n        form = SQLFORM(db.RFI, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\'}, fields=[\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'sheetName\', \'grids\', \'specSection\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\'])\n        \n        currentProj = db(db.Project.projNum == str(request.vars.projectNum)).select().first()\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()    #Get all the RFI\'s for the current project       \n        form.vars.rfiNum = len(rows) + 1               #Initialize the form\'s RFI number to be one more than the current number of RFIs\n        form.vars.requestBy = auth.user.first_name + " " + auth.user.last_name #Initialize the form\'s RequestBy field to be the current user\n        form.vars.statusFlag = "Outstanding"           #Set the status flag (this field isn\'t displayed on the screen)\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number \n        form.vars.projectName = currentProj.name       #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n                \n    elif displayForm == "Submittal":\n        #Create a dropdown for the submittal type\n        db.Submittal.subType.requires = IS_IN_SET([\'Samples\',\'Shop Drawing\',\'Product Data\'])\n        #Create a dropdown of all the users\' names for the Assigned To field\n        db.Submittal.assignedTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a dropdown for the status flag\n        db.Submittal.statusFlag.requires = IS_IN_SET([\'Approved\',\'Resubmit\',\'Approved with Comments\',\'Submitted for Review\'])\n        #Create a form with all the submittal fields\n        form = SQLFORM(db.Submittal, labels={\'statusFlag\':\'Status Flag\', \'projectNum\':\'Project Number\', \'subType\':\'Submittal Type\', \'sectNum\':\'Section Number\',\'assignedTo\':\'Assigned to\'}) \n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "ProposalRequest":  \n        #Create a form with the Proposal Request fields specified by the fields parameter   \n        form = SQLFORM(db.ProposalRequest, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[ \'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\'])\n        \n        currentProj = db(db.Project.projNum == str(request.vars.projectNum)).select().first()\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the ProposalRequests for the current project\n        form.vars.reqNum = len(rows) + 1               #Initialize the request number to be one more than the current number of proposal requests\n        form.vars.statusFlag = "Open"                  #Set the status flag (this field isn\'t displayed on the screen)       \n        form.vars.creator = auth.user.id               #Initialize the creator to be the current user\'s id (this field also isn\'t displayed)\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        form.vars.projectName = currentProj.name   #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n        \n    elif displayForm == "Proposal":\n        propReqs = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select()\n        propNumList = []\n        for propReq in propReqs:\n            propNumList.append(propReq.reqNum)                   #Get all the Proposal Request numbers for the project\n        db.Proposal.propReqRef.requires = IS_IN_SET(propNumList) #Create a dropdown for the Proposal Request Reference #\n        #Create a form with all the Proposal fields \n        form = SQLFORM(db.Proposal, labels={\'propNum\':\'Proposal #\', \'propReqRef\':\'Proposal Request Reference #\', \'projectNum\':\'Project Number\', \'propDate\':\'Proposal Date\'})\n        \n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select() #Get all the Proposals for the current project\n        form.vars.propNum = len(rows) + 1              #Initialize the proposal number to be one more than the current number of proposals\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "MeetingMinutes":\n        #Create a form with all the MeetingMinutes fields\n        form = SQLFORM(db.MeetingMinutes, labels={\'projectNum\':\'Project Number\',\'meetDate\':\'Meeting Date\'})\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "Photo": \n        #Create a form with the Photo fields specified by the fields parameter                     \n        form = SQLFORM(db.Photos, labels={\'projectNum\':\'Project Number\', \'title\':\'Title\', \'description\':\'Description\', \'photo\':\'Photo\'}, fields = [\'projectNum\',\'title\',\'description\',\'photo\'])\n        form.vars.projectNum = request.vars.projectNum #Initialize the form\'s project number to be the current project\'s number\n        \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Form accepted\')\n            if displayForm == "Photo":    #If the form submitted is a photo form, we need to upload it to flickr and delete the photo from our database\n                uploadPhotoToFlickr(form)\n            elif displayForm == "RFI":    #If the form submitted is an RFI form, we need to put the name of person the RFI is referred to instead of the id\n                reqUser = db(db.auth_user.id == form.vars.reqRefTo).select().first()\n                row = db(db.RFI.id == form.vars.id).select().first()\n                row.update_record(reqRefTo = reqUser.first_name + " " + reqUser.last_name)\n            elif displayForm == "Submittal": #If the form submitted is a Submittal, we need to put the name of person it is assigned to instead of the id\n                assignTo = db(db.auth_user.id == form.vars.assignedTo).select().first()\n                row = db(db.Submittal.id == form.vars.id).select().first()\n                row.update_record(assignedTo= assignTo.first_name + " " + assignTo.last_name)\n                \n            #Now create a new newsfeed update noting the new submission\n            if displayForm == "MeetingMinutes":\n                displayForm = "Plan for World Domination"\n            description = "A new " + displayForm + " has been added."\n            db.NewsFeed.insert(projectNum=form.vars.projectNum, type="document", created_on=datetime.today(), description=description, creator=auth.user.first_name + " " + auth.user.last_name)\n            db.commit()\n            \n        elif form.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(displayForm=displayForm,\n                form=form,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                footer=footer,\n                header=header,\n                css=css)\n\n#This is called when a user clicks on a categry in an archived project\'s sidebar. It returns a dictionary used by the view default/formtablearchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\') \ndef formtablearchived():\n    formType = request.vars.formType                                              #Get the type of table to display\n    project =  db(db.Project.projNum == request.vars.projectNum).select().first() #Get the archived project that is currently being viewed\n    table = None                                                                  #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                              #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()     #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]           #Set the CCD\'s file URL\n        #Create a table of the CCDs, displaying the values given by the columns parameter\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'],headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"},upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()     #Get all the RFIs for the current project\n        #Represent the RFI number as a link to view the RFI\n        db.RFI.rfiNum.represent = lambda rfiNum: A(str(rfiNum), _href=URL("default","create_odt",args=[int(rfiNum)]),_target="_blank")\n        #Create a table of the RFIs\n        table = SQLTABLE(rows, _width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseDate"], \n            headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To","RFI.responseDate":"Response Date"})\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select() #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]   #Set the Submittal\'s file URL\n        #Create a table of the Submittals \n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.subType","Submittal.sectNum","Submittal.submittal"], \n            headers={"Submittal.assignedTo":"Assigned To","Submittal.subType":"Type","Submittal.sectNum":"Section Number",\n            "Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.sentTo","ProposalRequest.propDate"],\n            headers={"ProposalRequest.reqNum":"Request Number","ProposalRequest.amendNum":"Amendment Number",\n            "ProposalRequest.sentTo":"Sent To","ProposalRequest.propDate":"Proposal Request Date"})\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()  #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]             #Set the Proposal\'s file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"], \n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select() #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the Meeting Minute\'s file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"], \n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()         #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There were no documents uploaded for this project section."\n        fullTable = False\n\n    return dict(formType=formType,\n                project=project,\n                table=table,\n                header=header_archived,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on a category for a project in the sidebar. It returns a dictionary used by the view default/formtable.html\n@auth.requires_login()\ndef formtable():\n    formType = request.vars.formType                                                     #Get the type of table to display        \n    table = None                                                                         #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                                     #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()            #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the CCD file\'s URL\n        #myextracolumns = [{\'label\': \'CCD Thumbnail(for testing)\',\'class\':\'\',\'selected\':False, \'width\':\'\', \n        #    \'content\': lambda row, rc: IMG(_width="40",_height="40",_src=URL(\'default\',\'download\',args=row.file))}]\n        #Create a table of the CCDs\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'], headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()            #Get all the RFIs for the current project\n        #Create an extra column. If the user is the one who is supposed to reply to the RFI, then have a link in the column for the user to do so\n        extracolumn = [{\'label\':\'Reply to RFI\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Reply", _href=URL(\'default\',\'replyRFI\',args=row.id)) if auth.user.first_name +" " +\n                     auth.user.last_name == row.reqRefTo else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the RFIs, adding the extra "Reply to RFI" column on the far right\n        table = SQLTABLE(rows,_width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseBy","RFI.responseDate",\n            "RFI.statusFlag"], headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To",\n            "RFI.responseDate":"Response Date","RFI.responseBy":"Need Response By","RFI.statusFlag":"Status Flag"}, extracolumns=extracolumn)\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select()       #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]         #Set the Submittals\' file URL\n        #Create a table of the Submittals\n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.statusFlag","Submittal.subType","Submittal.sectNum","Submittal.submittal"],\n            headers={"Submittal.assignedTo":"Assigned To","Submittal.statusFlag":"Status Flag","Submittal.subType":"Type",\n            "Submittal.sectNum":"Section Number","Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create an extra column. If the user is the creator of the request, include a link with the option to change the status of the document \n        extracolumn = [{\'label\':\'Change Status\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Change", _href=URL(\'default\',\'changePropReq\',args=row.id)) if auth.user.id == row.creator else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.statusFlag",\n            "ProposalRequest.sentTo","ProposalRequest.propDate"], headers={"ProposalRequest.reqNum":"Request Number",\n            "ProposalRequest.amendNum":"Amendment Number","ProposalRequest.sentTo":"Sent To","ProposalRequest.statusFlag":"Status Flag",\n            "ProposalRequest.propDate":"Proposal Request Date"}, extracolumns=extracolumn)\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()        #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Proposals\' file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"],\n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select()  #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Meeting Minutes\' file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"],\n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()          #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There are no documents uploaded for this project section yet."\n        fullTable = False\n\n    return dict(formType=formType,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                table= table,\n                footer=footer,\n                header=header,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on "Reply to RFI" when on the RFI\'s formtable view. It returns a dictionary used by the view default/replyRFI.html\n@auth.requires_login()\ndef replyRFI():\n    id = request.args(0) #the id of the RFI\n    db.RFI.statusFlag.requires = IS_IN_SET([\'Outstanding\',\'Closed\']) #Make a dropdown for the status flag\n    \n    #Create the SQLFORM, filling in all the previously submitted information\n    replyRfiForm = SQLFORM(db.RFI, id, showid=False, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\', \'reply\':\'Reply\', \'responseDate\':\'Response Date\', \'statusFlag\':\'Status Flag\'}, fields = [\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'specSection\', \'sheetName\', \'grids\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\', \'reply\', \'responseDate\', \'statusFlag\'], _id="replyForm")\n    \n    if replyRfiForm != None:\n        if replyRfiForm.process().accepted:\n            row = db(db.RFI.id == id).select().first() #Get the RFI we\'re replying to\n            \n            #Update the RFI\'s reply and response date (but don\'t save any of the other fields -- want to keep the other fields read-only for this)\n            row.update_record(reply=str(replyRfiForm.vars.reply), responseDate=str(replyRfiForm.vars.responseDate))     \n            db.commit()   \n            \n            session.flash = T(\'RFI Reply Accepted\')  \n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'RFI\', projectNum=str(replyRfiForm.vars.projectNum))))  #Redirect to the RFI table                    \n        \n        elif replyRfiForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(replyRfiForm=replyRfiForm, css=css, header=header, footer=footer)\n\n#This is called when a user clicks on "Change Status" when on the Proposal Request\'s formtable view. It returns a dictionary used by the view default/changePropReq.html\n@auth.requires_login()\ndef changePropReq():\n    id = request.args(0)  #The id of the Proposal Request\n    db.ProposalRequest.statusFlag.requires = IS_IN_SET([\'Open\',\'Closed\'])          #Make a dropdown for the status flag  \n    #Create the SQLFORM, filling in all the previously submitted information\n    changePropReqForm = SQLFORM(db.ProposalRequest, id, showid=False, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'statusFlag\':\'Status\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[\'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\',\'statusFlag\'], _id="changePropReqForm")\n        \n    if changePropReqForm != None:\n        if changePropReqForm.process().accepted:\n            row = db(db.ProposalRequest.id == id).select().first()                 #Get the current Proposal Request\n            row.update_record(statusFlag = str(changePropReqForm.vars.statusFlag)) #Update the Proposal Request with the new status flag      \n            db.commit()   \n            session.flash = T(\'Status Change Accepted\')  \n            #Redirect to the Proposal Request table\n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'ProposalRequest\', projectNum=str(changePropReqForm.vars.projectNum))))                      \n        elif changePropReqForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(changePropReqForm=changePropReqForm, css=css, header=header, footer=footer)  \n\ndef viewPhoto():\n    br = mechanize.Browser()\n    # Browser options\n    br.set_handle_equiv(True)\n    br.set_handle_gzip(True)\n    br.set_handle_redirect(True)\n    br.set_handle_referer(True)\n    br.set_handle_robots(False)\n\n    # Follows refresh 0 but not hangs on refresh > 0\n    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n    r = br.open(request.vars["url"])\n    br.select_form("login_form")\n    br.form["passwd"]="finholt1"\n    import tkMessageBox\n    #tkMessageBox.showinfo(title="Greetings", message=str(br.form))\n    r = br.submit()\n    br.open(request.vars["url"])\n\n\n    \n    redirect(request.vars["url"])        \n\n#This returns a string of the opposite of the user\'s role (either Admin or General)\ndef getOtherRoles(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "General"\n    else:\n        return "Admin"\n\n#This returns a string of the user\'s role (either Admin or General)     \ndef getUserRole(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "Admin"\n    else:\n        return "General"\n\n#This is called by create_odt to get a dictionay of RFI data given the RFI number\ndef get_data(row_id):\n    import MySQLdb\n\n    db = MySQLdb.connect(host="10.24.6.23", user="seniorproj", passwd="web2py2012", db="finholt")\n    cur = db.cursor()\n\n    # Getting the rows from the database\n\n    cur.execute("SELECT * FROM RFI WHERE rfiNum = %s;",(row_id))\n    columns = cur.description\n    row = cur.fetchall()\n\n    dict = {}\n\n    for i in range(len(columns)):\n        dict[columns[i][0]] = row[0][i]\n\n    return dict\n\n#This creates the RFI document for viewing in the browser. It returns a dictionary used by the view default/create_odt.html\ndef create_odt():\n    import subprocess\n    import os\n    import time\n    appy = local_import(\'appy.pod.renderer\')\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'result.odt\')\n    subprocess.Popen("rm " + phpscript, shell=True)\n\n    # giving the program enough time to delete the old result.odt\n    time.sleep(1)\n \n    dictionary = get_data(request.args[0])\n\n    appyDict = {}\n    appyDict[\'rfiNumber\'] = dictionary[\'rfiNum\']\n\n    # Need to add database places for these and then add the dictionary\n    appyDict[\'project\'] = dictionary[\'projectName\']\n    appyDict[\'owner\'] = dictionary[\'owner\']\n\n    appyDict[\'requestBy\'] = dictionary[\'requestBy\']\n\n    dtSent = dictionary[\'dateSent\']\n    if dtSent != None:\n        appyDict[\'DateSent\'] = "%s/%s/%s" % (dtSent.month,dtSent.day,dtSent.year)\n    else:\n        appyDict[\'DateSent\'] = "None"\n\n    appyDict[\'requestReferredTo\'] = dictionary[\'reqRefTo\']\n\n    dtRec = dictionary[\'dateRec\']\n    if dtRec != None:\n        appyDict[\'DateReceived\'] = "%s/%s/%s" % (dtRec.month,dtRec.day,dtRec.year)\n    else:\n        appyDict[\'DateReceived\'] = "None"\n\n    appyDict[\'drawingNum\'] = dictionary[\'drawingNum\']\n\n    appyDict[\'detailNum\'] = dictionary[\'detailNum\']\n\n    appyDict[\'specNum\'] = dictionary[\'specSection\']\n    appyDict[\'sheetName\'] = dictionary[\'sheetName\']\n\n    appyDict[\'grids\'] = dictionary[\'grids\']\n    appyDict[\'sectionPage\'] = dictionary[\'sectionPage\']\n\n    appyDict[\'rfiDescription\'] = dictionary[\'description\']\n\n    appyDict[\'contractorSuggestion\'] = dictionary[\'suggestion\']\n\n    appyDict[\'reply\'] = dictionary[\'reply\']\n\n    appyDict[\'responseBy\'] = dictionary[\'responseBy\']\n\n    dtResp = dictionary[\'responseDate\']\n    if dtResp != None:\n        appyDict[\'responseDate\'] = "%s/%s/%s" % (dtResp.month,dtResp.day,dtResp.year)\n    else:\n        appyDict[\'responseDate\']\n\n    myfile = os.path.join(request.folder, \'static\',\'php\', \'rfiTemplate.odt\')\n    newfile = os.path.join(request.folder, \'static\',\'php\', \'result.odt\')\n    \n    renderer = appy.Renderer(myfile, appyDict, newfile)\n    renderer.run()\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'rfi.php\')\n    proc = subprocess.Popen("php " + phpscript, shell=True, stdout=subprocess.PIPE)\n    resp = proc.stdout.read()\n\n    return dict(html=HTML(\'\',XML(resp)))\n\n#Returns the html needed for the checkboxes on the addtoproject screen \ndef getAllProjectsHtml(id):\n    html=\'\'\n    projects = db(db.Project.archived == False).select()  #Get all the current non-archived projects\n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n\n    for row in projects:                                  #Find all the projects that the user is not already associated with\n        if user.projects != None:\n            if row.projNum not in user.projects:\n                html +=  \'<input value="\'+str(row.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.projNum)+"</br>"\n        else:\n            html +=  \'<input value="\'+str(row.id)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.id)+"</br>"\n    \n    if html ==\'\':                                         #The user is already associated with all the projects\n        html = "<p>In all projects</p>"\n        \n    return html \n\n#Returns the html needed for the checkboxes on the deletefromproject screen\ndef getUsersProjectsHtml(id):\n    html = \'\'    \n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n    \n    if user.projects != None and len(user.projects) >= 1: #Make a checkbox for all the projects that the user is associatewith\n        for projId in user.projects:\n            project = db((db.Project.archived == False) & (db.Project.projNum == projId)).select().first()\n            html +=  \'<input value="\'+str(project.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(project.projNum)+"</br>"\n    else:\n        html = "<p>Not on any projects</p>"\n        \n    return html\n\nresponse._vars=response._caller(user)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S'\'        "secret"="ad86826c3187eb4d"\\n\''
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p37
sS'lineno'
p38
S'119'
p39
sS'msg'
p40
S"'invalid syntax'"
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'(\'invalid syntax\', (\'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py\', 119, 17, \'        "secret"="ad86826c3187eb4d"\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'17'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S'invalid syntax (default.py, line 119)'
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'SeniorProject'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
g69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g155
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
sg83
g159
sg76
(lp166
g69
(g70
g71
NtRp167
(dp168
g74
(dp169
g82
I4
ssg83
g163
sg76
(lp170
S'login'
p171
asbasbasbasbasbasbasbag69
(g85
g71
NtRp172
(dp173
g74
(dp174
sg83
g79
sg76
(lp175
g69
(g90
g71
NtRp176
(dp177
g74
(dp178
g94
g95
ssg83
g172
sg76
(lp179
S'body'
p180
asbag69
(g90
g71
NtRp181
(dp182
g74
(dp183
g101
g102
ssg83
g172
sg76
(lp184
S':'
asbag69
(g90
g71
NtRp185
(dp186
g74
(dp187
sg83
g172
sg76
(lp188
g69
(g70
g71
NtRp189
(dp190
g74
(dp191
g82
I5
ssg83
g185
sg76
(lp192
S'<cStringIO.StringO object at 0x108e9eea0>'
p193
asbasbasbag69
(g85
g71
NtRp194
(dp195
g74
(dp196
sg83
g79
sg76
(lp197
g69
(g90
g71
NtRp198
(dp199
g74
(dp200
g94
g95
ssg83
g194
sg76
(lp201
S'client'
p202
asbag69
(g90
g71
NtRp203
(dp204
g74
(dp205
g101
g102
ssg83
g194
sg76
(lp206
S':'
asbag69
(g90
g71
NtRp207
(dp208
g74
(dp209
sg83
g194
sg76
(lp210
g69
(g70
g71
NtRp211
(dp212
g74
(dp213
g82
I5
ssg83
g207
sg76
(lp214
S'127.0.0.1'
p215
asbasbasbag69
(g85
g71
NtRp216
(dp217
g74
(dp218
sg83
g79
sg76
(lp219
g69
(g90
g71
NtRp220
(dp221
g74
(dp222
g94
g95
ssg83
g216
sg76
(lp223
S'controller'
p224
asbag69
(g90
g71
NtRp225
(dp226
g74
(dp227
g101
g102
ssg83
g216
sg76
(lp228
S':'
asbag69
(g90
g71
NtRp229
(dp230
g74
(dp231
sg83
g216
sg76
(lp232
g69
(g70
g71
NtRp233
(dp234
g74
(dp235
g82
I5
ssg83
g229
sg76
(lp236
S'default'
p237
asbasbasbag69
(g85
g71
NtRp238
(dp239
g74
(dp240
sg83
g79
sg76
(lp241
g69
(g90
g71
NtRp242
(dp243
g74
(dp244
g94
g95
ssg83
g238
sg76
(lp245
S'cookies'
p246
asbag69
(g90
g71
NtRp247
(dp248
g74
(dp249
g101
g102
ssg83
g238
sg76
(lp250
S':'
asbag69
(g90
g71
NtRp251
(dp252
g74
(dp253
sg83
g238
sg76
(lp254
g69
(g70
g71
NtRp255
(dp256
g74
(dp257
g82
I5
ssg83
g251
sg76
(lp258
g69
(g78
g71
NtRp259
(dp260
g74
(dp261
g82
I4
ssg83
Nsg76
(lp262
g69
(g85
g71
NtRp263
(dp264
g74
(dp265
sg83
g259
sg76
(lp266
g69
(g90
g71
NtRp267
(dp268
g74
(dp269
g94
g95
ssg83
g263
sg76
(lp270
S'session_id_admin'
p271
asbag69
(g90
g71
NtRp272
(dp273
g74
(dp274
g101
g102
ssg83
g263
sg76
(lp275
S':'
asbag69
(g90
g71
NtRp276
(dp277
g74
(dp278
sg83
g263
sg76
(lp279
g69
(g70
g71
NtRp280
(dp281
g74
(dp282
g82
I4
ssg83
g276
sg76
(lp283
g69
(g78
g71
NtRp284
(dp285
g74
(dp286
g82
I3
ssg83
Nsg76
(lp287
g69
(g85
g71
NtRp288
(dp289
g74
(dp290
sg83
g284
sg76
(lp291
g69
(g90
g71
NtRp292
(dp293
g74
(dp294
g94
g95
ssg83
g288
sg76
(lp295
S'comment'
p296
asbag69
(g90
g71
NtRp297
(dp298
g74
(dp299
g101
g102
ssg83
g288
sg76
(lp300
S':'
asbag69
(g90
g71
NtRp301
(dp302
g74
(dp303
sg83
g288
sg76
(lp304
g69
(g70
g71
NtRp305
(dp306
g74
(dp307
g82
I3
ssg83
g301
sg76
(lp308
S''
asbasbasbag69
(g85
g71
NtRp309
(dp310
g74
(dp311
sg83
g284
sg76
(lp312
g69
(g90
g71
NtRp313
(dp314
g74
(dp315
g94
g95
ssg83
g309
sg76
(lp316
S'domain'
p317
asbag69
(g90
g71
NtRp318
(dp319
g74
(dp320
g101
g102
ssg83
g309
sg76
(lp321
S':'
asbag69
(g90
g71
NtRp322
(dp323
g74
(dp324
sg83
g309
sg76
(lp325
g69
(g70
g71
NtRp326
(dp327
g74
(dp328
g82
I3
ssg83
g322
sg76
(lp329
S''
asbasbasbag69
(g85
g71
NtRp330
(dp331
g74
(dp332
sg83
g284
sg76
(lp333
g69
(g90
g71
NtRp334
(dp335
g74
(dp336
g94
g95
ssg83
g330
sg76
(lp337
S'expires'
p338
asbag69
(g90
g71
NtRp339
(dp340
g74
(dp341
g101
g102
ssg83
g330
sg76
(lp342
S':'
asbag69
(g90
g71
NtRp343
(dp344
g74
(dp345
sg83
g330
sg76
(lp346
g69
(g70
g71
NtRp347
(dp348
g74
(dp349
g82
I3
ssg83
g343
sg76
(lp350
S''
asbasbasbag69
(g85
g71
NtRp351
(dp352
g74
(dp353
sg83
g284
sg76
(lp354
g69
(g90
g71
NtRp355
(dp356
g74
(dp357
g94
g95
ssg83
g351
sg76
(lp358
S'httponly'
p359
asbag69
(g90
g71
NtRp360
(dp361
g74
(dp362
g101
g102
ssg83
g351
sg76
(lp363
S':'
asbag69
(g90
g71
NtRp364
(dp365
g74
(dp366
sg83
g351
sg76
(lp367
g69
(g70
g71
NtRp368
(dp369
g74
(dp370
g82
I3
ssg83
g364
sg76
(lp371
S''
asbasbasbag69
(g85
g71
NtRp372
(dp373
g74
(dp374
sg83
g284
sg76
(lp375
g69
(g90
g71
NtRp376
(dp377
g74
(dp378
g94
g95
ssg83
g372
sg76
(lp379
S'max-age'
p380
asbag69
(g90
g71
NtRp381
(dp382
g74
(dp383
g101
g102
ssg83
g372
sg76
(lp384
S':'
asbag69
(g90
g71
NtRp385
(dp386
g74
(dp387
sg83
g372
sg76
(lp388
g69
(g70
g71
NtRp389
(dp390
g74
(dp391
g82
I3
ssg83
g385
sg76
(lp392
S''
asbasbasbag69
(g85
g71
NtRp393
(dp394
g74
(dp395
sg83
g284
sg76
(lp396
g69
(g90
g71
NtRp397
(dp398
g74
(dp399
g94
g95
ssg83
g393
sg76
(lp400
S'path'
p401
asbag69
(g90
g71
NtRp402
(dp403
g74
(dp404
g101
g102
ssg83
g393
sg76
(lp405
S':'
asbag69
(g90
g71
NtRp406
(dp407
g74
(dp408
sg83
g393
sg76
(lp409
g69
(g70
g71
NtRp410
(dp411
g74
(dp412
g82
I3
ssg83
g406
sg76
(lp413
S''
asbasbasbag69
(g85
g71
NtRp414
(dp415
g74
(dp416
sg83
g284
sg76
(lp417
g69
(g90
g71
NtRp418
(dp419
g74
(dp420
g94
g95
ssg83
g414
sg76
(lp421
S'secure'
p422
asbag69
(g90
g71
NtRp423
(dp424
g74
(dp425
g101
g102
ssg83
g414
sg76
(lp426
S':'
asbag69
(g90
g71
NtRp427
(dp428
g74
(dp429
sg83
g414
sg76
(lp430
g69
(g70
g71
NtRp431
(dp432
g74
(dp433
g82
I3
ssg83
g427
sg76
(lp434
S''
asbasbasbag69
(g85
g71
NtRp435
(dp436
g74
(dp437
sg83
g284
sg76
(lp438
g69
(g90
g71
NtRp439
(dp440
g74
(dp441
g94
g95
ssg83
g435
sg76
(lp442
S'version'
p443
asbag69
(g90
g71
NtRp444
(dp445
g74
(dp446
g101
g102
ssg83
g435
sg76
(lp447
S':'
asbag69
(g90
g71
NtRp448
(dp449
g74
(dp450
sg83
g435
sg76
(lp451
g69
(g70
g71
NtRp452
(dp453
g74
(dp454
g82
I3
ssg83
g448
sg76
(lp455
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp456
(dp457
g74
(dp458
sg83
g259
sg76
(lp459
g69
(g90
g71
NtRp460
(dp461
g74
(dp462
g94
g95
ssg83
g456
sg76
(lp463
S'session_id_seniorproject'
p464
asbag69
(g90
g71
NtRp465
(dp466
g74
(dp467
g101
g102
ssg83
g456
sg76
(lp468
S':'
asbag69
(g90
g71
NtRp469
(dp470
g74
(dp471
sg83
g456
sg76
(lp472
g69
(g70
g71
NtRp473
(dp474
g74
(dp475
g82
I4
ssg83
g469
sg76
(lp476
g69
(g78
g71
NtRp477
(dp478
g74
(dp479
g82
I3
ssg83
Nsg76
(lp480
g69
(g85
g71
NtRp481
(dp482
g74
(dp483
sg83
g477
sg76
(lp484
g69
(g90
g71
NtRp485
(dp486
g74
(dp487
g94
g95
ssg83
g481
sg76
(lp488
g296
asbag69
(g90
g71
NtRp489
(dp490
g74
(dp491
g101
g102
ssg83
g481
sg76
(lp492
S':'
asbag69
(g90
g71
NtRp493
(dp494
g74
(dp495
sg83
g481
sg76
(lp496
g69
(g70
g71
NtRp497
(dp498
g74
(dp499
g82
I3
ssg83
g493
sg76
(lp500
S''
asbasbasbag69
(g85
g71
NtRp501
(dp502
g74
(dp503
sg83
g477
sg76
(lp504
g69
(g90
g71
NtRp505
(dp506
g74
(dp507
g94
g95
ssg83
g501
sg76
(lp508
g317
asbag69
(g90
g71
NtRp509
(dp510
g74
(dp511
g101
g102
ssg83
g501
sg76
(lp512
S':'
asbag69
(g90
g71
NtRp513
(dp514
g74
(dp515
sg83
g501
sg76
(lp516
g69
(g70
g71
NtRp517
(dp518
g74
(dp519
g82
I3
ssg83
g513
sg76
(lp520
S''
asbasbasbag69
(g85
g71
NtRp521
(dp522
g74
(dp523
sg83
g477
sg76
(lp524
g69
(g90
g71
NtRp525
(dp526
g74
(dp527
g94
g95
ssg83
g521
sg76
(lp528
g338
asbag69
(g90
g71
NtRp529
(dp530
g74
(dp531
g101
g102
ssg83
g521
sg76
(lp532
S':'
asbag69
(g90
g71
NtRp533
(dp534
g74
(dp535
sg83
g521
sg76
(lp536
g69
(g70
g71
NtRp537
(dp538
g74
(dp539
g82
I3
ssg83
g533
sg76
(lp540
S''
asbasbasbag69
(g85
g71
NtRp541
(dp542
g74
(dp543
sg83
g477
sg76
(lp544
g69
(g90
g71
NtRp545
(dp546
g74
(dp547
g94
g95
ssg83
g541
sg76
(lp548
g359
asbag69
(g90
g71
NtRp549
(dp550
g74
(dp551
g101
g102
ssg83
g541
sg76
(lp552
S':'
asbag69
(g90
g71
NtRp553
(dp554
g74
(dp555
sg83
g541
sg76
(lp556
g69
(g70
g71
NtRp557
(dp558
g74
(dp559
g82
I3
ssg83
g553
sg76
(lp560
S''
asbasbasbag69
(g85
g71
NtRp561
(dp562
g74
(dp563
sg83
g477
sg76
(lp564
g69
(g90
g71
NtRp565
(dp566
g74
(dp567
g94
g95
ssg83
g561
sg76
(lp568
g380
asbag69
(g90
g71
NtRp569
(dp570
g74
(dp571
g101
g102
ssg83
g561
sg76
(lp572
S':'
asbag69
(g90
g71
NtRp573
(dp574
g74
(dp575
sg83
g561
sg76
(lp576
g69
(g70
g71
NtRp577
(dp578
g74
(dp579
g82
I3
ssg83
g573
sg76
(lp580
S''
asbasbasbag69
(g85
g71
NtRp581
(dp582
g74
(dp583
sg83
g477
sg76
(lp584
g69
(g90
g71
NtRp585
(dp586
g74
(dp587
g94
g95
ssg83
g581
sg76
(lp588
g401
asbag69
(g90
g71
NtRp589
(dp590
g74
(dp591
g101
g102
ssg83
g581
sg76
(lp592
S':'
asbag69
(g90
g71
NtRp593
(dp594
g74
(dp595
sg83
g581
sg76
(lp596
g69
(g70
g71
NtRp597
(dp598
g74
(dp599
g82
I3
ssg83
g593
sg76
(lp600
S''
asbasbasbag69
(g85
g71
NtRp601
(dp602
g74
(dp603
sg83
g477
sg76
(lp604
g69
(g90
g71
NtRp605
(dp606
g74
(dp607
g94
g95
ssg83
g601
sg76
(lp608
g422
asbag69
(g90
g71
NtRp609
(dp610
g74
(dp611
g101
g102
ssg83
g601
sg76
(lp612
S':'
asbag69
(g90
g71
NtRp613
(dp614
g74
(dp615
sg83
g601
sg76
(lp616
g69
(g70
g71
NtRp617
(dp618
g74
(dp619
g82
I3
ssg83
g613
sg76
(lp620
S''
asbasbasbag69
(g85
g71
NtRp621
(dp622
g74
(dp623
sg83
g477
sg76
(lp624
g69
(g90
g71
NtRp625
(dp626
g74
(dp627
g94
g95
ssg83
g621
sg76
(lp628
g443
asbag69
(g90
g71
NtRp629
(dp630
g74
(dp631
g101
g102
ssg83
g621
sg76
(lp632
S':'
asbag69
(g90
g71
NtRp633
(dp634
g74
(dp635
sg83
g621
sg76
(lp636
g69
(g70
g71
NtRp637
(dp638
g74
(dp639
g82
I3
ssg83
g633
sg76
(lp640
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp641
(dp642
g74
(dp643
sg83
g259
sg76
(lp644
g69
(g90
g71
NtRp645
(dp646
g74
(dp647
g94
g95
ssg83
g641
sg76
(lp648
S'session_id_welcome'
p649
asbag69
(g90
g71
NtRp650
(dp651
g74
(dp652
g101
g102
ssg83
g641
sg76
(lp653
S':'
asbag69
(g90
g71
NtRp654
(dp655
g74
(dp656
sg83
g641
sg76
(lp657
g69
(g70
g71
NtRp658
(dp659
g74
(dp660
g82
I4
ssg83
g654
sg76
(lp661
g69
(g78
g71
NtRp662
(dp663
g74
(dp664
g82
I3
ssg83
Nsg76
(lp665
g69
(g85
g71
NtRp666
(dp667
g74
(dp668
sg83
g662
sg76
(lp669
g69
(g90
g71
NtRp670
(dp671
g74
(dp672
g94
g95
ssg83
g666
sg76
(lp673
g296
asbag69
(g90
g71
NtRp674
(dp675
g74
(dp676
g101
g102
ssg83
g666
sg76
(lp677
S':'
asbag69
(g90
g71
NtRp678
(dp679
g74
(dp680
sg83
g666
sg76
(lp681
g69
(g70
g71
NtRp682
(dp683
g74
(dp684
g82
I3
ssg83
g678
sg76
(lp685
S''
asbasbasbag69
(g85
g71
NtRp686
(dp687
g74
(dp688
sg83
g662
sg76
(lp689
g69
(g90
g71
NtRp690
(dp691
g74
(dp692
g94
g95
ssg83
g686
sg76
(lp693
g317
asbag69
(g90
g71
NtRp694
(dp695
g74
(dp696
g101
g102
ssg83
g686
sg76
(lp697
S':'
asbag69
(g90
g71
NtRp698
(dp699
g74
(dp700
sg83
g686
sg76
(lp701
g69
(g70
g71
NtRp702
(dp703
g74
(dp704
g82
I3
ssg83
g698
sg76
(lp705
S''
asbasbasbag69
(g85
g71
NtRp706
(dp707
g74
(dp708
sg83
g662
sg76
(lp709
g69
(g90
g71
NtRp710
(dp711
g74
(dp712
g94
g95
ssg83
g706
sg76
(lp713
g338
asbag69
(g90
g71
NtRp714
(dp715
g74
(dp716
g101
g102
ssg83
g706
sg76
(lp717
S':'
asbag69
(g90
g71
NtRp718
(dp719
g74
(dp720
sg83
g706
sg76
(lp721
g69
(g70
g71
NtRp722
(dp723
g74
(dp724
g82
I3
ssg83
g718
sg76
(lp725
S''
asbasbasbag69
(g85
g71
NtRp726
(dp727
g74
(dp728
sg83
g662
sg76
(lp729
g69
(g90
g71
NtRp730
(dp731
g74
(dp732
g94
g95
ssg83
g726
sg76
(lp733
g359
asbag69
(g90
g71
NtRp734
(dp735
g74
(dp736
g101
g102
ssg83
g726
sg76
(lp737
S':'
asbag69
(g90
g71
NtRp738
(dp739
g74
(dp740
sg83
g726
sg76
(lp741
g69
(g70
g71
NtRp742
(dp743
g74
(dp744
g82
I3
ssg83
g738
sg76
(lp745
S''
asbasbasbag69
(g85
g71
NtRp746
(dp747
g74
(dp748
sg83
g662
sg76
(lp749
g69
(g90
g71
NtRp750
(dp751
g74
(dp752
g94
g95
ssg83
g746
sg76
(lp753
g380
asbag69
(g90
g71
NtRp754
(dp755
g74
(dp756
g101
g102
ssg83
g746
sg76
(lp757
S':'
asbag69
(g90
g71
NtRp758
(dp759
g74
(dp760
sg83
g746
sg76
(lp761
g69
(g70
g71
NtRp762
(dp763
g74
(dp764
g82
I3
ssg83
g758
sg76
(lp765
S''
asbasbasbag69
(g85
g71
NtRp766
(dp767
g74
(dp768
sg83
g662
sg76
(lp769
g69
(g90
g71
NtRp770
(dp771
g74
(dp772
g94
g95
ssg83
g766
sg76
(lp773
g401
asbag69
(g90
g71
NtRp774
(dp775
g74
(dp776
g101
g102
ssg83
g766
sg76
(lp777
S':'
asbag69
(g90
g71
NtRp778
(dp779
g74
(dp780
sg83
g766
sg76
(lp781
g69
(g70
g71
NtRp782
(dp783
g74
(dp784
g82
I3
ssg83
g778
sg76
(lp785
S''
asbasbasbag69
(g85
g71
NtRp786
(dp787
g74
(dp788
sg83
g662
sg76
(lp789
g69
(g90
g71
NtRp790
(dp791
g74
(dp792
g94
g95
ssg83
g786
sg76
(lp793
g422
asbag69
(g90
g71
NtRp794
(dp795
g74
(dp796
g101
g102
ssg83
g786
sg76
(lp797
S':'
asbag69
(g90
g71
NtRp798
(dp799
g74
(dp800
sg83
g786
sg76
(lp801
g69
(g70
g71
NtRp802
(dp803
g74
(dp804
g82
I3
ssg83
g798
sg76
(lp805
S''
asbasbasbag69
(g85
g71
NtRp806
(dp807
g74
(dp808
sg83
g662
sg76
(lp809
g69
(g90
g71
NtRp810
(dp811
g74
(dp812
g94
g95
ssg83
g806
sg76
(lp813
g443
asbag69
(g90
g71
NtRp814
(dp815
g74
(dp816
g101
g102
ssg83
g806
sg76
(lp817
S':'
asbag69
(g90
g71
NtRp818
(dp819
g74
(dp820
sg83
g806
sg76
(lp821
g69
(g70
g71
NtRp822
(dp823
g74
(dp824
g82
I3
ssg83
g818
sg76
(lp825
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp826
(dp827
g74
(dp828
sg83
g79
sg76
(lp829
g69
(g90
g71
NtRp830
(dp831
g74
(dp832
g94
g95
ssg83
g826
sg76
(lp833
S'env'
p834
asbag69
(g90
g71
NtRp835
(dp836
g74
(dp837
g101
g102
ssg83
g826
sg76
(lp838
S':'
asbag69
(g90
g71
NtRp839
(dp840
g74
(dp841
sg83
g826
sg76
(lp842
g69
(g70
g71
NtRp843
(dp844
g74
(dp845
g82
I5
ssg83
g839
sg76
(lp846
g69
(g78
g71
NtRp847
(dp848
g74
(dp849
g82
I4
ssg83
Nsg76
(lp850
g69
(g85
g71
NtRp851
(dp852
g74
(dp853
sg83
g847
sg76
(lp854
g69
(g90
g71
NtRp855
(dp856
g74
(dp857
g94
g95
ssg83
g851
sg76
(lp858
S'app_folders'
p859
asbag69
(g90
g71
NtRp860
(dp861
g74
(dp862
g101
g102
ssg83
g851
sg76
(lp863
S':'
asbag69
(g90
g71
NtRp864
(dp865
g74
(dp866
sg83
g851
sg76
(lp867
g69
(g70
g71
NtRp868
(dp869
g74
(dp870
g82
I4
ssg83
g864
sg76
(lp871
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p872
asbasbasbag69
(g85
g71
NtRp873
(dp874
g74
(dp875
sg83
g847
sg76
(lp876
g69
(g90
g71
NtRp877
(dp878
g74
(dp879
g94
g95
ssg83
g873
sg76
(lp880
S'applications_parent'
p881
asbag69
(g90
g71
NtRp882
(dp883
g74
(dp884
g101
g102
ssg83
g873
sg76
(lp885
S':'
asbag69
(g90
g71
NtRp886
(dp887
g74
(dp888
sg83
g873
sg76
(lp889
g69
(g70
g71
NtRp890
(dp891
g74
(dp892
g82
I4
ssg83
g886
sg76
(lp893
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p894
asbasbasbag69
(g85
g71
NtRp895
(dp896
g74
(dp897
sg83
g847
sg76
(lp898
g69
(g90
g71
NtRp899
(dp900
g74
(dp901
g94
g95
ssg83
g895
sg76
(lp902
S'cmd_args'
p903
asbag69
(g90
g71
NtRp904
(dp905
g74
(dp906
g101
g102
ssg83
g895
sg76
(lp907
S':'
asbag69
(g90
g71
NtRp908
(dp909
g74
(dp910
sg83
g895
sg76
(lp911
g69
(g70
g71
NtRp912
(dp913
g74
(dp914
g82
I4
ssg83
g908
sg76
(lp915
g69
(g78
g71
NtRp916
(dp917
g74
(dp918
g82
I3
ssg83
Nsg76
(lp919
sbasbasbasbag69
(g85
g71
NtRp920
(dp921
g74
(dp922
sg83
g847
sg76
(lp923
g69
(g90
g71
NtRp924
(dp925
g74
(dp926
g94
g95
ssg83
g920
sg76
(lp927
S'cmd_options'
p928
asbag69
(g90
g71
NtRp929
(dp930
g74
(dp931
g101
g102
ssg83
g920
sg76
(lp932
S':'
asbag69
(g90
g71
NtRp933
(dp934
g74
(dp935
sg83
g920
sg76
(lp936
g69
(g70
g71
NtRp937
(dp938
g74
(dp939
g82
I4
ssg83
g933
sg76
(lp940
S"<Values at 0x10236f638: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p941
asbasbasbag69
(g85
g71
NtRp942
(dp943
g74
(dp944
sg83
g847
sg76
(lp945
g69
(g90
g71
NtRp946
(dp947
g74
(dp948
g94
g95
ssg83
g942
sg76
(lp949
S'db_sessions'
p950
asbag69
(g90
g71
NtRp951
(dp952
g74
(dp953
g101
g102
ssg83
g942
sg76
(lp954
S':'
asbag69
(g90
g71
NtRp955
(dp956
g74
(dp957
sg83
g942
sg76
(lp958
g69
(g70
g71
NtRp959
(dp960
g74
(dp961
g82
I4
ssg83
g955
sg76
(lp962
S'set([])'
p963
asbasbasbag69
(g85
g71
NtRp964
(dp965
g74
(dp966
sg83
g847
sg76
(lp967
g69
(g90
g71
NtRp968
(dp969
g74
(dp970
g94
g95
ssg83
g964
sg76
(lp971
S'debugging'
p972
asbag69
(g90
g71
NtRp973
(dp974
g74
(dp975
g101
g102
ssg83
g964
sg76
(lp976
S':'
asbag69
(g90
g71
NtRp977
(dp978
g74
(dp979
sg83
g964
sg76
(lp980
g69
(g70
g71
NtRp981
(dp982
g74
(dp983
g82
I4
ssg83
g977
sg76
(lp984
g112
asbasbasbag69
(g85
g71
NtRp985
(dp986
g74
(dp987
sg83
g847
sg76
(lp988
g69
(g90
g71
NtRp989
(dp990
g74
(dp991
g94
g95
ssg83
g985
sg76
(lp992
S'gluon_parent'
p993
asbag69
(g90
g71
NtRp994
(dp995
g74
(dp996
g101
g102
ssg83
g985
sg76
(lp997
S':'
asbag69
(g90
g71
NtRp998
(dp999
g74
(dp1000
sg83
g985
sg76
(lp1001
g69
(g70
g71
NtRp1002
(dp1003
g74
(dp1004
g82
I4
ssg83
g998
sg76
(lp1005
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p1006
asbasbasbag69
(g85
g71
NtRp1007
(dp1008
g74
(dp1009
sg83
g847
sg76
(lp1010
g69
(g90
g71
NtRp1011
(dp1012
g74
(dp1013
g94
g95
ssg83
g1007
sg76
(lp1014
S'http_accept'
p1015
asbag69
(g90
g71
NtRp1016
(dp1017
g74
(dp1018
g101
g102
ssg83
g1007
sg76
(lp1019
S':'
asbag69
(g90
g71
NtRp1020
(dp1021
g74
(dp1022
sg83
g1007
sg76
(lp1023
g69
(g70
g71
NtRp1024
(dp1025
g74
(dp1026
g82
I4
ssg83
g1020
sg76
(lp1027
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1028
asbasbasbag69
(g85
g71
NtRp1029
(dp1030
g74
(dp1031
sg83
g847
sg76
(lp1032
g69
(g90
g71
NtRp1033
(dp1034
g74
(dp1035
g94
g95
ssg83
g1029
sg76
(lp1036
S'http_accept_charset'
p1037
asbag69
(g90
g71
NtRp1038
(dp1039
g74
(dp1040
g101
g102
ssg83
g1029
sg76
(lp1041
S':'
asbag69
(g90
g71
NtRp1042
(dp1043
g74
(dp1044
sg83
g1029
sg76
(lp1045
g69
(g70
g71
NtRp1046
(dp1047
g74
(dp1048
g82
I4
ssg83
g1042
sg76
(lp1049
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1050
asbasbasbag69
(g85
g71
NtRp1051
(dp1052
g74
(dp1053
sg83
g847
sg76
(lp1054
g69
(g90
g71
NtRp1055
(dp1056
g74
(dp1057
g94
g95
ssg83
g1051
sg76
(lp1058
S'http_accept_encoding'
p1059
asbag69
(g90
g71
NtRp1060
(dp1061
g74
(dp1062
g101
g102
ssg83
g1051
sg76
(lp1063
S':'
asbag69
(g90
g71
NtRp1064
(dp1065
g74
(dp1066
sg83
g1051
sg76
(lp1067
g69
(g70
g71
NtRp1068
(dp1069
g74
(dp1070
g82
I4
ssg83
g1064
sg76
(lp1071
S'gzip,deflate,sdch'
p1072
asbasbasbag69
(g85
g71
NtRp1073
(dp1074
g74
(dp1075
sg83
g847
sg76
(lp1076
g69
(g90
g71
NtRp1077
(dp1078
g74
(dp1079
g94
g95
ssg83
g1073
sg76
(lp1080
S'http_accept_language'
p1081
asbag69
(g90
g71
NtRp1082
(dp1083
g74
(dp1084
g101
g102
ssg83
g1073
sg76
(lp1085
S':'
asbag69
(g90
g71
NtRp1086
(dp1087
g74
(dp1088
sg83
g1073
sg76
(lp1089
g69
(g70
g71
NtRp1090
(dp1091
g74
(dp1092
g82
I4
ssg83
g1086
sg76
(lp1093
S'en-US,en;q=0.8'
p1094
asbasbasbag69
(g85
g71
NtRp1095
(dp1096
g74
(dp1097
sg83
g847
sg76
(lp1098
g69
(g90
g71
NtRp1099
(dp1100
g74
(dp1101
g94
g95
ssg83
g1095
sg76
(lp1102
S'http_cache_control'
p1103
asbag69
(g90
g71
NtRp1104
(dp1105
g74
(dp1106
g101
g102
ssg83
g1095
sg76
(lp1107
S':'
asbag69
(g90
g71
NtRp1108
(dp1109
g74
(dp1110
sg83
g1095
sg76
(lp1111
g69
(g70
g71
NtRp1112
(dp1113
g74
(dp1114
g82
I4
ssg83
g1108
sg76
(lp1115
S'max-age=0'
p1116
asbasbasbag69
(g85
g71
NtRp1117
(dp1118
g74
(dp1119
sg83
g847
sg76
(lp1120
g69
(g90
g71
NtRp1121
(dp1122
g74
(dp1123
g94
g95
ssg83
g1117
sg76
(lp1124
S'http_connection'
p1125
asbag69
(g90
g71
NtRp1126
(dp1127
g74
(dp1128
g101
g102
ssg83
g1117
sg76
(lp1129
S':'
asbag69
(g90
g71
NtRp1130
(dp1131
g74
(dp1132
sg83
g1117
sg76
(lp1133
g69
(g70
g71
NtRp1134
(dp1135
g74
(dp1136
g82
I4
ssg83
g1130
sg76
(lp1137
S'keep-alive'
p1138
asbasbasbag69
(g85
g71
NtRp1139
(dp1140
g74
(dp1141
sg83
g847
sg76
(lp1142
g69
(g90
g71
NtRp1143
(dp1144
g74
(dp1145
g94
g95
ssg83
g1139
sg76
(lp1146
S'http_cookie'
p1147
asbag69
(g90
g71
NtRp1148
(dp1149
g74
(dp1150
g101
g102
ssg83
g1139
sg76
(lp1151
S':'
asbag69
(g90
g71
NtRp1152
(dp1153
g74
(dp1154
sg83
g1139
sg76
(lp1155
g69
(g70
g71
NtRp1156
(dp1157
g74
(dp1158
g82
I4
ssg83
g1152
sg76
(lp1159
S'session_id_welcome=127.0.0.1-06963b13-5292-4f12-a45f-8facc0240d3e; session_id_admin=127.0.0.1-4a997e0c-bd0d-43d4-8af2-d0e4eedda508; session_id_seniorproject=127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p1160
asbasbasbag69
(g85
g71
NtRp1161
(dp1162
g74
(dp1163
sg83
g847
sg76
(lp1164
g69
(g90
g71
NtRp1165
(dp1166
g74
(dp1167
g94
g95
ssg83
g1161
sg76
(lp1168
S'http_host'
p1169
asbag69
(g90
g71
NtRp1170
(dp1171
g74
(dp1172
g101
g102
ssg83
g1161
sg76
(lp1173
S':'
asbag69
(g90
g71
NtRp1174
(dp1175
g74
(dp1176
sg83
g1161
sg76
(lp1177
g69
(g70
g71
NtRp1178
(dp1179
g74
(dp1180
g82
I4
ssg83
g1174
sg76
(lp1181
S'127.0.0.1:8000'
p1182
asbasbasbag69
(g85
g71
NtRp1183
(dp1184
g74
(dp1185
sg83
g847
sg76
(lp1186
g69
(g90
g71
NtRp1187
(dp1188
g74
(dp1189
g94
g95
ssg83
g1183
sg76
(lp1190
S'http_user_agent'
p1191
asbag69
(g90
g71
NtRp1192
(dp1193
g74
(dp1194
g101
g102
ssg83
g1183
sg76
(lp1195
S':'
asbag69
(g90
g71
NtRp1196
(dp1197
g74
(dp1198
sg83
g1183
sg76
(lp1199
g69
(g70
g71
NtRp1200
(dp1201
g74
(dp1202
g82
I4
ssg83
g1196
sg76
(lp1203
S'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.43 Safari/537.31'
p1204
asbasbasbag69
(g85
g71
NtRp1205
(dp1206
g74
(dp1207
sg83
g847
sg76
(lp1208
g69
(g90
g71
NtRp1209
(dp1210
g74
(dp1211
g94
g95
ssg83
g1205
sg76
(lp1212
S'is_jython'
p1213
asbag69
(g90
g71
NtRp1214
(dp1215
g74
(dp1216
g101
g102
ssg83
g1205
sg76
(lp1217
S':'
asbag69
(g90
g71
NtRp1218
(dp1219
g74
(dp1220
sg83
g1205
sg76
(lp1221
g69
(g70
g71
NtRp1222
(dp1223
g74
(dp1224
g82
I4
ssg83
g1218
sg76
(lp1225
g112
asbasbasbag69
(g85
g71
NtRp1226
(dp1227
g74
(dp1228
sg83
g847
sg76
(lp1229
g69
(g90
g71
NtRp1230
(dp1231
g74
(dp1232
g94
g95
ssg83
g1226
sg76
(lp1233
S'is_pypy'
p1234
asbag69
(g90
g71
NtRp1235
(dp1236
g74
(dp1237
g101
g102
ssg83
g1226
sg76
(lp1238
S':'
asbag69
(g90
g71
NtRp1239
(dp1240
g74
(dp1241
sg83
g1226
sg76
(lp1242
g69
(g70
g71
NtRp1243
(dp1244
g74
(dp1245
g82
I4
ssg83
g1239
sg76
(lp1246
g112
asbasbasbag69
(g85
g71
NtRp1247
(dp1248
g74
(dp1249
sg83
g847
sg76
(lp1250
g69
(g90
g71
NtRp1251
(dp1252
g74
(dp1253
g94
g95
ssg83
g1247
sg76
(lp1254
S'path_info'
p1255
asbag69
(g90
g71
NtRp1256
(dp1257
g74
(dp1258
g101
g102
ssg83
g1247
sg76
(lp1259
S':'
asbag69
(g90
g71
NtRp1260
(dp1261
g74
(dp1262
sg83
g1247
sg76
(lp1263
g69
(g70
g71
NtRp1264
(dp1265
g74
(dp1266
g82
I4
ssg83
g1260
sg76
(lp1267
S'/SeniorProject/default/user/login'
p1268
asbasbasbag69
(g85
g71
NtRp1269
(dp1270
g74
(dp1271
sg83
g847
sg76
(lp1272
g69
(g90
g71
NtRp1273
(dp1274
g74
(dp1275
g94
g95
ssg83
g1269
sg76
(lp1276
S'query_string'
p1277
asbag69
(g90
g71
NtRp1278
(dp1279
g74
(dp1280
g101
g102
ssg83
g1269
sg76
(lp1281
S':'
asbag69
(g90
g71
NtRp1282
(dp1283
g74
(dp1284
sg83
g1269
sg76
(lp1285
g69
(g70
g71
NtRp1286
(dp1287
g74
(dp1288
g82
I4
ssg83
g1282
sg76
(lp1289
S'_next=/SeniorProject/default/index'
p1290
asbasbasbag69
(g85
g71
NtRp1291
(dp1292
g74
(dp1293
sg83
g847
sg76
(lp1294
g69
(g90
g71
NtRp1295
(dp1296
g74
(dp1297
g94
g95
ssg83
g1291
sg76
(lp1298
S'remote_addr'
p1299
asbag69
(g90
g71
NtRp1300
(dp1301
g74
(dp1302
g101
g102
ssg83
g1291
sg76
(lp1303
S':'
asbag69
(g90
g71
NtRp1304
(dp1305
g74
(dp1306
sg83
g1291
sg76
(lp1307
g69
(g70
g71
NtRp1308
(dp1309
g74
(dp1310
g82
I4
ssg83
g1304
sg76
(lp1311
g215
asbasbasbag69
(g85
g71
NtRp1312
(dp1313
g74
(dp1314
sg83
g847
sg76
(lp1315
g69
(g90
g71
NtRp1316
(dp1317
g74
(dp1318
g94
g95
ssg83
g1312
sg76
(lp1319
S'remote_port'
p1320
asbag69
(g90
g71
NtRp1321
(dp1322
g74
(dp1323
g101
g102
ssg83
g1312
sg76
(lp1324
S':'
asbag69
(g90
g71
NtRp1325
(dp1326
g74
(dp1327
sg83
g1312
sg76
(lp1328
g69
(g70
g71
NtRp1329
(dp1330
g74
(dp1331
g82
I4
ssg83
g1325
sg76
(lp1332
S'63559'
p1333
asbasbasbag69
(g85
g71
NtRp1334
(dp1335
g74
(dp1336
sg83
g847
sg76
(lp1337
g69
(g90
g71
NtRp1338
(dp1339
g74
(dp1340
g94
g95
ssg83
g1334
sg76
(lp1341
S'request_method'
p1342
asbag69
(g90
g71
NtRp1343
(dp1344
g74
(dp1345
g101
g102
ssg83
g1334
sg76
(lp1346
S':'
asbag69
(g90
g71
NtRp1347
(dp1348
g74
(dp1349
sg83
g1334
sg76
(lp1350
g69
(g70
g71
NtRp1351
(dp1352
g74
(dp1353
g82
I4
ssg83
g1347
sg76
(lp1354
S'GET'
p1355
asbasbasbag69
(g85
g71
NtRp1356
(dp1357
g74
(dp1358
sg83
g847
sg76
(lp1359
g69
(g90
g71
NtRp1360
(dp1361
g74
(dp1362
g94
g95
ssg83
g1356
sg76
(lp1363
S'script_name'
p1364
asbag69
(g90
g71
NtRp1365
(dp1366
g74
(dp1367
g101
g102
ssg83
g1356
sg76
(lp1368
S':'
asbag69
(g90
g71
NtRp1369
(dp1370
g74
(dp1371
sg83
g1356
sg76
(lp1372
g69
(g70
g71
NtRp1373
(dp1374
g74
(dp1375
g82
I4
ssg83
g1369
sg76
(lp1376
S''
asbasbasbag69
(g85
g71
NtRp1377
(dp1378
g74
(dp1379
sg83
g847
sg76
(lp1380
g69
(g90
g71
NtRp1381
(dp1382
g74
(dp1383
g94
g95
ssg83
g1377
sg76
(lp1384
S'server_name'
p1385
asbag69
(g90
g71
NtRp1386
(dp1387
g74
(dp1388
g101
g102
ssg83
g1377
sg76
(lp1389
S':'
asbag69
(g90
g71
NtRp1390
(dp1391
g74
(dp1392
sg83
g1377
sg76
(lp1393
g69
(g70
g71
NtRp1394
(dp1395
g74
(dp1396
g82
I4
ssg83
g1390
sg76
(lp1397
S'Nathans-MacBook-Pro-2.local'
p1398
asbasbasbag69
(g85
g71
NtRp1399
(dp1400
g74
(dp1401
sg83
g847
sg76
(lp1402
g69
(g90
g71
NtRp1403
(dp1404
g74
(dp1405
g94
g95
ssg83
g1399
sg76
(lp1406
S'server_port'
p1407
asbag69
(g90
g71
NtRp1408
(dp1409
g74
(dp1410
g101
g102
ssg83
g1399
sg76
(lp1411
S':'
asbag69
(g90
g71
NtRp1412
(dp1413
g74
(dp1414
sg83
g1399
sg76
(lp1415
g69
(g70
g71
NtRp1416
(dp1417
g74
(dp1418
g82
I4
ssg83
g1412
sg76
(lp1419
S'8000'
p1420
asbasbasbag69
(g85
g71
NtRp1421
(dp1422
g74
(dp1423
sg83
g847
sg76
(lp1424
g69
(g90
g71
NtRp1425
(dp1426
g74
(dp1427
g94
g95
ssg83
g1421
sg76
(lp1428
S'server_protocol'
p1429
asbag69
(g90
g71
NtRp1430
(dp1431
g74
(dp1432
g101
g102
ssg83
g1421
sg76
(lp1433
S':'
asbag69
(g90
g71
NtRp1434
(dp1435
g74
(dp1436
sg83
g1421
sg76
(lp1437
g69
(g70
g71
NtRp1438
(dp1439
g74
(dp1440
g82
I4
ssg83
g1434
sg76
(lp1441
S'HTTP/1.1'
p1442
asbasbasbag69
(g85
g71
NtRp1443
(dp1444
g74
(dp1445
sg83
g847
sg76
(lp1446
g69
(g90
g71
NtRp1447
(dp1448
g74
(dp1449
g94
g95
ssg83
g1443
sg76
(lp1450
S'server_software'
p1451
asbag69
(g90
g71
NtRp1452
(dp1453
g74
(dp1454
g101
g102
ssg83
g1443
sg76
(lp1455
S':'
asbag69
(g90
g71
NtRp1456
(dp1457
g74
(dp1458
sg83
g1443
sg76
(lp1459
g69
(g70
g71
NtRp1460
(dp1461
g74
(dp1462
g82
I4
ssg83
g1456
sg76
(lp1463
S'Rocket 1.2.4'
p1464
asbasbasbag69
(g85
g71
NtRp1465
(dp1466
g74
(dp1467
sg83
g847
sg76
(lp1468
g69
(g90
g71
NtRp1469
(dp1470
g74
(dp1471
g94
g95
ssg83
g1465
sg76
(lp1472
S'web2py_crontype'
p1473
asbag69
(g90
g71
NtRp1474
(dp1475
g74
(dp1476
g101
g102
ssg83
g1465
sg76
(lp1477
S':'
asbag69
(g90
g71
NtRp1478
(dp1479
g74
(dp1480
sg83
g1465
sg76
(lp1481
g69
(g70
g71
NtRp1482
(dp1483
g74
(dp1484
g82
I4
ssg83
g1478
sg76
(lp1485
S'hard'
p1486
asbasbasbag69
(g85
g71
NtRp1487
(dp1488
g74
(dp1489
sg83
g847
sg76
(lp1490
g69
(g90
g71
NtRp1491
(dp1492
g74
(dp1493
g94
g95
ssg83
g1487
sg76
(lp1494
S'web2py_path'
p1495
asbag69
(g90
g71
NtRp1496
(dp1497
g74
(dp1498
g101
g102
ssg83
g1487
sg76
(lp1499
S':'
asbag69
(g90
g71
NtRp1500
(dp1501
g74
(dp1502
sg83
g1487
sg76
(lp1503
g69
(g70
g71
NtRp1504
(dp1505
g74
(dp1506
g82
I4
ssg83
g1500
sg76
(lp1507
g894
asbasbasbag69
(g85
g71
NtRp1508
(dp1509
g74
(dp1510
sg83
g847
sg76
(lp1511
g69
(g90
g71
NtRp1512
(dp1513
g74
(dp1514
g94
g95
ssg83
g1508
sg76
(lp1515
S'web2py_version'
p1516
asbag69
(g90
g71
NtRp1517
(dp1518
g74
(dp1519
g101
g102
ssg83
g1508
sg76
(lp1520
S':'
asbag69
(g90
g71
NtRp1521
(dp1522
g74
(dp1523
sg83
g1508
sg76
(lp1524
g69
(g70
g71
NtRp1525
(dp1526
g74
(dp1527
g82
I4
ssg83
g1521
sg76
(lp1528
g69
(g78
g71
NtRp1529
(dp1530
g74
(dp1531
g82
I3
ssg83
Nsg76
(lp1532
g69
(g85
g71
NtRp1533
(dp1534
g74
(dp1535
sg83
g1529
sg76
(lp1536
g69
(g90
g71
NtRp1537
(dp1538
g74
(dp1539
sg83
g1533
sg76
(lp1540
g69
(g70
g71
NtRp1541
(dp1542
g74
(dp1543
g82
I3
ssg83
g1537
sg76
(lp1544
S'1'
asbasbasbag69
(g85
g71
NtRp1545
(dp1546
g74
(dp1547
sg83
g1529
sg76
(lp1548
g69
(g90
g71
NtRp1549
(dp1550
g74
(dp1551
sg83
g1545
sg76
(lp1552
g69
(g70
g71
NtRp1553
(dp1554
g74
(dp1555
g82
I3
ssg83
g1549
sg76
(lp1556
S'99'
p1557
asbasbasbag69
(g85
g71
NtRp1558
(dp1559
g74
(dp1560
sg83
g1529
sg76
(lp1561
g69
(g90
g71
NtRp1562
(dp1563
g74
(dp1564
sg83
g1558
sg76
(lp1565
g69
(g70
g71
NtRp1566
(dp1567
g74
(dp1568
g82
I3
ssg83
g1562
sg76
(lp1569
S'7'
asbasbasbag69
(g85
g71
NtRp1570
(dp1571
g74
(dp1572
sg83
g1529
sg76
(lp1573
g69
(g90
g71
NtRp1574
(dp1575
g74
(dp1576
sg83
g1570
sg76
(lp1577
g69
(g70
g71
NtRp1578
(dp1579
g74
(dp1580
g82
I3
ssg83
g1574
sg76
(lp1581
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1582
asbasbasbag69
(g85
g71
NtRp1583
(dp1584
g74
(dp1585
sg83
g1529
sg76
(lp1586
g69
(g90
g71
NtRp1587
(dp1588
g74
(dp1589
sg83
g1583
sg76
(lp1590
g69
(g70
g71
NtRp1591
(dp1592
g74
(dp1593
g82
I3
ssg83
g1587
sg76
(lp1594
S'stable'
p1595
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1596
(dp1597
g74
(dp1598
sg83
g847
sg76
(lp1599
g69
(g90
g71
NtRp1600
(dp1601
g74
(dp1602
g94
g95
ssg83
g1596
sg76
(lp1603
S'wsgi_errors'
p1604
asbag69
(g90
g71
NtRp1605
(dp1606
g74
(dp1607
g101
g102
ssg83
g1596
sg76
(lp1608
S':'
asbag69
(g90
g71
NtRp1609
(dp1610
g74
(dp1611
sg83
g1596
sg76
(lp1612
g69
(g70
g71
NtRp1613
(dp1614
g74
(dp1615
g82
I4
ssg83
g1609
sg76
(lp1616
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p1617
asbasbasbag69
(g85
g71
NtRp1618
(dp1619
g74
(dp1620
sg83
g847
sg76
(lp1621
g69
(g90
g71
NtRp1622
(dp1623
g74
(dp1624
g94
g95
ssg83
g1618
sg76
(lp1625
S'wsgi_file_wrapper'
p1626
asbag69
(g90
g71
NtRp1627
(dp1628
g74
(dp1629
g101
g102
ssg83
g1618
sg76
(lp1630
S':'
asbag69
(g90
g71
NtRp1631
(dp1632
g74
(dp1633
sg83
g1618
sg76
(lp1634
g69
(g70
g71
NtRp1635
(dp1636
g74
(dp1637
g82
I4
ssg83
g1631
sg76
(lp1638
S'<class wsgiref.util.FileWrapper at 0x101a17328>'
p1639
asbasbasbag69
(g85
g71
NtRp1640
(dp1641
g74
(dp1642
sg83
g847
sg76
(lp1643
g69
(g90
g71
NtRp1644
(dp1645
g74
(dp1646
g94
g95
ssg83
g1640
sg76
(lp1647
S'wsgi_input'
p1648
asbag69
(g90
g71
NtRp1649
(dp1650
g74
(dp1651
g101
g102
ssg83
g1640
sg76
(lp1652
S':'
asbag69
(g90
g71
NtRp1653
(dp1654
g74
(dp1655
sg83
g1640
sg76
(lp1656
g69
(g70
g71
NtRp1657
(dp1658
g74
(dp1659
g82
I4
ssg83
g1653
sg76
(lp1660
S'<socket._fileobject object at 0x108eb2f50>'
p1661
asbasbasbag69
(g85
g71
NtRp1662
(dp1663
g74
(dp1664
sg83
g847
sg76
(lp1665
g69
(g90
g71
NtRp1666
(dp1667
g74
(dp1668
g94
g95
ssg83
g1662
sg76
(lp1669
S'wsgi_multiprocess'
p1670
asbag69
(g90
g71
NtRp1671
(dp1672
g74
(dp1673
g101
g102
ssg83
g1662
sg76
(lp1674
S':'
asbag69
(g90
g71
NtRp1675
(dp1676
g74
(dp1677
sg83
g1662
sg76
(lp1678
g69
(g70
g71
NtRp1679
(dp1680
g74
(dp1681
g82
I4
ssg83
g1675
sg76
(lp1682
g112
asbasbasbag69
(g85
g71
NtRp1683
(dp1684
g74
(dp1685
sg83
g847
sg76
(lp1686
g69
(g90
g71
NtRp1687
(dp1688
g74
(dp1689
g94
g95
ssg83
g1683
sg76
(lp1690
S'wsgi_multithread'
p1691
asbag69
(g90
g71
NtRp1692
(dp1693
g74
(dp1694
g101
g102
ssg83
g1683
sg76
(lp1695
S':'
asbag69
(g90
g71
NtRp1696
(dp1697
g74
(dp1698
sg83
g1683
sg76
(lp1699
g69
(g70
g71
NtRp1700
(dp1701
g74
(dp1702
g82
I4
ssg83
g1696
sg76
(lp1703
S'True'
p1704
asbasbasbag69
(g85
g71
NtRp1705
(dp1706
g74
(dp1707
sg83
g847
sg76
(lp1708
g69
(g90
g71
NtRp1709
(dp1710
g74
(dp1711
g94
g95
ssg83
g1705
sg76
(lp1712
S'wsgi_run_once'
p1713
asbag69
(g90
g71
NtRp1714
(dp1715
g74
(dp1716
g101
g102
ssg83
g1705
sg76
(lp1717
S':'
asbag69
(g90
g71
NtRp1718
(dp1719
g74
(dp1720
sg83
g1705
sg76
(lp1721
g69
(g70
g71
NtRp1722
(dp1723
g74
(dp1724
g82
I4
ssg83
g1718
sg76
(lp1725
g112
asbasbasbag69
(g85
g71
NtRp1726
(dp1727
g74
(dp1728
sg83
g847
sg76
(lp1729
g69
(g90
g71
NtRp1730
(dp1731
g74
(dp1732
g94
g95
ssg83
g1726
sg76
(lp1733
S'wsgi_url_scheme'
p1734
asbag69
(g90
g71
NtRp1735
(dp1736
g74
(dp1737
g101
g102
ssg83
g1726
sg76
(lp1738
S':'
asbag69
(g90
g71
NtRp1739
(dp1740
g74
(dp1741
sg83
g1726
sg76
(lp1742
g69
(g70
g71
NtRp1743
(dp1744
g74
(dp1745
g82
I4
ssg83
g1739
sg76
(lp1746
S'http'
p1747
asbasbasbag69
(g85
g71
NtRp1748
(dp1749
g74
(dp1750
sg83
g847
sg76
(lp1751
g69
(g90
g71
NtRp1752
(dp1753
g74
(dp1754
g94
g95
ssg83
g1748
sg76
(lp1755
S'wsgi_version'
p1756
asbag69
(g90
g71
NtRp1757
(dp1758
g74
(dp1759
g101
g102
ssg83
g1748
sg76
(lp1760
S':'
asbag69
(g90
g71
NtRp1761
(dp1762
g74
(dp1763
sg83
g1748
sg76
(lp1764
g69
(g70
g71
NtRp1765
(dp1766
g74
(dp1767
g82
I4
ssg83
g1761
sg76
(lp1768
g69
(g78
g71
NtRp1769
(dp1770
g74
(dp1771
g82
I3
ssg83
Nsg76
(lp1772
g69
(g85
g71
NtRp1773
(dp1774
g74
(dp1775
sg83
g1769
sg76
(lp1776
g69
(g90
g71
NtRp1777
(dp1778
g74
(dp1779
sg83
g1773
sg76
(lp1780
g69
(g70
g71
NtRp1781
(dp1782
g74
(dp1783
g82
I3
ssg83
g1777
sg76
(lp1784
S'1'
asbasbasbag69
(g85
g71
NtRp1785
(dp1786
g74
(dp1787
sg83
g1769
sg76
(lp1788
g69
(g90
g71
NtRp1789
(dp1790
g74
(dp1791
sg83
g1785
sg76
(lp1792
g69
(g70
g71
NtRp1793
(dp1794
g74
(dp1795
g82
I3
ssg83
g1789
sg76
(lp1796
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1797
(dp1798
g74
(dp1799
sg83
g79
sg76
(lp1800
g69
(g90
g71
NtRp1801
(dp1802
g74
(dp1803
g94
g95
ssg83
g1797
sg76
(lp1804
S'extension'
p1805
asbag69
(g90
g71
NtRp1806
(dp1807
g74
(dp1808
g101
g102
ssg83
g1797
sg76
(lp1809
S':'
asbag69
(g90
g71
NtRp1810
(dp1811
g74
(dp1812
sg83
g1797
sg76
(lp1813
g69
(g70
g71
NtRp1814
(dp1815
g74
(dp1816
g82
I5
ssg83
g1810
sg76
(lp1817
S'html'
p1818
asbasbasbag69
(g85
g71
NtRp1819
(dp1820
g74
(dp1821
sg83
g79
sg76
(lp1822
g69
(g90
g71
NtRp1823
(dp1824
g74
(dp1825
g94
g95
ssg83
g1819
sg76
(lp1826
S'folder'
p1827
asbag69
(g90
g71
NtRp1828
(dp1829
g74
(dp1830
g101
g102
ssg83
g1819
sg76
(lp1831
S':'
asbag69
(g90
g71
NtRp1832
(dp1833
g74
(dp1834
sg83
g1819
sg76
(lp1835
g69
(g70
g71
NtRp1836
(dp1837
g74
(dp1838
g82
I5
ssg83
g1832
sg76
(lp1839
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/'
p1840
asbasbasbag69
(g85
g71
NtRp1841
(dp1842
g74
(dp1843
sg83
g79
sg76
(lp1844
g69
(g90
g71
NtRp1845
(dp1846
g74
(dp1847
g94
g95
ssg83
g1841
sg76
(lp1848
S'function'
p1849
asbag69
(g90
g71
NtRp1850
(dp1851
g74
(dp1852
g101
g102
ssg83
g1841
sg76
(lp1853
S':'
asbag69
(g90
g71
NtRp1854
(dp1855
g74
(dp1856
sg83
g1841
sg76
(lp1857
g69
(g70
g71
NtRp1858
(dp1859
g74
(dp1860
g82
I5
ssg83
g1854
sg76
(lp1861
S'user'
p1862
asbasbasbag69
(g85
g71
NtRp1863
(dp1864
g74
(dp1865
sg83
g79
sg76
(lp1866
g69
(g90
g71
NtRp1867
(dp1868
g74
(dp1869
g94
g95
ssg83
g1863
sg76
(lp1870
S'get_vars'
p1871
asbag69
(g90
g71
NtRp1872
(dp1873
g74
(dp1874
g101
g102
ssg83
g1863
sg76
(lp1875
S':'
asbag69
(g90
g71
NtRp1876
(dp1877
g74
(dp1878
sg83
g1863
sg76
(lp1879
g69
(g70
g71
NtRp1880
(dp1881
g74
(dp1882
g82
I5
ssg83
g1876
sg76
(lp1883
g69
(g78
g71
NtRp1884
(dp1885
g74
(dp1886
g82
I4
ssg83
Nsg76
(lp1887
sbasbasbasbag69
(g85
g71
NtRp1888
(dp1889
g74
(dp1890
sg83
g79
sg76
(lp1891
g69
(g90
g71
NtRp1892
(dp1893
g74
(dp1894
g94
g95
ssg83
g1888
sg76
(lp1895
S'global_settings'
p1896
asbag69
(g90
g71
NtRp1897
(dp1898
g74
(dp1899
g101
g102
ssg83
g1888
sg76
(lp1900
S':'
asbag69
(g90
g71
NtRp1901
(dp1902
g74
(dp1903
sg83
g1888
sg76
(lp1904
g69
(g70
g71
NtRp1905
(dp1906
g74
(dp1907
g82
I5
ssg83
g1901
sg76
(lp1908
g69
(g78
g71
NtRp1909
(dp1910
g74
(dp1911
g82
I4
ssg83
Nsg76
(lp1912
g69
(g85
g71
NtRp1913
(dp1914
g74
(dp1915
sg83
g1909
sg76
(lp1916
g69
(g90
g71
NtRp1917
(dp1918
g74
(dp1919
g94
g95
ssg83
g1913
sg76
(lp1920
g859
asbag69
(g90
g71
NtRp1921
(dp1922
g74
(dp1923
g101
g102
ssg83
g1913
sg76
(lp1924
S':'
asbag69
(g90
g71
NtRp1925
(dp1926
g74
(dp1927
sg83
g1913
sg76
(lp1928
g69
(g70
g71
NtRp1929
(dp1930
g74
(dp1931
g82
I4
ssg83
g1925
sg76
(lp1932
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p1933
asbasbasbag69
(g85
g71
NtRp1934
(dp1935
g74
(dp1936
sg83
g1909
sg76
(lp1937
g69
(g90
g71
NtRp1938
(dp1939
g74
(dp1940
g94
g95
ssg83
g1934
sg76
(lp1941
g881
asbag69
(g90
g71
NtRp1942
(dp1943
g74
(dp1944
g101
g102
ssg83
g1934
sg76
(lp1945
S':'
asbag69
(g90
g71
NtRp1946
(dp1947
g74
(dp1948
sg83
g1934
sg76
(lp1949
g69
(g70
g71
NtRp1950
(dp1951
g74
(dp1952
g82
I4
ssg83
g1946
sg76
(lp1953
g894
asbasbasbag69
(g85
g71
NtRp1954
(dp1955
g74
(dp1956
sg83
g1909
sg76
(lp1957
g69
(g90
g71
NtRp1958
(dp1959
g74
(dp1960
g94
g95
ssg83
g1954
sg76
(lp1961
g903
asbag69
(g90
g71
NtRp1962
(dp1963
g74
(dp1964
g101
g102
ssg83
g1954
sg76
(lp1965
S':'
asbag69
(g90
g71
NtRp1966
(dp1967
g74
(dp1968
sg83
g1954
sg76
(lp1969
g69
(g70
g71
NtRp1970
(dp1971
g74
(dp1972
g82
I4
ssg83
g1966
sg76
(lp1973
g69
(g78
g71
NtRp1974
(dp1975
g74
(dp1976
g82
I3
ssg83
Nsg76
(lp1977
sbasbasbasbag69
(g85
g71
NtRp1978
(dp1979
g74
(dp1980
sg83
g1909
sg76
(lp1981
g69
(g90
g71
NtRp1982
(dp1983
g74
(dp1984
g94
g95
ssg83
g1978
sg76
(lp1985
g928
asbag69
(g90
g71
NtRp1986
(dp1987
g74
(dp1988
g101
g102
ssg83
g1978
sg76
(lp1989
S':'
asbag69
(g90
g71
NtRp1990
(dp1991
g74
(dp1992
sg83
g1978
sg76
(lp1993
g69
(g70
g71
NtRp1994
(dp1995
g74
(dp1996
g82
I4
ssg83
g1990
sg76
(lp1997
S"<Values at 0x10236f638: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1998
asbasbasbag69
(g85
g71
NtRp1999
(dp2000
g74
(dp2001
sg83
g1909
sg76
(lp2002
g69
(g90
g71
NtRp2003
(dp2004
g74
(dp2005
g94
g95
ssg83
g1999
sg76
(lp2006
g950
asbag69
(g90
g71
NtRp2007
(dp2008
g74
(dp2009
g101
g102
ssg83
g1999
sg76
(lp2010
S':'
asbag69
(g90
g71
NtRp2011
(dp2012
g74
(dp2013
sg83
g1999
sg76
(lp2014
g69
(g70
g71
NtRp2015
(dp2016
g74
(dp2017
g82
I4
ssg83
g2011
sg76
(lp2018
S'set([])'
p2019
asbasbasbag69
(g85
g71
NtRp2020
(dp2021
g74
(dp2022
sg83
g1909
sg76
(lp2023
g69
(g90
g71
NtRp2024
(dp2025
g74
(dp2026
g94
g95
ssg83
g2020
sg76
(lp2027
g972
asbag69
(g90
g71
NtRp2028
(dp2029
g74
(dp2030
g101
g102
ssg83
g2020
sg76
(lp2031
S':'
asbag69
(g90
g71
NtRp2032
(dp2033
g74
(dp2034
sg83
g2020
sg76
(lp2035
g69
(g70
g71
NtRp2036
(dp2037
g74
(dp2038
g82
I4
ssg83
g2032
sg76
(lp2039
g112
asbasbasbag69
(g85
g71
NtRp2040
(dp2041
g74
(dp2042
sg83
g1909
sg76
(lp2043
g69
(g90
g71
NtRp2044
(dp2045
g74
(dp2046
g94
g95
ssg83
g2040
sg76
(lp2047
g993
asbag69
(g90
g71
NtRp2048
(dp2049
g74
(dp2050
g101
g102
ssg83
g2040
sg76
(lp2051
S':'
asbag69
(g90
g71
NtRp2052
(dp2053
g74
(dp2054
sg83
g2040
sg76
(lp2055
g69
(g70
g71
NtRp2056
(dp2057
g74
(dp2058
g82
I4
ssg83
g2052
sg76
(lp2059
g1006
asbasbasbag69
(g85
g71
NtRp2060
(dp2061
g74
(dp2062
sg83
g1909
sg76
(lp2063
g69
(g90
g71
NtRp2064
(dp2065
g74
(dp2066
g94
g95
ssg83
g2060
sg76
(lp2067
g1213
asbag69
(g90
g71
NtRp2068
(dp2069
g74
(dp2070
g101
g102
ssg83
g2060
sg76
(lp2071
S':'
asbag69
(g90
g71
NtRp2072
(dp2073
g74
(dp2074
sg83
g2060
sg76
(lp2075
g69
(g70
g71
NtRp2076
(dp2077
g74
(dp2078
g82
I4
ssg83
g2072
sg76
(lp2079
g112
asbasbasbag69
(g85
g71
NtRp2080
(dp2081
g74
(dp2082
sg83
g1909
sg76
(lp2083
g69
(g90
g71
NtRp2084
(dp2085
g74
(dp2086
g94
g95
ssg83
g2080
sg76
(lp2087
g1234
asbag69
(g90
g71
NtRp2088
(dp2089
g74
(dp2090
g101
g102
ssg83
g2080
sg76
(lp2091
S':'
asbag69
(g90
g71
NtRp2092
(dp2093
g74
(dp2094
sg83
g2080
sg76
(lp2095
g69
(g70
g71
NtRp2096
(dp2097
g74
(dp2098
g82
I4
ssg83
g2092
sg76
(lp2099
g112
asbasbasbag69
(g85
g71
NtRp2100
(dp2101
g74
(dp2102
sg83
g1909
sg76
(lp2103
g69
(g90
g71
NtRp2104
(dp2105
g74
(dp2106
g94
g95
ssg83
g2100
sg76
(lp2107
g1473
asbag69
(g90
g71
NtRp2108
(dp2109
g74
(dp2110
g101
g102
ssg83
g2100
sg76
(lp2111
S':'
asbag69
(g90
g71
NtRp2112
(dp2113
g74
(dp2114
sg83
g2100
sg76
(lp2115
g69
(g70
g71
NtRp2116
(dp2117
g74
(dp2118
g82
I4
ssg83
g2112
sg76
(lp2119
g1486
asbasbasbag69
(g85
g71
NtRp2120
(dp2121
g74
(dp2122
sg83
g1909
sg76
(lp2123
g69
(g90
g71
NtRp2124
(dp2125
g74
(dp2126
g94
g95
ssg83
g2120
sg76
(lp2127
g1516
asbag69
(g90
g71
NtRp2128
(dp2129
g74
(dp2130
g101
g102
ssg83
g2120
sg76
(lp2131
S':'
asbag69
(g90
g71
NtRp2132
(dp2133
g74
(dp2134
sg83
g2120
sg76
(lp2135
g69
(g70
g71
NtRp2136
(dp2137
g74
(dp2138
g82
I4
ssg83
g2132
sg76
(lp2139
g69
(g78
g71
NtRp2140
(dp2141
g74
(dp2142
g82
I3
ssg83
Nsg76
(lp2143
g69
(g85
g71
NtRp2144
(dp2145
g74
(dp2146
sg83
g2140
sg76
(lp2147
g69
(g90
g71
NtRp2148
(dp2149
g74
(dp2150
sg83
g2144
sg76
(lp2151
g69
(g70
g71
NtRp2152
(dp2153
g74
(dp2154
g82
I3
ssg83
g2148
sg76
(lp2155
S'1'
asbasbasbag69
(g85
g71
NtRp2156
(dp2157
g74
(dp2158
sg83
g2140
sg76
(lp2159
g69
(g90
g71
NtRp2160
(dp2161
g74
(dp2162
sg83
g2156
sg76
(lp2163
g69
(g70
g71
NtRp2164
(dp2165
g74
(dp2166
g82
I3
ssg83
g2160
sg76
(lp2167
S'99'
p2168
asbasbasbag69
(g85
g71
NtRp2169
(dp2170
g74
(dp2171
sg83
g2140
sg76
(lp2172
g69
(g90
g71
NtRp2173
(dp2174
g74
(dp2175
sg83
g2169
sg76
(lp2176
g69
(g70
g71
NtRp2177
(dp2178
g74
(dp2179
g82
I3
ssg83
g2173
sg76
(lp2180
S'7'
asbasbasbag69
(g85
g71
NtRp2181
(dp2182
g74
(dp2183
sg83
g2140
sg76
(lp2184
g69
(g90
g71
NtRp2185
(dp2186
g74
(dp2187
sg83
g2181
sg76
(lp2188
g69
(g70
g71
NtRp2189
(dp2190
g74
(dp2191
g82
I3
ssg83
g2185
sg76
(lp2192
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2193
asbasbasbag69
(g85
g71
NtRp2194
(dp2195
g74
(dp2196
sg83
g2140
sg76
(lp2197
g69
(g90
g71
NtRp2198
(dp2199
g74
(dp2200
sg83
g2194
sg76
(lp2201
g69
(g70
g71
NtRp2202
(dp2203
g74
(dp2204
g82
I3
ssg83
g2198
sg76
(lp2205
g1595
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2206
(dp2207
g74
(dp2208
sg83
g79
sg76
(lp2209
g69
(g90
g71
NtRp2210
(dp2211
g74
(dp2212
g94
g95
ssg83
g2206
sg76
(lp2213
S'is_https'
p2214
asbag69
(g90
g71
NtRp2215
(dp2216
g74
(dp2217
g101
g102
ssg83
g2206
sg76
(lp2218
S':'
asbag69
(g90
g71
NtRp2219
(dp2220
g74
(dp2221
sg83
g2206
sg76
(lp2222
g69
(g70
g71
NtRp2223
(dp2224
g74
(dp2225
g82
I5
ssg83
g2219
sg76
(lp2226
g112
asbasbasbag69
(g85
g71
NtRp2227
(dp2228
g74
(dp2229
sg83
g79
sg76
(lp2230
g69
(g90
g71
NtRp2231
(dp2232
g74
(dp2233
g94
g95
ssg83
g2227
sg76
(lp2234
S'is_local'
p2235
asbag69
(g90
g71
NtRp2236
(dp2237
g74
(dp2238
g101
g102
ssg83
g2227
sg76
(lp2239
S':'
asbag69
(g90
g71
NtRp2240
(dp2241
g74
(dp2242
sg83
g2227
sg76
(lp2243
g69
(g70
g71
NtRp2244
(dp2245
g74
(dp2246
g82
I5
ssg83
g2240
sg76
(lp2247
g1704
asbasbasbag69
(g85
g71
NtRp2248
(dp2249
g74
(dp2250
sg83
g79
sg76
(lp2251
g69
(g90
g71
NtRp2252
(dp2253
g74
(dp2254
g94
g95
ssg83
g2248
sg76
(lp2255
S'is_restful'
p2256
asbag69
(g90
g71
NtRp2257
(dp2258
g74
(dp2259
g101
g102
ssg83
g2248
sg76
(lp2260
S':'
asbag69
(g90
g71
NtRp2261
(dp2262
g74
(dp2263
sg83
g2248
sg76
(lp2264
g69
(g70
g71
NtRp2265
(dp2266
g74
(dp2267
g82
I5
ssg83
g2261
sg76
(lp2268
g112
asbasbasbag69
(g85
g71
NtRp2269
(dp2270
g74
(dp2271
sg83
g79
sg76
(lp2272
g69
(g90
g71
NtRp2273
(dp2274
g74
(dp2275
g94
g95
ssg83
g2269
sg76
(lp2276
S'now'
p2277
asbag69
(g90
g71
NtRp2278
(dp2279
g74
(dp2280
g101
g102
ssg83
g2269
sg76
(lp2281
S':'
asbag69
(g90
g71
NtRp2282
(dp2283
g74
(dp2284
sg83
g2269
sg76
(lp2285
g69
(g70
g71
NtRp2286
(dp2287
g74
(dp2288
g82
I5
ssg83
g2282
sg76
(lp2289
S'datetime.datetime(2013, 4, 16, 18, 26, 46, 951961)'
p2290
asbasbasbag69
(g85
g71
NtRp2291
(dp2292
g74
(dp2293
sg83
g79
sg76
(lp2294
g69
(g90
g71
NtRp2295
(dp2296
g74
(dp2297
g94
g95
ssg83
g2291
sg76
(lp2298
S'post_vars'
p2299
asbag69
(g90
g71
NtRp2300
(dp2301
g74
(dp2302
g101
g102
ssg83
g2291
sg76
(lp2303
S':'
asbag69
(g90
g71
NtRp2304
(dp2305
g74
(dp2306
sg83
g2291
sg76
(lp2307
g69
(g70
g71
NtRp2308
(dp2309
g74
(dp2310
g82
I5
ssg83
g2304
sg76
(lp2311
g69
(g78
g71
NtRp2312
(dp2313
g74
(dp2314
g82
I4
ssg83
Nsg76
(lp2315
sbasbasbasbag69
(g85
g71
NtRp2316
(dp2317
g74
(dp2318
sg83
g79
sg76
(lp2319
g69
(g90
g71
NtRp2320
(dp2321
g74
(dp2322
g94
g95
ssg83
g2316
sg76
(lp2323
S'raw_args'
p2324
asbag69
(g90
g71
NtRp2325
(dp2326
g74
(dp2327
g101
g102
ssg83
g2316
sg76
(lp2328
S':'
asbag69
(g90
g71
NtRp2329
(dp2330
g74
(dp2331
sg83
g2316
sg76
(lp2332
g69
(g70
g71
NtRp2333
(dp2334
g74
(dp2335
g82
I5
ssg83
g2329
sg76
(lp2336
g171
asbasbasbag69
(g85
g71
NtRp2337
(dp2338
g74
(dp2339
sg83
g79
sg76
(lp2340
g69
(g90
g71
NtRp2341
(dp2342
g74
(dp2343
g94
g95
ssg83
g2337
sg76
(lp2344
S'url'
p2345
asbag69
(g90
g71
NtRp2346
(dp2347
g74
(dp2348
g101
g102
ssg83
g2337
sg76
(lp2349
S':'
asbag69
(g90
g71
NtRp2350
(dp2351
g74
(dp2352
sg83
g2337
sg76
(lp2353
g69
(g70
g71
NtRp2354
(dp2355
g74
(dp2356
g82
I5
ssg83
g2350
sg76
(lp2357
S'/SeniorProject/default/user/login'
p2358
asbasbasbag69
(g85
g71
NtRp2359
(dp2360
g74
(dp2361
sg83
g79
sg76
(lp2362
g69
(g90
g71
NtRp2363
(dp2364
g74
(dp2365
g94
g95
ssg83
g2359
sg76
(lp2366
S'utcnow'
p2367
asbag69
(g90
g71
NtRp2368
(dp2369
g74
(dp2370
g101
g102
ssg83
g2359
sg76
(lp2371
S':'
asbag69
(g90
g71
NtRp2372
(dp2373
g74
(dp2374
sg83
g2359
sg76
(lp2375
g69
(g70
g71
NtRp2376
(dp2377
g74
(dp2378
g82
I5
ssg83
g2372
sg76
(lp2379
S'datetime.datetime(2013, 4, 16, 23, 26, 46, 951975)'
p2380
asbasbasbag69
(g85
g71
NtRp2381
(dp2382
g74
(dp2383
sg83
g79
sg76
(lp2384
g69
(g90
g71
NtRp2385
(dp2386
g74
(dp2387
g94
g95
ssg83
g2381
sg76
(lp2388
S'uuid'
p2389
asbag69
(g90
g71
NtRp2390
(dp2391
g74
(dp2392
g101
g102
ssg83
g2381
sg76
(lp2393
S':'
asbag69
(g90
g71
NtRp2394
(dp2395
g74
(dp2396
sg83
g2381
sg76
(lp2397
g69
(g70
g71
NtRp2398
(dp2399
g74
(dp2400
g82
I5
ssg83
g2394
sg76
(lp2401
S'SeniorProject/127.0.0.1.2013-04-16.18-26-46.aa1a295c-6245-4258-8990-245ddeb43e9a'
p2402
asbasbasbag69
(g85
g71
NtRp2403
(dp2404
g74
(dp2405
sg83
g79
sg76
(lp2406
g69
(g90
g71
NtRp2407
(dp2408
g74
(dp2409
g94
g95
ssg83
g2403
sg76
(lp2410
S'vars'
p2411
asbag69
(g90
g71
NtRp2412
(dp2413
g74
(dp2414
g101
g102
ssg83
g2403
sg76
(lp2415
S':'
asbag69
(g90
g71
NtRp2416
(dp2417
g74
(dp2418
sg83
g2403
sg76
(lp2419
g69
(g70
g71
NtRp2420
(dp2421
g74
(dp2422
g82
I5
ssg83
g2416
sg76
(lp2423
g69
(g78
g71
NtRp2424
(dp2425
g74
(dp2426
g82
I4
ssg83
Nsg76
(lp2427
sbasbasbasbag69
(g85
g71
NtRp2428
(dp2429
g74
(dp2430
sg83
g79
sg76
(lp2431
g69
(g90
g71
NtRp2432
(dp2433
g74
(dp2434
g94
g95
ssg83
g2428
sg76
(lp2435
S'wsgi'
p2436
asbag69
(g90
g71
NtRp2437
(dp2438
g74
(dp2439
g101
g102
ssg83
g2428
sg76
(lp2440
S':'
asbag69
(g90
g71
NtRp2441
(dp2442
g74
(dp2443
sg83
g2428
sg76
(lp2444
g69
(g70
g71
NtRp2445
(dp2446
g74
(dp2447
g82
I5
ssg83
g2441
sg76
(lp2448
g69
(g78
g71
NtRp2449
(dp2450
g74
(dp2451
g82
I4
ssg83
Nsg76
(lp2452
g69
(g85
g71
NtRp2453
(dp2454
g74
(dp2455
sg83
g2449
sg76
(lp2456
g69
(g90
g71
NtRp2457
(dp2458
g74
(dp2459
g94
g95
ssg83
g2453
sg76
(lp2460
S'environ'
p2461
asbag69
(g90
g71
NtRp2462
(dp2463
g74
(dp2464
g101
g102
ssg83
g2453
sg76
(lp2465
S':'
asbag69
(g90
g71
NtRp2466
(dp2467
g74
(dp2468
sg83
g2453
sg76
(lp2469
g69
(g70
g71
NtRp2470
(dp2471
g74
(dp2472
g82
I4
ssg83
g2466
sg76
(lp2473
g69
(g78
g71
NtRp2474
(dp2475
g74
(dp2476
g82
I3
ssg83
Nsg76
(lp2477
g69
(g85
g71
NtRp2478
(dp2479
g74
(dp2480
sg83
g2474
sg76
(lp2481
g69
(g90
g71
NtRp2482
(dp2483
g74
(dp2484
g94
g95
ssg83
g2478
sg76
(lp2485
S'HTTP_ACCEPT'
p2486
asbag69
(g90
g71
NtRp2487
(dp2488
g74
(dp2489
g101
g102
ssg83
g2478
sg76
(lp2490
S':'
asbag69
(g90
g71
NtRp2491
(dp2492
g74
(dp2493
sg83
g2478
sg76
(lp2494
g69
(g70
g71
NtRp2495
(dp2496
g74
(dp2497
g82
I3
ssg83
g2491
sg76
(lp2498
g1028
asbasbasbag69
(g85
g71
NtRp2499
(dp2500
g74
(dp2501
sg83
g2474
sg76
(lp2502
g69
(g90
g71
NtRp2503
(dp2504
g74
(dp2505
g94
g95
ssg83
g2499
sg76
(lp2506
S'HTTP_ACCEPT_CHARSET'
p2507
asbag69
(g90
g71
NtRp2508
(dp2509
g74
(dp2510
g101
g102
ssg83
g2499
sg76
(lp2511
S':'
asbag69
(g90
g71
NtRp2512
(dp2513
g74
(dp2514
sg83
g2499
sg76
(lp2515
g69
(g70
g71
NtRp2516
(dp2517
g74
(dp2518
g82
I3
ssg83
g2512
sg76
(lp2519
g1050
asbasbasbag69
(g85
g71
NtRp2520
(dp2521
g74
(dp2522
sg83
g2474
sg76
(lp2523
g69
(g90
g71
NtRp2524
(dp2525
g74
(dp2526
g94
g95
ssg83
g2520
sg76
(lp2527
S'HTTP_ACCEPT_ENCODING'
p2528
asbag69
(g90
g71
NtRp2529
(dp2530
g74
(dp2531
g101
g102
ssg83
g2520
sg76
(lp2532
S':'
asbag69
(g90
g71
NtRp2533
(dp2534
g74
(dp2535
sg83
g2520
sg76
(lp2536
g69
(g70
g71
NtRp2537
(dp2538
g74
(dp2539
g82
I3
ssg83
g2533
sg76
(lp2540
g1072
asbasbasbag69
(g85
g71
NtRp2541
(dp2542
g74
(dp2543
sg83
g2474
sg76
(lp2544
g69
(g90
g71
NtRp2545
(dp2546
g74
(dp2547
g94
g95
ssg83
g2541
sg76
(lp2548
S'HTTP_ACCEPT_LANGUAGE'
p2549
asbag69
(g90
g71
NtRp2550
(dp2551
g74
(dp2552
g101
g102
ssg83
g2541
sg76
(lp2553
S':'
asbag69
(g90
g71
NtRp2554
(dp2555
g74
(dp2556
sg83
g2541
sg76
(lp2557
g69
(g70
g71
NtRp2558
(dp2559
g74
(dp2560
g82
I3
ssg83
g2554
sg76
(lp2561
g1094
asbasbasbag69
(g85
g71
NtRp2562
(dp2563
g74
(dp2564
sg83
g2474
sg76
(lp2565
g69
(g90
g71
NtRp2566
(dp2567
g74
(dp2568
g94
g95
ssg83
g2562
sg76
(lp2569
S'HTTP_CACHE_CONTROL'
p2570
asbag69
(g90
g71
NtRp2571
(dp2572
g74
(dp2573
g101
g102
ssg83
g2562
sg76
(lp2574
S':'
asbag69
(g90
g71
NtRp2575
(dp2576
g74
(dp2577
sg83
g2562
sg76
(lp2578
g69
(g70
g71
NtRp2579
(dp2580
g74
(dp2581
g82
I3
ssg83
g2575
sg76
(lp2582
g1116
asbasbasbag69
(g85
g71
NtRp2583
(dp2584
g74
(dp2585
sg83
g2474
sg76
(lp2586
g69
(g90
g71
NtRp2587
(dp2588
g74
(dp2589
g94
g95
ssg83
g2583
sg76
(lp2590
S'HTTP_CONNECTION'
p2591
asbag69
(g90
g71
NtRp2592
(dp2593
g74
(dp2594
g101
g102
ssg83
g2583
sg76
(lp2595
S':'
asbag69
(g90
g71
NtRp2596
(dp2597
g74
(dp2598
sg83
g2583
sg76
(lp2599
g69
(g70
g71
NtRp2600
(dp2601
g74
(dp2602
g82
I3
ssg83
g2596
sg76
(lp2603
g1138
asbasbasbag69
(g85
g71
NtRp2604
(dp2605
g74
(dp2606
sg83
g2474
sg76
(lp2607
g69
(g90
g71
NtRp2608
(dp2609
g74
(dp2610
g94
g95
ssg83
g2604
sg76
(lp2611
S'HTTP_COOKIE'
p2612
asbag69
(g90
g71
NtRp2613
(dp2614
g74
(dp2615
g101
g102
ssg83
g2604
sg76
(lp2616
S':'
asbag69
(g90
g71
NtRp2617
(dp2618
g74
(dp2619
sg83
g2604
sg76
(lp2620
g69
(g70
g71
NtRp2621
(dp2622
g74
(dp2623
g82
I3
ssg83
g2617
sg76
(lp2624
g1160
asbasbasbag69
(g85
g71
NtRp2625
(dp2626
g74
(dp2627
sg83
g2474
sg76
(lp2628
g69
(g90
g71
NtRp2629
(dp2630
g74
(dp2631
g94
g95
ssg83
g2625
sg76
(lp2632
S'HTTP_HOST'
p2633
asbag69
(g90
g71
NtRp2634
(dp2635
g74
(dp2636
g101
g102
ssg83
g2625
sg76
(lp2637
S':'
asbag69
(g90
g71
NtRp2638
(dp2639
g74
(dp2640
sg83
g2625
sg76
(lp2641
g69
(g70
g71
NtRp2642
(dp2643
g74
(dp2644
g82
I3
ssg83
g2638
sg76
(lp2645
g1182
asbasbasbag69
(g85
g71
NtRp2646
(dp2647
g74
(dp2648
sg83
g2474
sg76
(lp2649
g69
(g90
g71
NtRp2650
(dp2651
g74
(dp2652
g94
g95
ssg83
g2646
sg76
(lp2653
S'HTTP_USER_AGENT'
p2654
asbag69
(g90
g71
NtRp2655
(dp2656
g74
(dp2657
g101
g102
ssg83
g2646
sg76
(lp2658
S':'
asbag69
(g90
g71
NtRp2659
(dp2660
g74
(dp2661
sg83
g2646
sg76
(lp2662
g69
(g70
g71
NtRp2663
(dp2664
g74
(dp2665
g82
I3
ssg83
g2659
sg76
(lp2666
g1204
asbasbasbag69
(g85
g71
NtRp2667
(dp2668
g74
(dp2669
sg83
g2474
sg76
(lp2670
g69
(g90
g71
NtRp2671
(dp2672
g74
(dp2673
g94
g95
ssg83
g2667
sg76
(lp2674
S'PATH_INFO'
p2675
asbag69
(g90
g71
NtRp2676
(dp2677
g74
(dp2678
g101
g102
ssg83
g2667
sg76
(lp2679
S':'
asbag69
(g90
g71
NtRp2680
(dp2681
g74
(dp2682
sg83
g2667
sg76
(lp2683
g69
(g70
g71
NtRp2684
(dp2685
g74
(dp2686
g82
I3
ssg83
g2680
sg76
(lp2687
g1268
asbasbasbag69
(g85
g71
NtRp2688
(dp2689
g74
(dp2690
sg83
g2474
sg76
(lp2691
g69
(g90
g71
NtRp2692
(dp2693
g74
(dp2694
g94
g95
ssg83
g2688
sg76
(lp2695
S'QUERY_STRING'
p2696
asbag69
(g90
g71
NtRp2697
(dp2698
g74
(dp2699
g101
g102
ssg83
g2688
sg76
(lp2700
S':'
asbag69
(g90
g71
NtRp2701
(dp2702
g74
(dp2703
sg83
g2688
sg76
(lp2704
g69
(g70
g71
NtRp2705
(dp2706
g74
(dp2707
g82
I3
ssg83
g2701
sg76
(lp2708
g1290
asbasbasbag69
(g85
g71
NtRp2709
(dp2710
g74
(dp2711
sg83
g2474
sg76
(lp2712
g69
(g90
g71
NtRp2713
(dp2714
g74
(dp2715
g94
g95
ssg83
g2709
sg76
(lp2716
S'REMOTE_ADDR'
p2717
asbag69
(g90
g71
NtRp2718
(dp2719
g74
(dp2720
g101
g102
ssg83
g2709
sg76
(lp2721
S':'
asbag69
(g90
g71
NtRp2722
(dp2723
g74
(dp2724
sg83
g2709
sg76
(lp2725
g69
(g70
g71
NtRp2726
(dp2727
g74
(dp2728
g82
I3
ssg83
g2722
sg76
(lp2729
g215
asbasbasbag69
(g85
g71
NtRp2730
(dp2731
g74
(dp2732
sg83
g2474
sg76
(lp2733
g69
(g90
g71
NtRp2734
(dp2735
g74
(dp2736
g94
g95
ssg83
g2730
sg76
(lp2737
S'REMOTE_PORT'
p2738
asbag69
(g90
g71
NtRp2739
(dp2740
g74
(dp2741
g101
g102
ssg83
g2730
sg76
(lp2742
S':'
asbag69
(g90
g71
NtRp2743
(dp2744
g74
(dp2745
sg83
g2730
sg76
(lp2746
g69
(g70
g71
NtRp2747
(dp2748
g74
(dp2749
g82
I3
ssg83
g2743
sg76
(lp2750
g1333
asbasbasbag69
(g85
g71
NtRp2751
(dp2752
g74
(dp2753
sg83
g2474
sg76
(lp2754
g69
(g90
g71
NtRp2755
(dp2756
g74
(dp2757
g94
g95
ssg83
g2751
sg76
(lp2758
S'REQUEST_METHOD'
p2759
asbag69
(g90
g71
NtRp2760
(dp2761
g74
(dp2762
g101
g102
ssg83
g2751
sg76
(lp2763
S':'
asbag69
(g90
g71
NtRp2764
(dp2765
g74
(dp2766
sg83
g2751
sg76
(lp2767
g69
(g70
g71
NtRp2768
(dp2769
g74
(dp2770
g82
I3
ssg83
g2764
sg76
(lp2771
g1355
asbasbasbag69
(g85
g71
NtRp2772
(dp2773
g74
(dp2774
sg83
g2474
sg76
(lp2775
g69
(g90
g71
NtRp2776
(dp2777
g74
(dp2778
g94
g95
ssg83
g2772
sg76
(lp2779
S'SCRIPT_NAME'
p2780
asbag69
(g90
g71
NtRp2781
(dp2782
g74
(dp2783
g101
g102
ssg83
g2772
sg76
(lp2784
S':'
asbag69
(g90
g71
NtRp2785
(dp2786
g74
(dp2787
sg83
g2772
sg76
(lp2788
g69
(g70
g71
NtRp2789
(dp2790
g74
(dp2791
g82
I3
ssg83
g2785
sg76
(lp2792
S''
asbasbasbag69
(g85
g71
NtRp2793
(dp2794
g74
(dp2795
sg83
g2474
sg76
(lp2796
g69
(g90
g71
NtRp2797
(dp2798
g74
(dp2799
g94
g95
ssg83
g2793
sg76
(lp2800
S'SERVER_NAME'
p2801
asbag69
(g90
g71
NtRp2802
(dp2803
g74
(dp2804
g101
g102
ssg83
g2793
sg76
(lp2805
S':'
asbag69
(g90
g71
NtRp2806
(dp2807
g74
(dp2808
sg83
g2793
sg76
(lp2809
g69
(g70
g71
NtRp2810
(dp2811
g74
(dp2812
g82
I3
ssg83
g2806
sg76
(lp2813
g1398
asbasbasbag69
(g85
g71
NtRp2814
(dp2815
g74
(dp2816
sg83
g2474
sg76
(lp2817
g69
(g90
g71
NtRp2818
(dp2819
g74
(dp2820
g94
g95
ssg83
g2814
sg76
(lp2821
S'SERVER_PORT'
p2822
asbag69
(g90
g71
NtRp2823
(dp2824
g74
(dp2825
g101
g102
ssg83
g2814
sg76
(lp2826
S':'
asbag69
(g90
g71
NtRp2827
(dp2828
g74
(dp2829
sg83
g2814
sg76
(lp2830
g69
(g70
g71
NtRp2831
(dp2832
g74
(dp2833
g82
I3
ssg83
g2827
sg76
(lp2834
g1420
asbasbasbag69
(g85
g71
NtRp2835
(dp2836
g74
(dp2837
sg83
g2474
sg76
(lp2838
g69
(g90
g71
NtRp2839
(dp2840
g74
(dp2841
g94
g95
ssg83
g2835
sg76
(lp2842
S'SERVER_PROTOCOL'
p2843
asbag69
(g90
g71
NtRp2844
(dp2845
g74
(dp2846
g101
g102
ssg83
g2835
sg76
(lp2847
S':'
asbag69
(g90
g71
NtRp2848
(dp2849
g74
(dp2850
sg83
g2835
sg76
(lp2851
g69
(g70
g71
NtRp2852
(dp2853
g74
(dp2854
g82
I3
ssg83
g2848
sg76
(lp2855
g1442
asbasbasbag69
(g85
g71
NtRp2856
(dp2857
g74
(dp2858
sg83
g2474
sg76
(lp2859
g69
(g90
g71
NtRp2860
(dp2861
g74
(dp2862
g94
g95
ssg83
g2856
sg76
(lp2863
S'SERVER_SOFTWARE'
p2864
asbag69
(g90
g71
NtRp2865
(dp2866
g74
(dp2867
g101
g102
ssg83
g2856
sg76
(lp2868
S':'
asbag69
(g90
g71
NtRp2869
(dp2870
g74
(dp2871
sg83
g2856
sg76
(lp2872
g69
(g70
g71
NtRp2873
(dp2874
g74
(dp2875
g82
I3
ssg83
g2869
sg76
(lp2876
g1464
asbasbasbag69
(g85
g71
NtRp2877
(dp2878
g74
(dp2879
sg83
g2474
sg76
(lp2880
g69
(g90
g71
NtRp2881
(dp2882
g74
(dp2883
g94
g95
ssg83
g2877
sg76
(lp2884
S'wsgi.errors'
p2885
asbag69
(g90
g71
NtRp2886
(dp2887
g74
(dp2888
g101
g102
ssg83
g2877
sg76
(lp2889
S':'
asbag69
(g90
g71
NtRp2890
(dp2891
g74
(dp2892
sg83
g2877
sg76
(lp2893
g69
(g70
g71
NtRp2894
(dp2895
g74
(dp2896
g82
I3
ssg83
g2890
sg76
(lp2897
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p2898
asbasbasbag69
(g85
g71
NtRp2899
(dp2900
g74
(dp2901
sg83
g2474
sg76
(lp2902
g69
(g90
g71
NtRp2903
(dp2904
g74
(dp2905
g94
g95
ssg83
g2899
sg76
(lp2906
S'wsgi.file_wrapper'
p2907
asbag69
(g90
g71
NtRp2908
(dp2909
g74
(dp2910
g101
g102
ssg83
g2899
sg76
(lp2911
S':'
asbag69
(g90
g71
NtRp2912
(dp2913
g74
(dp2914
sg83
g2899
sg76
(lp2915
g69
(g70
g71
NtRp2916
(dp2917
g74
(dp2918
g82
I3
ssg83
g2912
sg76
(lp2919
S'<class wsgiref.util.FileWrapper at 0x101a17328>'
p2920
asbasbasbag69
(g85
g71
NtRp2921
(dp2922
g74
(dp2923
sg83
g2474
sg76
(lp2924
g69
(g90
g71
NtRp2925
(dp2926
g74
(dp2927
g94
g95
ssg83
g2921
sg76
(lp2928
S'wsgi.input'
p2929
asbag69
(g90
g71
NtRp2930
(dp2931
g74
(dp2932
g101
g102
ssg83
g2921
sg76
(lp2933
S':'
asbag69
(g90
g71
NtRp2934
(dp2935
g74
(dp2936
sg83
g2921
sg76
(lp2937
g69
(g70
g71
NtRp2938
(dp2939
g74
(dp2940
g82
I3
ssg83
g2934
sg76
(lp2941
S'<cStringIO.StringO object at 0x108e9eea0>'
p2942
asbasbasbag69
(g85
g71
NtRp2943
(dp2944
g74
(dp2945
sg83
g2474
sg76
(lp2946
g69
(g90
g71
NtRp2947
(dp2948
g74
(dp2949
g94
g95
ssg83
g2943
sg76
(lp2950
S'wsgi.multiprocess'
p2951
asbag69
(g90
g71
NtRp2952
(dp2953
g74
(dp2954
g101
g102
ssg83
g2943
sg76
(lp2955
S':'
asbag69
(g90
g71
NtRp2956
(dp2957
g74
(dp2958
sg83
g2943
sg76
(lp2959
g69
(g70
g71
NtRp2960
(dp2961
g74
(dp2962
g82
I3
ssg83
g2956
sg76
(lp2963
g112
asbasbasbag69
(g85
g71
NtRp2964
(dp2965
g74
(dp2966
sg83
g2474
sg76
(lp2967
g69
(g90
g71
NtRp2968
(dp2969
g74
(dp2970
g94
g95
ssg83
g2964
sg76
(lp2971
S'wsgi.multithread'
p2972
asbag69
(g90
g71
NtRp2973
(dp2974
g74
(dp2975
g101
g102
ssg83
g2964
sg76
(lp2976
S':'
asbag69
(g90
g71
NtRp2977
(dp2978
g74
(dp2979
sg83
g2964
sg76
(lp2980
g69
(g70
g71
NtRp2981
(dp2982
g74
(dp2983
g82
I3
ssg83
g2977
sg76
(lp2984
g1704
asbasbasbag69
(g85
g71
NtRp2985
(dp2986
g74
(dp2987
sg83
g2474
sg76
(lp2988
g69
(g90
g71
NtRp2989
(dp2990
g74
(dp2991
g94
g95
ssg83
g2985
sg76
(lp2992
S'wsgi.run_once'
p2993
asbag69
(g90
g71
NtRp2994
(dp2995
g74
(dp2996
g101
g102
ssg83
g2985
sg76
(lp2997
S':'
asbag69
(g90
g71
NtRp2998
(dp2999
g74
(dp3000
sg83
g2985
sg76
(lp3001
g69
(g70
g71
NtRp3002
(dp3003
g74
(dp3004
g82
I3
ssg83
g2998
sg76
(lp3005
g112
asbasbasbag69
(g85
g71
NtRp3006
(dp3007
g74
(dp3008
sg83
g2474
sg76
(lp3009
g69
(g90
g71
NtRp3010
(dp3011
g74
(dp3012
g94
g95
ssg83
g3006
sg76
(lp3013
S'wsgi.url_scheme'
p3014
asbag69
(g90
g71
NtRp3015
(dp3016
g74
(dp3017
g101
g102
ssg83
g3006
sg76
(lp3018
S':'
asbag69
(g90
g71
NtRp3019
(dp3020
g74
(dp3021
sg83
g3006
sg76
(lp3022
g69
(g70
g71
NtRp3023
(dp3024
g74
(dp3025
g82
I3
ssg83
g3019
sg76
(lp3026
g1747
asbasbasbag69
(g85
g71
NtRp3027
(dp3028
g74
(dp3029
sg83
g2474
sg76
(lp3030
g69
(g90
g71
NtRp3031
(dp3032
g74
(dp3033
g94
g95
ssg83
g3027
sg76
(lp3034
S'wsgi.version'
p3035
asbag69
(g90
g71
NtRp3036
(dp3037
g74
(dp3038
g101
g102
ssg83
g3027
sg76
(lp3039
S':'
asbag69
(g90
g71
NtRp3040
(dp3041
g74
(dp3042
sg83
g3027
sg76
(lp3043
g69
(g70
g71
NtRp3044
(dp3045
g74
(dp3046
g82
I3
ssg83
g3040
sg76
(lp3047
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3048
(lp3049
(dp3050
S'file'
p3051
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3052
sS'dump'
p3053
(dp3054
S'code'
p3055
S"'# -*- coding: utf-8 -*-\\n# this file is released ...turn html\\n\\nresponse._vars=response._caller(user)\\n'"
p3056
sS'layer'
p3057
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3058
sS'global compile2'
p3059
S'<function compile2>'
p3060
sS'ccode'
p3061
S'undefined'
p3062
ssS'lnum'
p3063
I204
sS'lines'
p3064
(dp3065
I199
S"    environment['__name__'] = '__restricted__'"
p3066
sI200
S'    try:'
p3067
sI201
S'        if type(code) == types.CodeType:'
p3068
sI202
S'            ccode = code'
p3069
sI203
S'        else:'
p3070
sI204
S'            ccode = compile2(code,layer)'
p3071
sI205
S'        exec ccode in environment'
p3072
sI206
S'    except HTTP:'
p3073
sI207
S'        raise'
p3074
sI208
S'    except RestrictedError:'
p3075
ssS'call'
p3076
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...turn html\\n\\nresponse._vars=response._caller(user)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3077
sS'func'
p3078
S'restricted'
p3079
sa(dp3080
g3051
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3081
sg3053
(dp3082
S'builtincompile'
p3083
S'<built-in function compile>'
p3084
sS'code'
p3085
S"'# -*- coding: utf-8 -*-\\n# this file is released ...turn html\\n\\nresponse._vars=response._caller(user)\\n'"
p3086
sS'code.rstrip'
p3087
S'<built-in method rstrip of str object>'
p3088
sS').replace'
p3089
g3062
sS'layer'
p3090
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3091
ssg3063
I189
sg3064
(dp3092
I192
S'    """'
p3093
sI193
S'    runs code in environment and returns the output. if an exception occurs'
p3094
sI184
S''
sI185
S'def compile2(code,layer):'
p3095
sI186
S'    """'
p3096
sI187
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p3097
sI188
S'    """'
p3098
sI189
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p3099
sI190
S''
sI191
S"def restricted(code, environment=None, layer='Unknown'):"
p3100
ssg3076
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...turn html\\n\\nresponse._vars=response._caller(user)\\n', layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3101
sg3078
S'compile2'
p3102
sasS'pyver'
p3103
S'Python 2.7.2: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python'
p3104
sS'session'
p3105
g69
(g70
g71
NtRp3106
(dp3107
g74
(dp3108
sg76
(lp3109
g69
(g78
g71
NtRp3110
(dp3111
g74
(dp3112
g82
I5
ssg83
Nsg76
(lp3113
g69
(g85
g71
NtRp3114
(dp3115
g74
(dp3116
sg83
g3110
sg76
(lp3117
g69
(g90
g71
NtRp3118
(dp3119
g74
(dp3120
g94
g95
ssg83
g3114
sg76
(lp3121
S'last_query'
p3122
asbag69
(g90
g71
NtRp3123
(dp3124
g74
(dp3125
g101
g102
ssg83
g3114
sg76
(lp3126
S':'
asbag69
(g90
g71
NtRp3127
(dp3128
g74
(dp3129
sg83
g3114
sg76
(lp3130
g69
(g70
g71
NtRp3131
(dp3132
g74
(dp3133
g82
I5
ssg83
g3127
sg76
(lp3134
S'db.PhotoToken.id>0'
p3135
asbasbasbasbasbsS'etype'
p3136
S"<type 'exceptions.SyntaxError'>"
p3137
sS'date'
p3138
S'Tue Apr 16 18:26:47 2013'
p3139
sS'response'
p3140
g69
(g70
g71
NtRp3141
(dp3142
g74
(dp3143
sg76
(lp3144
g69
(g78
g71
NtRp3145
(dp3146
g74
(dp3147
g82
I5
ssg83
Nsg76
(lp3148
g69
(g85
g71
NtRp3149
(dp3150
g74
(dp3151
sg83
g3145
sg76
(lp3152
g69
(g90
g71
NtRp3153
(dp3154
g74
(dp3155
g94
g95
ssg83
g3149
sg76
(lp3156
g180
asbag69
(g90
g71
NtRp3157
(dp3158
g74
(dp3159
g101
g102
ssg83
g3149
sg76
(lp3160
S':'
asbag69
(g90
g71
NtRp3161
(dp3162
g74
(dp3163
sg83
g3149
sg76
(lp3164
g69
(g70
g71
NtRp3165
(dp3166
g74
(dp3167
g82
I5
ssg83
g3161
sg76
(lp3168
S'<cStringIO.StringO object at 0x108ea54c8>'
p3169
asbasbasbag69
(g85
g71
NtRp3170
(dp3171
g74
(dp3172
sg83
g3145
sg76
(lp3173
g69
(g90
g71
NtRp3174
(dp3175
g74
(dp3176
g94
g95
ssg83
g3170
sg76
(lp3177
g246
asbag69
(g90
g71
NtRp3178
(dp3179
g74
(dp3180
g101
g102
ssg83
g3170
sg76
(lp3181
S':'
asbag69
(g90
g71
NtRp3182
(dp3183
g74
(dp3184
sg83
g3170
sg76
(lp3185
g69
(g70
g71
NtRp3186
(dp3187
g74
(dp3188
g82
I5
ssg83
g3182
sg76
(lp3189
g69
(g78
g71
NtRp3190
(dp3191
g74
(dp3192
g82
I4
ssg83
Nsg76
(lp3193
g69
(g85
g71
NtRp3194
(dp3195
g74
(dp3196
sg83
g3190
sg76
(lp3197
g69
(g90
g71
NtRp3198
(dp3199
g74
(dp3200
g94
g95
ssg83
g3194
sg76
(lp3201
S'session_id_seniorproject'
p3202
asbag69
(g90
g71
NtRp3203
(dp3204
g74
(dp3205
g101
g102
ssg83
g3194
sg76
(lp3206
S':'
asbag69
(g90
g71
NtRp3207
(dp3208
g74
(dp3209
sg83
g3194
sg76
(lp3210
g69
(g70
g71
NtRp3211
(dp3212
g74
(dp3213
g82
I4
ssg83
g3207
sg76
(lp3214
g69
(g78
g71
NtRp3215
(dp3216
g74
(dp3217
g82
I3
ssg83
Nsg76
(lp3218
g69
(g85
g71
NtRp3219
(dp3220
g74
(dp3221
sg83
g3215
sg76
(lp3222
g69
(g90
g71
NtRp3223
(dp3224
g74
(dp3225
g94
g95
ssg83
g3219
sg76
(lp3226
g296
asbag69
(g90
g71
NtRp3227
(dp3228
g74
(dp3229
g101
g102
ssg83
g3219
sg76
(lp3230
S':'
asbag69
(g90
g71
NtRp3231
(dp3232
g74
(dp3233
sg83
g3219
sg76
(lp3234
g69
(g70
g71
NtRp3235
(dp3236
g74
(dp3237
g82
I3
ssg83
g3231
sg76
(lp3238
S''
asbasbasbag69
(g85
g71
NtRp3239
(dp3240
g74
(dp3241
sg83
g3215
sg76
(lp3242
g69
(g90
g71
NtRp3243
(dp3244
g74
(dp3245
g94
g95
ssg83
g3239
sg76
(lp3246
g317
asbag69
(g90
g71
NtRp3247
(dp3248
g74
(dp3249
g101
g102
ssg83
g3239
sg76
(lp3250
S':'
asbag69
(g90
g71
NtRp3251
(dp3252
g74
(dp3253
sg83
g3239
sg76
(lp3254
g69
(g70
g71
NtRp3255
(dp3256
g74
(dp3257
g82
I3
ssg83
g3251
sg76
(lp3258
S''
asbasbasbag69
(g85
g71
NtRp3259
(dp3260
g74
(dp3261
sg83
g3215
sg76
(lp3262
g69
(g90
g71
NtRp3263
(dp3264
g74
(dp3265
g94
g95
ssg83
g3259
sg76
(lp3266
g338
asbag69
(g90
g71
NtRp3267
(dp3268
g74
(dp3269
g101
g102
ssg83
g3259
sg76
(lp3270
S':'
asbag69
(g90
g71
NtRp3271
(dp3272
g74
(dp3273
sg83
g3259
sg76
(lp3274
g69
(g70
g71
NtRp3275
(dp3276
g74
(dp3277
g82
I3
ssg83
g3271
sg76
(lp3278
S''
asbasbasbag69
(g85
g71
NtRp3279
(dp3280
g74
(dp3281
sg83
g3215
sg76
(lp3282
g69
(g90
g71
NtRp3283
(dp3284
g74
(dp3285
g94
g95
ssg83
g3279
sg76
(lp3286
g359
asbag69
(g90
g71
NtRp3287
(dp3288
g74
(dp3289
g101
g102
ssg83
g3279
sg76
(lp3290
S':'
asbag69
(g90
g71
NtRp3291
(dp3292
g74
(dp3293
sg83
g3279
sg76
(lp3294
g69
(g70
g71
NtRp3295
(dp3296
g74
(dp3297
g82
I3
ssg83
g3291
sg76
(lp3298
S''
asbasbasbag69
(g85
g71
NtRp3299
(dp3300
g74
(dp3301
sg83
g3215
sg76
(lp3302
g69
(g90
g71
NtRp3303
(dp3304
g74
(dp3305
g94
g95
ssg83
g3299
sg76
(lp3306
g380
asbag69
(g90
g71
NtRp3307
(dp3308
g74
(dp3309
g101
g102
ssg83
g3299
sg76
(lp3310
S':'
asbag69
(g90
g71
NtRp3311
(dp3312
g74
(dp3313
sg83
g3299
sg76
(lp3314
g69
(g70
g71
NtRp3315
(dp3316
g74
(dp3317
g82
I3
ssg83
g3311
sg76
(lp3318
S''
asbasbasbag69
(g85
g71
NtRp3319
(dp3320
g74
(dp3321
sg83
g3215
sg76
(lp3322
g69
(g90
g71
NtRp3323
(dp3324
g74
(dp3325
g94
g95
ssg83
g3319
sg76
(lp3326
g401
asbag69
(g90
g71
NtRp3327
(dp3328
g74
(dp3329
g101
g102
ssg83
g3319
sg76
(lp3330
S':'
asbag69
(g90
g71
NtRp3331
(dp3332
g74
(dp3333
sg83
g3319
sg76
(lp3334
g69
(g70
g71
NtRp3335
(dp3336
g74
(dp3337
g82
I3
ssg83
g3331
sg76
(lp3338
S'/'
asbasbasbag69
(g85
g71
NtRp3339
(dp3340
g74
(dp3341
sg83
g3215
sg76
(lp3342
g69
(g90
g71
NtRp3343
(dp3344
g74
(dp3345
g94
g95
ssg83
g3339
sg76
(lp3346
g422
asbag69
(g90
g71
NtRp3347
(dp3348
g74
(dp3349
g101
g102
ssg83
g3339
sg76
(lp3350
S':'
asbag69
(g90
g71
NtRp3351
(dp3352
g74
(dp3353
sg83
g3339
sg76
(lp3354
g69
(g70
g71
NtRp3355
(dp3356
g74
(dp3357
g82
I3
ssg83
g3351
sg76
(lp3358
S''
asbasbasbag69
(g85
g71
NtRp3359
(dp3360
g74
(dp3361
sg83
g3215
sg76
(lp3362
g69
(g90
g71
NtRp3363
(dp3364
g74
(dp3365
g94
g95
ssg83
g3359
sg76
(lp3366
g443
asbag69
(g90
g71
NtRp3367
(dp3368
g74
(dp3369
g101
g102
ssg83
g3359
sg76
(lp3370
S':'
asbag69
(g90
g71
NtRp3371
(dp3372
g74
(dp3373
sg83
g3359
sg76
(lp3374
g69
(g70
g71
NtRp3375
(dp3376
g74
(dp3377
g82
I3
ssg83
g3371
sg76
(lp3378
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3379
(dp3380
g74
(dp3381
sg83
g3145
sg76
(lp3382
g69
(g90
g71
NtRp3383
(dp3384
g74
(dp3385
g94
g95
ssg83
g3379
sg76
(lp3386
S'delimiters'
p3387
asbag69
(g90
g71
NtRp3388
(dp3389
g74
(dp3390
g101
g102
ssg83
g3379
sg76
(lp3391
S':'
asbag69
(g90
g71
NtRp3392
(dp3393
g74
(dp3394
sg83
g3379
sg76
(lp3395
g69
(g70
g71
NtRp3396
(dp3397
g74
(dp3398
g82
I5
ssg83
g3392
sg76
(lp3399
g69
(g78
g71
NtRp3400
(dp3401
g74
(dp3402
g82
I4
ssg83
Nsg76
(lp3403
g69
(g85
g71
NtRp3404
(dp3405
g74
(dp3406
sg83
g3400
sg76
(lp3407
g69
(g90
g71
NtRp3408
(dp3409
g74
(dp3410
sg83
g3404
sg76
(lp3411
g69
(g70
g71
NtRp3412
(dp3413
g74
(dp3414
g82
I4
ssg83
g3408
sg76
(lp3415
S'{{'
p3416
asbasbasbag69
(g85
g71
NtRp3417
(dp3418
g74
(dp3419
sg83
g3400
sg76
(lp3420
g69
(g90
g71
NtRp3421
(dp3422
g74
(dp3423
sg83
g3417
sg76
(lp3424
g69
(g70
g71
NtRp3425
(dp3426
g74
(dp3427
g82
I4
ssg83
g3421
sg76
(lp3428
S'}}'
p3429
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3430
(dp3431
g74
(dp3432
sg83
g3145
sg76
(lp3433
g69
(g90
g71
NtRp3434
(dp3435
g74
(dp3436
g94
g95
ssg83
g3430
sg76
(lp3437
S'files'
p3438
asbag69
(g90
g71
NtRp3439
(dp3440
g74
(dp3441
g101
g102
ssg83
g3430
sg76
(lp3442
S':'
asbag69
(g90
g71
NtRp3443
(dp3444
g74
(dp3445
sg83
g3430
sg76
(lp3446
g69
(g70
g71
NtRp3447
(dp3448
g74
(dp3449
g82
I5
ssg83
g3443
sg76
(lp3450
g69
(g78
g71
NtRp3451
(dp3452
g74
(dp3453
g82
I4
ssg83
Nsg76
(lp3454
sbasbasbasbag69
(g85
g71
NtRp3455
(dp3456
g74
(dp3457
sg83
g3145
sg76
(lp3458
g69
(g90
g71
NtRp3459
(dp3460
g74
(dp3461
g94
g95
ssg83
g3455
sg76
(lp3462
S'flash'
p3463
asbag69
(g90
g71
NtRp3464
(dp3465
g74
(dp3466
g101
g102
ssg83
g3455
sg76
(lp3467
S':'
asbag69
(g90
g71
NtRp3468
(dp3469
g74
(dp3470
sg83
g3455
sg76
(lp3471
g69
(g70
g71
NtRp3472
(dp3473
g74
(dp3474
g82
I5
ssg83
g3468
sg76
(lp3475
S''
asbasbasbag69
(g85
g71
NtRp3476
(dp3477
g74
(dp3478
sg83
g3145
sg76
(lp3479
g69
(g90
g71
NtRp3480
(dp3481
g74
(dp3482
g94
g95
ssg83
g3476
sg76
(lp3483
S'generic_patterns'
p3484
asbag69
(g90
g71
NtRp3485
(dp3486
g74
(dp3487
g101
g102
ssg83
g3476
sg76
(lp3488
S':'
asbag69
(g90
g71
NtRp3489
(dp3490
g74
(dp3491
sg83
g3476
sg76
(lp3492
g69
(g70
g71
NtRp3493
(dp3494
g74
(dp3495
g82
I5
ssg83
g3489
sg76
(lp3496
g69
(g78
g71
NtRp3497
(dp3498
g74
(dp3499
g82
I4
ssg83
Nsg76
(lp3500
g69
(g85
g71
NtRp3501
(dp3502
g74
(dp3503
sg83
g3497
sg76
(lp3504
g69
(g90
g71
NtRp3505
(dp3506
g74
(dp3507
sg83
g3501
sg76
(lp3508
g69
(g70
g71
NtRp3509
(dp3510
g74
(dp3511
g82
I4
ssg83
g3505
sg76
(lp3512
S'*'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3513
(dp3514
g74
(dp3515
sg83
g3145
sg76
(lp3516
g69
(g90
g71
NtRp3517
(dp3518
g74
(dp3519
g94
g95
ssg83
g3513
sg76
(lp3520
S'headers'
p3521
asbag69
(g90
g71
NtRp3522
(dp3523
g74
(dp3524
g101
g102
ssg83
g3513
sg76
(lp3525
S':'
asbag69
(g90
g71
NtRp3526
(dp3527
g74
(dp3528
sg83
g3513
sg76
(lp3529
g69
(g70
g71
NtRp3530
(dp3531
g74
(dp3532
g82
I5
ssg83
g3526
sg76
(lp3533
g69
(g78
g71
NtRp3534
(dp3535
g74
(dp3536
g82
I4
ssg83
Nsg76
(lp3537
g69
(g85
g71
NtRp3538
(dp3539
g74
(dp3540
sg83
g3534
sg76
(lp3541
g69
(g90
g71
NtRp3542
(dp3543
g74
(dp3544
g94
g95
ssg83
g3538
sg76
(lp3545
S'Cache-Control'
p3546
asbag69
(g90
g71
NtRp3547
(dp3548
g74
(dp3549
g101
g102
ssg83
g3538
sg76
(lp3550
S':'
asbag69
(g90
g71
NtRp3551
(dp3552
g74
(dp3553
sg83
g3538
sg76
(lp3554
g69
(g70
g71
NtRp3555
(dp3556
g74
(dp3557
g82
I4
ssg83
g3551
sg76
(lp3558
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p3559
asbasbasbag69
(g85
g71
NtRp3560
(dp3561
g74
(dp3562
sg83
g3534
sg76
(lp3563
g69
(g90
g71
NtRp3564
(dp3565
g74
(dp3566
g94
g95
ssg83
g3560
sg76
(lp3567
S'Content-Type'
p3568
asbag69
(g90
g71
NtRp3569
(dp3570
g74
(dp3571
g101
g102
ssg83
g3560
sg76
(lp3572
S':'
asbag69
(g90
g71
NtRp3573
(dp3574
g74
(dp3575
sg83
g3560
sg76
(lp3576
g69
(g70
g71
NtRp3577
(dp3578
g74
(dp3579
g82
I4
ssg83
g3573
sg76
(lp3580
S'text/html; charset=utf-8'
p3581
asbasbasbag69
(g85
g71
NtRp3582
(dp3583
g74
(dp3584
sg83
g3534
sg76
(lp3585
g69
(g90
g71
NtRp3586
(dp3587
g74
(dp3588
g94
g95
ssg83
g3582
sg76
(lp3589
S'Expires'
p3590
asbag69
(g90
g71
NtRp3591
(dp3592
g74
(dp3593
g101
g102
ssg83
g3582
sg76
(lp3594
S':'
asbag69
(g90
g71
NtRp3595
(dp3596
g74
(dp3597
sg83
g3582
sg76
(lp3598
g69
(g70
g71
NtRp3599
(dp3600
g74
(dp3601
g82
I4
ssg83
g3595
sg76
(lp3602
S'Tue, 16 Apr 2013 23:26:46 GMT'
p3603
asbasbasbag69
(g85
g71
NtRp3604
(dp3605
g74
(dp3606
sg83
g3534
sg76
(lp3607
g69
(g90
g71
NtRp3608
(dp3609
g74
(dp3610
g94
g95
ssg83
g3604
sg76
(lp3611
S'Pragma'
p3612
asbag69
(g90
g71
NtRp3613
(dp3614
g74
(dp3615
g101
g102
ssg83
g3604
sg76
(lp3616
S':'
asbag69
(g90
g71
NtRp3617
(dp3618
g74
(dp3619
sg83
g3604
sg76
(lp3620
g69
(g70
g71
NtRp3621
(dp3622
g74
(dp3623
g82
I4
ssg83
g3617
sg76
(lp3624
S'no-cache'
p3625
asbasbasbag69
(g85
g71
NtRp3626
(dp3627
g74
(dp3628
sg83
g3534
sg76
(lp3629
g69
(g90
g71
NtRp3630
(dp3631
g74
(dp3632
g94
g95
ssg83
g3626
sg76
(lp3633
S'X-Powered-By'
p3634
asbag69
(g90
g71
NtRp3635
(dp3636
g74
(dp3637
g101
g102
ssg83
g3626
sg76
(lp3638
S':'
asbag69
(g90
g71
NtRp3639
(dp3640
g74
(dp3641
sg83
g3626
sg76
(lp3642
g69
(g70
g71
NtRp3643
(dp3644
g74
(dp3645
g82
I4
ssg83
g3639
sg76
(lp3646
S'web2py'
p3647
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3648
(dp3649
g74
(dp3650
sg83
g3145
sg76
(lp3651
g69
(g90
g71
NtRp3652
(dp3653
g74
(dp3654
g94
g95
ssg83
g3648
sg76
(lp3655
S'menu'
p3656
asbag69
(g90
g71
NtRp3657
(dp3658
g74
(dp3659
g101
g102
ssg83
g3648
sg76
(lp3660
S':'
asbag69
(g90
g71
NtRp3661
(dp3662
g74
(dp3663
sg83
g3648
sg76
(lp3664
g69
(g70
g71
NtRp3665
(dp3666
g74
(dp3667
g82
I5
ssg83
g3661
sg76
(lp3668
g69
(g78
g71
NtRp3669
(dp3670
g74
(dp3671
g82
I4
ssg83
Nsg76
(lp3672
g69
(g85
g71
NtRp3673
(dp3674
g74
(dp3675
sg83
g3669
sg76
(lp3676
g69
(g90
g71
NtRp3677
(dp3678
g74
(dp3679
sg83
g3673
sg76
(lp3680
g69
(g70
g71
NtRp3681
(dp3682
g74
(dp3683
g82
I4
ssg83
g3677
sg76
(lp3684
g69
(g78
g71
NtRp3685
(dp3686
g74
(dp3687
g82
I3
ssg83
Nsg76
(lp3688
g69
(g85
g71
NtRp3689
(dp3690
g74
(dp3691
sg83
g3685
sg76
(lp3692
g69
(g90
g71
NtRp3693
(dp3694
g74
(dp3695
sg83
g3689
sg76
(lp3696
g69
(g70
g71
NtRp3697
(dp3698
g74
(dp3699
g82
I3
ssg83
g3693
sg76
(lp3700
cgluon.languages
lazyT_unpickle
p3701
(S't\x04\x00\x00\x00Home'
tRp3702
asbasbasbag69
(g85
g71
NtRp3703
(dp3704
g74
(dp3705
sg83
g3685
sg76
(lp3706
g69
(g90
g71
NtRp3707
(dp3708
g74
(dp3709
sg83
g3703
sg76
(lp3710
g69
(g70
g71
NtRp3711
(dp3712
g74
(dp3713
g82
I3
ssg83
g3707
sg76
(lp3714
g112
asbasbasbag69
(g85
g71
NtRp3715
(dp3716
g74
(dp3717
sg83
g3685
sg76
(lp3718
g69
(g90
g71
NtRp3719
(dp3720
g74
(dp3721
sg83
g3715
sg76
(lp3722
g69
(g70
g71
NtRp3723
(dp3724
g74
(dp3725
g82
I3
ssg83
g3719
sg76
(lp3726
S'/SeniorProject/default/index'
p3727
asbasbasbag69
(g85
g71
NtRp3728
(dp3729
g74
(dp3730
sg83
g3685
sg76
(lp3731
g69
(g90
g71
NtRp3732
(dp3733
g74
(dp3734
sg83
g3728
sg76
(lp3735
g69
(g70
g71
NtRp3736
(dp3737
g74
(dp3738
g82
I3
ssg83
g3732
sg76
(lp3739
g69
(g78
g71
NtRp3740
(dp3741
g74
(dp3742
g82
I2
ssg83
Nsg76
(lp3743
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3744
(dp3745
g74
(dp3746
sg83
g3669
sg76
(lp3747
g69
(g90
g71
NtRp3748
(dp3749
g74
(dp3750
sg83
g3744
sg76
(lp3751
g69
(g70
g71
NtRp3752
(dp3753
g74
(dp3754
g82
I4
ssg83
g3748
sg76
(lp3755
g69
(g78
g71
NtRp3756
(dp3757
g74
(dp3758
g82
I3
ssg83
Nsg76
(lp3759
g69
(g85
g71
NtRp3760
(dp3761
g74
(dp3762
sg83
g3756
sg76
(lp3763
g69
(g90
g71
NtRp3764
(dp3765
g74
(dp3766
sg83
g3760
sg76
(lp3767
g69
(g70
g71
NtRp3768
(dp3769
g74
(dp3770
g82
I3
ssg83
g3764
sg76
(lp3771
g69
(cgluon.html
SPAN
p3772
g71
NtRp3773
(dp3774
g74
(dp3775
g94
S'color:yellow'
p3776
ssg83
Nsg76
(lp3777
g3647
asbasbasbasbag69
(g85
g71
NtRp3778
(dp3779
g74
(dp3780
sg83
g3756
sg76
(lp3781
g69
(g90
g71
NtRp3782
(dp3783
g74
(dp3784
sg83
g3778
sg76
(lp3785
g69
(g70
g71
NtRp3786
(dp3787
g74
(dp3788
g82
I3
ssg83
g3782
sg76
(lp3789
g112
asbasbasbag69
(g85
g71
NtRp3790
(dp3791
g74
(dp3792
sg83
g3756
sg76
(lp3793
g69
(g90
g71
NtRp3794
(dp3795
g74
(dp3796
sg83
g3790
sg76
(lp3797
g69
(g70
g71
NtRp3798
(dp3799
g74
(dp3800
g82
I3
ssg83
g3794
sg76
(lp3801
S'None'
p3802
asbasbasbag69
(g85
g71
NtRp3803
(dp3804
g74
(dp3805
sg83
g3756
sg76
(lp3806
g69
(g90
g71
NtRp3807
(dp3808
g74
(dp3809
sg83
g3803
sg76
(lp3810
g69
(g70
g71
NtRp3811
(dp3812
g74
(dp3813
g82
I3
ssg83
g3807
sg76
(lp3814
g69
(g78
g71
NtRp3815
(dp3816
g74
(dp3817
g82
I2
ssg83
Nsg76
(lp3818
g69
(g85
g71
NtRp3819
(dp3820
g74
(dp3821
sg83
g3815
sg76
(lp3822
g69
(g90
g71
NtRp3823
(dp3824
g74
(dp3825
sg83
g3819
sg76
(lp3826
g69
(g70
g71
NtRp3827
(dp3828
g74
(dp3829
g82
I2
ssg83
g3823
sg76
(lp3830
g69
(g78
g71
NtRp3831
(dp3832
g74
(dp3833
g82
I1
ssg83
Nsg76
(lp3834
g69
(g85
g71
NtRp3835
(dp3836
g74
(dp3837
sg83
g3831
sg76
(lp3838
g69
(g90
g71
NtRp3839
(dp3840
g74
(dp3841
sg83
g3835
sg76
(lp3842
g69
(g70
g71
NtRp3843
(dp3844
g74
(dp3845
g82
I1
ssg83
g3839
sg76
(lp3846
g3701
(S's\x08\x00\x00\x00My Sites'
tRp3847
asbasbasbag69
(g85
g71
NtRp3848
(dp3849
g74
(dp3850
sg83
g3831
sg76
(lp3851
g69
(g90
g71
NtRp3852
(dp3853
g74
(dp3854
sg83
g3848
sg76
(lp3855
g69
(g70
g71
NtRp3856
(dp3857
g74
(dp3858
g82
I1
ssg83
g3852
sg76
(lp3859
I00
asbasbasbag69
(g85
g71
NtRp3860
(dp3861
g74
(dp3862
sg83
g3831
sg76
(lp3863
g69
(g90
g71
NtRp3864
(dp3865
g74
(dp3866
sg83
g3860
sg76
(lp3867
g69
(g70
g71
NtRp3868
(dp3869
g74
(dp3870
g82
I1
ssg83
g3864
sg76
(lp3871
S'/admin/default/site'
p3872
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3873
(dp3874
g74
(dp3875
sg83
g3815
sg76
(lp3876
g69
(g90
g71
NtRp3877
(dp3878
g74
(dp3879
sg83
g3873
sg76
(lp3880
g69
(g70
g71
NtRp3881
(dp3882
g74
(dp3883
g82
I2
ssg83
g3877
sg76
(lp3884
g69
(g78
g71
NtRp3885
(dp3886
g74
(dp3887
g82
I1
ssg83
Nsg76
(lp3888
g69
(g85
g71
NtRp3889
(dp3890
g74
(dp3891
sg83
g3885
sg76
(lp3892
g69
(g90
g71
NtRp3893
(dp3894
g74
(dp3895
sg83
g3889
sg76
(lp3896
g69
(g70
g71
NtRp3897
(dp3898
g74
(dp3899
g82
I1
ssg83
g3893
sg76
(lp3900
g3701
(S's\x08\x00\x00\x00This App'
tRp3901
asbasbasbag69
(g85
g71
NtRp3902
(dp3903
g74
(dp3904
sg83
g3885
sg76
(lp3905
g69
(g90
g71
NtRp3906
(dp3907
g74
(dp3908
sg83
g3902
sg76
(lp3909
g69
(g70
g71
NtRp3910
(dp3911
g74
(dp3912
g82
I1
ssg83
g3906
sg76
(lp3913
I00
asbasbasbag69
(g85
g71
NtRp3914
(dp3915
g74
(dp3916
sg83
g3885
sg76
(lp3917
g69
(g90
g71
NtRp3918
(dp3919
g74
(dp3920
sg83
g3914
sg76
(lp3921
g69
(g70
g71
NtRp3922
(dp3923
g74
(dp3924
g82
I1
ssg83
g3918
sg76
(lp3925
S'/admin/default/design/SeniorProject'
p3926
asbasbasbag69
(g85
g71
NtRp3927
(dp3928
g74
(dp3929
sg83
g3885
sg76
(lp3930
g69
(g90
g71
NtRp3931
(dp3932
g74
(dp3933
sg83
g3927
sg76
(lp3934
g69
(g70
g71
NtRp3935
(dp3936
g74
(dp3937
g82
I1
ssg83
g3931
sg76
(lp3938
(lp3939
(g3701
(S't\n\x00\x00\x00Controller'
tRp3940
I00
S'/admin/default/edit/SeniorProject/controllers/default.py'
tp3941
a(g3701
(S't\x04\x00\x00\x00View'
tRp3942
I00
S'/admin/default/edit/SeniorProject/views/default/user.html'
tp3943
a(g3701
(S't\x06\x00\x00\x00Layout'
tRp3944
I00
S'/admin/default/edit/SeniorProject/views/layout.html'
tp3945
a(g3701
(S't\n\x00\x00\x00Stylesheet'
tRp3946
I00
S'/admin/default/edit/SeniorProject/static/css/web2py.css'
tp3947
a(g3701
(S's\x08\x00\x00\x00DB Model'
tRp3948
I00
S'/admin/default/edit/SeniorProject/models/db.py'
tp3949
a(g3701
(S's\n\x00\x00\x00Menu Model'
tRp3950
I00
S'/admin/default/edit/SeniorProject/models/menu.py'
tp3951
a(g3701
(S't\x08\x00\x00\x00Database'
tRp3952
I00
S'/SeniorProject/appadmin/index'
tp3953
a(g3701
(S't\x06\x00\x00\x00Errors'
tRp3954
I00
S'/admin/default/errors/SeniorProject'
tp3955
a(g3701
(S't\x05\x00\x00\x00About'
tRp3956
I00
S'/admin/default/about/SeniorProject'
tp3957
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp3958
(dp3959
g74
(dp3960
sg83
g3815
sg76
(lp3961
g69
(g90
g71
NtRp3962
(dp3963
g74
(dp3964
sg83
g3958
sg76
(lp3965
g69
(g70
g71
NtRp3966
(dp3967
g74
(dp3968
g82
I2
ssg83
g3962
sg76
(lp3969
g69
(g78
g71
NtRp3970
(dp3971
g74
(dp3972
g82
I1
ssg83
Nsg76
(lp3973
g69
(g85
g71
NtRp3974
(dp3975
g74
(dp3976
sg83
g3970
sg76
(lp3977
g69
(g90
g71
NtRp3978
(dp3979
g74
(dp3980
sg83
g3974
sg76
(lp3981
g69
(g70
g71
NtRp3982
(dp3983
g74
(dp3984
g82
I1
ssg83
g3978
sg76
(lp3985
S'web2py.com'
p3986
asbasbasbag69
(g85
g71
NtRp3987
(dp3988
g74
(dp3989
sg83
g3970
sg76
(lp3990
g69
(g90
g71
NtRp3991
(dp3992
g74
(dp3993
sg83
g3987
sg76
(lp3994
g69
(g70
g71
NtRp3995
(dp3996
g74
(dp3997
g82
I1
ssg83
g3991
sg76
(lp3998
I00
asbasbasbag69
(g85
g71
NtRp3999
(dp4000
g74
(dp4001
sg83
g3970
sg76
(lp4002
g69
(g90
g71
NtRp4003
(dp4004
g74
(dp4005
sg83
g3999
sg76
(lp4006
g69
(g70
g71
NtRp4007
(dp4008
g74
(dp4009
g82
I1
ssg83
g4003
sg76
(lp4010
S'http://www.web2py.com'
p4011
asbasbasbag69
(g85
g71
NtRp4012
(dp4013
g74
(dp4014
sg83
g3970
sg76
(lp4015
g69
(g90
g71
NtRp4016
(dp4017
g74
(dp4018
sg83
g4012
sg76
(lp4019
g69
(g70
g71
NtRp4020
(dp4021
g74
(dp4022
g82
I1
ssg83
g4016
sg76
(lp4023
(lp4024
(g3701
(S't\x08\x00\x00\x00Download'
tRp4025
I00
S'http://www.web2py.com/examples/default/download'
p4026
tp4027
a(g3701
(S't\x07\x00\x00\x00Support'
tRp4028
I00
S'http://www.web2py.com/examples/default/support'
p4029
tp4030
a(g3701
(S't\x04\x00\x00\x00Demo'
tRp4031
I00
S'http://web2py.com/demo_admin'
p4032
tp4033
a(g3701
(S's\x0e\x00\x00\x00Quick Examples'
tRp4034
I00
S'http://web2py.com/examples/default/examples'
p4035
tp4036
a(g3701
(S't\x03\x00\x00\x00FAQ'
tRp4037
I00
S'http://web2py.com/AlterEgo'
p4038
tp4039
a(g3701
(S't\x06\x00\x00\x00Videos'
tRp4040
I00
S'http://www.web2py.com/examples/default/videos/'
p4041
tp4042
a(g3701
(S's\x11\x00\x00\x00Free Applications'
tRp4043
I00
S'http://web2py.com/appliances'
p4044
tp4045
a(g3701
(S't\x07\x00\x00\x00Plugins'
tRp4046
I00
S'http://web2py.com/plugins'
p4047
tp4048
a(g3701
(S't\x07\x00\x00\x00Layouts'
tRp4049
I00
S'http://web2py.com/layouts'
p4050
tp4051
a(g3701
(S't\x07\x00\x00\x00Recipes'
tRp4052
I00
S'http://web2pyslices.com/'
p4053
tp4054
a(g3701
(S't\x08\x00\x00\x00Semantic'
tRp4055
I00
S'http://web2py.com/semantic'
p4056
tp4057
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4058
(dp4059
g74
(dp4060
sg83
g3815
sg76
(lp4061
g69
(g90
g71
NtRp4062
(dp4063
g74
(dp4064
sg83
g4058
sg76
(lp4065
g69
(g70
g71
NtRp4066
(dp4067
g74
(dp4068
g82
I2
ssg83
g4062
sg76
(lp4069
g69
(g78
g71
NtRp4070
(dp4071
g74
(dp4072
g82
I1
ssg83
Nsg76
(lp4073
g69
(g85
g71
NtRp4074
(dp4075
g74
(dp4076
sg83
g4070
sg76
(lp4077
g69
(g90
g71
NtRp4078
(dp4079
g74
(dp4080
sg83
g4074
sg76
(lp4081
g69
(g70
g71
NtRp4082
(dp4083
g74
(dp4084
g82
I1
ssg83
g4078
sg76
(lp4085
g3701
(S't\r\x00\x00\x00Documentation'
tRp4086
asbasbasbag69
(g85
g71
NtRp4087
(dp4088
g74
(dp4089
sg83
g4070
sg76
(lp4090
g69
(g90
g71
NtRp4091
(dp4092
g74
(dp4093
sg83
g4087
sg76
(lp4094
g69
(g70
g71
NtRp4095
(dp4096
g74
(dp4097
g82
I1
ssg83
g4091
sg76
(lp4098
I00
asbasbasbag69
(g85
g71
NtRp4099
(dp4100
g74
(dp4101
sg83
g4070
sg76
(lp4102
g69
(g90
g71
NtRp4103
(dp4104
g74
(dp4105
sg83
g4099
sg76
(lp4106
g69
(g70
g71
NtRp4107
(dp4108
g74
(dp4109
g82
I1
ssg83
g4103
sg76
(lp4110
S'http://www.web2py.com/book'
p4111
asbasbasbag69
(g85
g71
NtRp4112
(dp4113
g74
(dp4114
sg83
g4070
sg76
(lp4115
g69
(g90
g71
NtRp4116
(dp4117
g74
(dp4118
sg83
g4112
sg76
(lp4119
g69
(g70
g71
NtRp4120
(dp4121
g74
(dp4122
g82
I1
ssg83
g4116
sg76
(lp4123
(lp4124
(g3701
(S't\x07\x00\x00\x00Preface'
tRp4125
I00
S'http://www.web2py.com/book/default/chapter/00'
p4126
tp4127
a(g3701
(S't\x0c\x00\x00\x00Introduction'
tRp4128
I00
S'http://www.web2py.com/book/default/chapter/01'
p4129
tp4130
a(g3701
(S't\x06\x00\x00\x00Python'
tRp4131
I00
S'http://www.web2py.com/book/default/chapter/02'
p4132
tp4133
a(g3701
(S't\x08\x00\x00\x00Overview'
tRp4134
I00
S'http://www.web2py.com/book/default/chapter/03'
p4135
tp4136
a(g3701
(S's\x08\x00\x00\x00The Core'
tRp4137
I00
S'http://www.web2py.com/book/default/chapter/04'
p4138
tp4139
a(g3701
(S's\t\x00\x00\x00The Views'
tRp4140
I00
S'http://www.web2py.com/book/default/chapter/05'
p4141
tp4142
a(g3701
(S't\x08\x00\x00\x00Database'
tRp4143
I00
S'http://www.web2py.com/book/default/chapter/06'
p4144
tp4145
a(g3701
(S's\x14\x00\x00\x00Forms and Validators'
tRp4146
I00
S'http://www.web2py.com/book/default/chapter/07'
p4147
tp4148
a(g3701
(S's\r\x00\x00\x00Email and SMS'
tRp4149
I00
S'http://www.web2py.com/book/default/chapter/08'
p4150
tp4151
a(g3701
(S's\x0e\x00\x00\x00Access Control'
tRp4152
I00
S'http://www.web2py.com/book/default/chapter/09'
p4153
tp4154
a(g3701
(S't\x08\x00\x00\x00Services'
tRp4155
I00
S'http://www.web2py.com/book/default/chapter/10'
p4156
tp4157
a(g3701
(S's\x0c\x00\x00\x00Ajax Recipes'
tRp4158
I00
S'http://www.web2py.com/book/default/chapter/11'
p4159
tp4160
a(g3701
(S's\x16\x00\x00\x00Components and Plugins'
tRp4161
I00
S'http://www.web2py.com/book/default/chapter/12'
p4162
tp4163
a(g3701
(S's\x12\x00\x00\x00Deployment Recipes'
tRp4164
I00
S'http://www.web2py.com/book/default/chapter/13'
p4165
tp4166
a(g3701
(S's\r\x00\x00\x00Other Recipes'
tRp4167
I00
S'http://www.web2py.com/book/default/chapter/14'
p4168
tp4169
a(g3701
(S's\r\x00\x00\x00Buy this book'
tRp4170
I00
S'http://stores.lulu.com/web2py'
p4171
tp4172
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4173
(dp4174
g74
(dp4175
sg83
g3815
sg76
(lp4176
g69
(g90
g71
NtRp4177
(dp4178
g74
(dp4179
sg83
g4173
sg76
(lp4180
g69
(g70
g71
NtRp4181
(dp4182
g74
(dp4183
g82
I2
ssg83
g4177
sg76
(lp4184
g69
(g78
g71
NtRp4185
(dp4186
g74
(dp4187
g82
I1
ssg83
Nsg76
(lp4188
g69
(g85
g71
NtRp4189
(dp4190
g74
(dp4191
sg83
g4185
sg76
(lp4192
g69
(g90
g71
NtRp4193
(dp4194
g74
(dp4195
sg83
g4189
sg76
(lp4196
g69
(g70
g71
NtRp4197
(dp4198
g74
(dp4199
g82
I1
ssg83
g4193
sg76
(lp4200
g3701
(S't\t\x00\x00\x00Community'
tRp4201
asbasbasbag69
(g85
g71
NtRp4202
(dp4203
g74
(dp4204
sg83
g4185
sg76
(lp4205
g69
(g90
g71
NtRp4206
(dp4207
g74
(dp4208
sg83
g4202
sg76
(lp4209
g69
(g70
g71
NtRp4210
(dp4211
g74
(dp4212
g82
I1
ssg83
g4206
sg76
(lp4213
I00
asbasbasbag69
(g85
g71
NtRp4214
(dp4215
g74
(dp4216
sg83
g4185
sg76
(lp4217
g69
(g90
g71
NtRp4218
(dp4219
g74
(dp4220
sg83
g4214
sg76
(lp4221
g69
(g70
g71
NtRp4222
(dp4223
g74
(dp4224
g82
I1
ssg83
g4218
sg76
(lp4225
Nasbasbasbag69
(g85
g71
NtRp4226
(dp4227
g74
(dp4228
sg83
g4185
sg76
(lp4229
g69
(g90
g71
NtRp4230
(dp4231
g74
(dp4232
sg83
g4226
sg76
(lp4233
g69
(g70
g71
NtRp4234
(dp4235
g74
(dp4236
g82
I1
ssg83
g4230
sg76
(lp4237
(lp4238
(g3701
(S't\x06\x00\x00\x00Groups'
tRp4239
I00
S'http://www.web2py.com/examples/default/usergroups'
p4240
tp4241
a(g3701
(S't\x07\x00\x00\x00Twitter'
tRp4242
I00
S'http://twitter.com/web2py'
p4243
tp4244
a(g3701
(S's\t\x00\x00\x00Live Chat'
tRp4245
I00
S'http://webchat.freenode.net/?channels=web2py'
p4246
tp4247
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4248
(dp4249
g74
(dp4250
sg83
g3815
sg76
(lp4251
g69
(g90
g71
NtRp4252
(dp4253
g74
(dp4254
sg83
g4248
sg76
(lp4255
g69
(g70
g71
NtRp4256
(dp4257
g74
(dp4258
g82
I2
ssg83
g4252
sg76
(lp4259
g69
(g78
g71
NtRp4260
(dp4261
g74
(dp4262
g82
I1
ssg83
Nsg76
(lp4263
g69
(g85
g71
NtRp4264
(dp4265
g74
(dp4266
sg83
g4260
sg76
(lp4267
g69
(g90
g71
NtRp4268
(dp4269
g74
(dp4270
sg83
g4264
sg76
(lp4271
g69
(g70
g71
NtRp4272
(dp4273
g74
(dp4274
g82
I1
ssg83
g4268
sg76
(lp4275
g3701
(S't\x07\x00\x00\x00Plugins'
tRp4276
asbasbasbag69
(g85
g71
NtRp4277
(dp4278
g74
(dp4279
sg83
g4260
sg76
(lp4280
g69
(g90
g71
NtRp4281
(dp4282
g74
(dp4283
sg83
g4277
sg76
(lp4284
g69
(g70
g71
NtRp4285
(dp4286
g74
(dp4287
g82
I1
ssg83
g4281
sg76
(lp4288
I00
asbasbasbag69
(g85
g71
NtRp4289
(dp4290
g74
(dp4291
sg83
g4260
sg76
(lp4292
g69
(g90
g71
NtRp4293
(dp4294
g74
(dp4295
sg83
g4289
sg76
(lp4296
g69
(g70
g71
NtRp4297
(dp4298
g74
(dp4299
g82
I1
ssg83
g4293
sg76
(lp4300
Nasbasbasbag69
(g85
g71
NtRp4301
(dp4302
g74
(dp4303
sg83
g4260
sg76
(lp4304
g69
(g90
g71
NtRp4305
(dp4306
g74
(dp4307
sg83
g4301
sg76
(lp4308
g69
(g70
g71
NtRp4309
(dp4310
g74
(dp4311
g82
I1
ssg83
g4305
sg76
(lp4312
(lp4313
(S'plugin_wiki'
p4314
I00
S'http://web2py.com/examples/default/download'
p4315
tp4316
a(g3701
(S's\r\x00\x00\x00Other Plugins'
tRp4317
I00
g4047
tp4318
a(g3701
(S's\x0e\x00\x00\x00Layout Plugins'
tRp4319
I00
g4050
tp4320
aasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4321
(dp4322
g74
(dp4323
sg83
g3145
sg76
(lp4324
g69
(g90
g71
NtRp4325
(dp4326
g74
(dp4327
g94
g95
ssg83
g4321
sg76
(lp4328
S'meta'
p4329
asbag69
(g90
g71
NtRp4330
(dp4331
g74
(dp4332
g101
g102
ssg83
g4321
sg76
(lp4333
S':'
asbag69
(g90
g71
NtRp4334
(dp4335
g74
(dp4336
sg83
g4321
sg76
(lp4337
g69
(g70
g71
NtRp4338
(dp4339
g74
(dp4340
g82
I5
ssg83
g4334
sg76
(lp4341
g69
(g78
g71
NtRp4342
(dp4343
g74
(dp4344
g82
I4
ssg83
Nsg76
(lp4345
g69
(g85
g71
NtRp4346
(dp4347
g74
(dp4348
sg83
g4342
sg76
(lp4349
g69
(g90
g71
NtRp4350
(dp4351
g74
(dp4352
g94
g95
ssg83
g4346
sg76
(lp4353
S'author'
p4354
asbag69
(g90
g71
NtRp4355
(dp4356
g74
(dp4357
g101
g102
ssg83
g4346
sg76
(lp4358
S':'
asbag69
(g90
g71
NtRp4359
(dp4360
g74
(dp4361
sg83
g4346
sg76
(lp4362
g69
(g70
g71
NtRp4363
(dp4364
g74
(dp4365
g82
I4
ssg83
g4359
sg76
(lp4366
S'Your Name <you@example.com>'
p4367
asbasbasbag69
(g85
g71
NtRp4368
(dp4369
g74
(dp4370
sg83
g4342
sg76
(lp4371
g69
(g90
g71
NtRp4372
(dp4373
g74
(dp4374
g94
g95
ssg83
g4368
sg76
(lp4375
S'copyright'
p4376
asbag69
(g90
g71
NtRp4377
(dp4378
g74
(dp4379
g101
g102
ssg83
g4368
sg76
(lp4380
S':'
asbag69
(g90
g71
NtRp4381
(dp4382
g74
(dp4383
sg83
g4368
sg76
(lp4384
g69
(g70
g71
NtRp4385
(dp4386
g74
(dp4387
g82
I4
ssg83
g4381
sg76
(lp4388
S'Copyright 2011'
p4389
asbasbasbag69
(g85
g71
NtRp4390
(dp4391
g74
(dp4392
sg83
g4342
sg76
(lp4393
g69
(g90
g71
NtRp4394
(dp4395
g74
(dp4396
g94
g95
ssg83
g4390
sg76
(lp4397
S'description'
p4398
asbag69
(g90
g71
NtRp4399
(dp4400
g74
(dp4401
g101
g102
ssg83
g4390
sg76
(lp4402
S':'
asbag69
(g90
g71
NtRp4403
(dp4404
g74
(dp4405
sg83
g4390
sg76
(lp4406
g69
(g70
g71
NtRp4407
(dp4408
g74
(dp4409
g82
I4
ssg83
g4403
sg76
(lp4410
S'a cool new app'
p4411
asbasbasbag69
(g85
g71
NtRp4412
(dp4413
g74
(dp4414
sg83
g4342
sg76
(lp4415
g69
(g90
g71
NtRp4416
(dp4417
g74
(dp4418
g94
g95
ssg83
g4412
sg76
(lp4419
S'generator'
p4420
asbag69
(g90
g71
NtRp4421
(dp4422
g74
(dp4423
g101
g102
ssg83
g4412
sg76
(lp4424
S':'
asbag69
(g90
g71
NtRp4425
(dp4426
g74
(dp4427
sg83
g4412
sg76
(lp4428
g69
(g70
g71
NtRp4429
(dp4430
g74
(dp4431
g82
I4
ssg83
g4425
sg76
(lp4432
S'Web2py Web Framework'
p4433
asbasbasbag69
(g85
g71
NtRp4434
(dp4435
g74
(dp4436
sg83
g4342
sg76
(lp4437
g69
(g90
g71
NtRp4438
(dp4439
g74
(dp4440
g94
g95
ssg83
g4434
sg76
(lp4441
S'keywords'
p4442
asbag69
(g90
g71
NtRp4443
(dp4444
g74
(dp4445
g101
g102
ssg83
g4434
sg76
(lp4446
S':'
asbag69
(g90
g71
NtRp4447
(dp4448
g74
(dp4449
sg83
g4434
sg76
(lp4450
g69
(g70
g71
NtRp4451
(dp4452
g74
(dp4453
g82
I4
ssg83
g4447
sg76
(lp4454
S'web2py, python, framework'
p4455
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4456
(dp4457
g74
(dp4458
sg83
g3145
sg76
(lp4459
g69
(g90
g71
NtRp4460
(dp4461
g74
(dp4462
g94
g95
ssg83
g4456
sg76
(lp4463
S'postprocessing'
p4464
asbag69
(g90
g71
NtRp4465
(dp4466
g74
(dp4467
g101
g102
ssg83
g4456
sg76
(lp4468
S':'
asbag69
(g90
g71
NtRp4469
(dp4470
g74
(dp4471
sg83
g4456
sg76
(lp4472
g69
(g70
g71
NtRp4473
(dp4474
g74
(dp4475
g82
I5
ssg83
g4469
sg76
(lp4476
g69
(g78
g71
NtRp4477
(dp4478
g74
(dp4479
g82
I4
ssg83
Nsg76
(lp4480
sbasbasbasbag69
(g85
g71
NtRp4481
(dp4482
g74
(dp4483
sg83
g3145
sg76
(lp4484
g69
(g90
g71
NtRp4485
(dp4486
g74
(dp4487
g94
g95
ssg83
g4481
sg76
(lp4488
S'session_file'
p4489
asbag69
(g90
g71
NtRp4490
(dp4491
g74
(dp4492
g101
g102
ssg83
g4481
sg76
(lp4493
S':'
asbag69
(g90
g71
NtRp4494
(dp4495
g74
(dp4496
sg83
g4481
sg76
(lp4497
g69
(g70
g71
NtRp4498
(dp4499
g74
(dp4500
g82
I5
ssg83
g4494
sg76
(lp4501
S"<open file '/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b', mode 'rb+' at 0x102f01f60>"
p4502
asbasbasbag69
(g85
g71
NtRp4503
(dp4504
g74
(dp4505
sg83
g3145
sg76
(lp4506
g69
(g90
g71
NtRp4507
(dp4508
g74
(dp4509
g94
g95
ssg83
g4503
sg76
(lp4510
S'session_filename'
p4511
asbag69
(g90
g71
NtRp4512
(dp4513
g74
(dp4514
g101
g102
ssg83
g4503
sg76
(lp4515
S':'
asbag69
(g90
g71
NtRp4516
(dp4517
g74
(dp4518
sg83
g4503
sg76
(lp4519
g69
(g70
g71
NtRp4520
(dp4521
g74
(dp4522
g82
I5
ssg83
g4516
sg76
(lp4523
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p4524
asbasbasbag69
(g85
g71
NtRp4525
(dp4526
g74
(dp4527
sg83
g3145
sg76
(lp4528
g69
(g90
g71
NtRp4529
(dp4530
g74
(dp4531
g94
g95
ssg83
g4525
sg76
(lp4532
S'session_id'
p4533
asbag69
(g90
g71
NtRp4534
(dp4535
g74
(dp4536
g101
g102
ssg83
g4525
sg76
(lp4537
S':'
asbag69
(g90
g71
NtRp4538
(dp4539
g74
(dp4540
sg83
g4525
sg76
(lp4541
g69
(g70
g71
NtRp4542
(dp4543
g74
(dp4544
g82
I5
ssg83
g4538
sg76
(lp4545
S'127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p4546
asbasbasbag69
(g85
g71
NtRp4547
(dp4548
g74
(dp4549
sg83
g3145
sg76
(lp4550
g69
(g90
g71
NtRp4551
(dp4552
g74
(dp4553
g94
g95
ssg83
g4547
sg76
(lp4554
S'session_id_name'
p4555
asbag69
(g90
g71
NtRp4556
(dp4557
g74
(dp4558
g101
g102
ssg83
g4547
sg76
(lp4559
S':'
asbag69
(g90
g71
NtRp4560
(dp4561
g74
(dp4562
sg83
g4547
sg76
(lp4563
g69
(g70
g71
NtRp4564
(dp4565
g74
(dp4566
g82
I5
ssg83
g4560
sg76
(lp4567
g3202
asbasbasbag69
(g85
g71
NtRp4568
(dp4569
g74
(dp4570
sg83
g3145
sg76
(lp4571
g69
(g90
g71
NtRp4572
(dp4573
g74
(dp4574
g94
g95
ssg83
g4568
sg76
(lp4575
S'session_locked'
p4576
asbag69
(g90
g71
NtRp4577
(dp4578
g74
(dp4579
g101
g102
ssg83
g4568
sg76
(lp4580
S':'
asbag69
(g90
g71
NtRp4581
(dp4582
g74
(dp4583
sg83
g4568
sg76
(lp4584
g69
(g70
g71
NtRp4585
(dp4586
g74
(dp4587
g82
I5
ssg83
g4581
sg76
(lp4588
g1704
asbasbasbag69
(g85
g71
NtRp4589
(dp4590
g74
(dp4591
sg83
g3145
sg76
(lp4592
g69
(g90
g71
NtRp4593
(dp4594
g74
(dp4595
g94
g95
ssg83
g4589
sg76
(lp4596
S'session_new'
p4597
asbag69
(g90
g71
NtRp4598
(dp4599
g74
(dp4600
g101
g102
ssg83
g4589
sg76
(lp4601
S':'
asbag69
(g90
g71
NtRp4602
(dp4603
g74
(dp4604
sg83
g4589
sg76
(lp4605
g69
(g70
g71
NtRp4606
(dp4607
g74
(dp4608
g82
I5
ssg83
g4602
sg76
(lp4609
g112
asbasbasbag69
(g85
g71
NtRp4610
(dp4611
g74
(dp4612
sg83
g3145
sg76
(lp4613
g69
(g90
g71
NtRp4614
(dp4615
g74
(dp4616
g94
g95
ssg83
g4610
sg76
(lp4617
S'status'
p4618
asbag69
(g90
g71
NtRp4619
(dp4620
g74
(dp4621
g101
g102
ssg83
g4610
sg76
(lp4622
S':'
asbag69
(g90
g71
NtRp4623
(dp4624
g74
(dp4625
sg83
g4610
sg76
(lp4626
g69
(g70
g71
NtRp4627
(dp4628
g74
(dp4629
g82
I5
ssg83
g4623
sg76
(lp4630
S'200'
p4631
asbasbasbag69
(g85
g71
NtRp4632
(dp4633
g74
(dp4634
sg83
g3145
sg76
(lp4635
g69
(g90
g71
NtRp4636
(dp4637
g74
(dp4638
g94
g95
ssg83
g4632
sg76
(lp4639
S'subtitle'
p4640
asbag69
(g90
g71
NtRp4641
(dp4642
g74
(dp4643
g101
g102
ssg83
g4632
sg76
(lp4644
S':'
asbag69
(g90
g71
NtRp4645
(dp4646
g74
(dp4647
sg83
g4632
sg76
(lp4648
g69
(g70
g71
NtRp4649
(dp4650
g74
(dp4651
g82
I5
ssg83
g4645
sg76
(lp4652
g3701
(S's\r\x00\x00\x00customize me!'
tRp4653
asbasbasbag69
(g85
g71
NtRp4654
(dp4655
g74
(dp4656
sg83
g3145
sg76
(lp4657
g69
(g90
g71
NtRp4658
(dp4659
g74
(dp4660
g94
g95
ssg83
g4654
sg76
(lp4661
S'title'
p4662
asbag69
(g90
g71
NtRp4663
(dp4664
g74
(dp4665
g101
g102
ssg83
g4654
sg76
(lp4666
S':'
asbag69
(g90
g71
NtRp4667
(dp4668
g74
(dp4669
sg83
g4654
sg76
(lp4670
g69
(g70
g71
NtRp4671
(dp4672
g74
(dp4673
g82
I5
ssg83
g4667
sg76
(lp4674
S'Seniorproject'
p4675
asbasbasbag69
(g85
g71
NtRp4676
(dp4677
g74
(dp4678
sg83
g3145
sg76
(lp4679
g69
(g90
g71
NtRp4680
(dp4681
g74
(dp4682
g94
g95
ssg83
g4676
sg76
(lp4683
g2389
asbag69
(g90
g71
NtRp4684
(dp4685
g74
(dp4686
g101
g102
ssg83
g4676
sg76
(lp4687
S':'
asbag69
(g90
g71
NtRp4688
(dp4689
g74
(dp4690
sg83
g4676
sg76
(lp4691
g69
(g70
g71
NtRp4692
(dp4693
g74
(dp4694
g82
I5
ssg83
g4688
sg76
(lp4695
g2402
asbasbasbag69
(g85
g71
NtRp4696
(dp4697
g74
(dp4698
sg83
g3145
sg76
(lp4699
g69
(g90
g71
NtRp4700
(dp4701
g74
(dp4702
g94
g95
ssg83
g4696
sg76
(lp4703
S'view'
p4704
asbag69
(g90
g71
NtRp4705
(dp4706
g74
(dp4707
g101
g102
ssg83
g4696
sg76
(lp4708
S':'
asbag69
(g90
g71
NtRp4709
(dp4710
g74
(dp4711
sg83
g4696
sg76
(lp4712
g69
(g70
g71
NtRp4713
(dp4714
g74
(dp4715
g82
I5
ssg83
g4709
sg76
(lp4716
S'default/user.html'
p4717
asbasbasbasbasbsS'locals'
p4718
(dp4719
g4
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p4720
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ...turn html\\n\\nresponse._vars=response._caller(user)\\n'"
p4721
sssS'traceback'
p4722
S'Traceback (most recent call last):\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 204, in restricted\n    ccode = compile2(code,layer)\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 189, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py", line 119\n    "secret"="ad86826c3187eb4d"\n            ^\nSyntaxError: invalid syntax\n'
p4723
s.