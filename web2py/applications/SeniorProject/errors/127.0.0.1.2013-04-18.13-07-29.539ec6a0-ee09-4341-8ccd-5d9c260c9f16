(dp1
S'output'
p2
S"<type 'exceptions.NameError'> global name 'xredirect' is not defined"
p3
sS'layer'
p4
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n#Import necessary modules\nimport flickrapi\nimport appy\nfrom datetime import datetime\n\nimport mechanize\nimport cookielib\n#Flickr API keys\nKEY = \'614fd86a34a00d38293c7e803d14c3ab\'\nSECRET_KEY = \'ad86826c3187eb4d\'\nUSER_ID = \'93142072@N05\'\n\n#Create the static links to be passed in to the views\nheader = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\')), _href=URL(\'default\',\'index\')), _id="header")\nheader_archived = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\'))), _id="header")\nfooter = DIV(A("Home Page", _href=URL(\'default\',\'index\')), TD("------"), A("Log out", _href=URL(\'default\',\'user\', args=\'logout\')), _id="footer")\ncss = "/SeniorProject/static/css/bluestyle.css"\n    \nif not db(db.PhotoToken).isempty():\n    tok = (db.PhotoToken(db.PhotoToken.id>0)).token\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #create a flickr object\nelse:\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n\n#Returns the current user (object) of the site\ndef getUser():\n    user = None\n    if auth.user != None:\n        user = db(db.auth_user.id == auth.user.id).select().first()\n    return user\n\n\nif auth.user != None:\n    record = auth.user.id     #Gets the info for the current user\n    myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\nelse: \n    myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n#Returns the form that will be displayed when the "My Profile" tab is clicked (the paratmeter passed in is a user object)\ndef getProfileFormForUser(user):\n    if user != None:        #We will display the form with the user\'s current information filled in\n        record = user.id    #Gets the info for the current user    \n        myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    else:                   #Display the form with no fields filled in \n        myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    return myProfileForm\n\ndef getProjectsForUser(user):\n    projects = []\n    if user != None and user.projects != None:\n        if auth.has_membership(user_id=user.id, role="Admin"):\n            projects = db(db.Project.archived == False).select()\n        else:\n            for item in user.projects:\n                rows = db((db.Project.archived == False) & (db.Project.projNum == item)).select()\n                if len(projects) ==0:\n                    projects = rows\n                else:\n                    projects= projects & rows   \n    return projects\n\n#Checks if the current token is valid; if not, then redirects to flickr to be authenticated and get a token\ndef setUpFlickrStuff():   \n    if not db(db.PhotoToken).isempty():                                #We already have a PhotoToken, so use the token when creating a flickr object\n        tok = (db.PhotoToken(db.PhotoToken.id > 0)).token              #Get the token from the database\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #Create a flickr object\n    else:\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n    \n    if not db(db.PhotoToken).isempty():\n        #We have a token, but it might not be valid\n        #Check the token. If there was an error, then delete the token from the database\n        try:\n            flickr.auth_checkToken() \n        except flickrapi.FlickrError:\n            db(db.PhotoToken.id > 0).delete()\n    if db(db.PhotoToken).isempty():                 #We don\'t have the token yet, or it was deleted because it wasn\'t valid\n        if request.vars.frob:                       #If the frob is in the request (coming back from being authenticated by flickr)\n            db.PhotoToken[0] = {"token" : flickr.get_token(request.vars.frob)}    #Insert a new row into the database with the new token\n        else:\n            url = flickr.web_login_url(\'write\')     #Get the url to go to in order to authenticate\n            br = mechanize.Browser()\n            # Browser options\n            br.set_handle_equiv(True)\n            br.set_handle_gzip(True)\n            br.set_handle_redirect(True)\n            br.set_handle_referer(True)\n            br.set_handle_robots(False)\n\n            # Cookie Jar\n            cj = cookielib.LWPCookieJar()\n            br.set_cookiejar(cj)\n    #Returns all the non-archived projects the specified user is associated with (the parameter passed in is a user object)\n\n\n            # Follows refresh 0 but not hangs on refresh > 0\n            br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n            r = br.open(url)\n            br.select_form("login_form")\n            br.form["login"]="alyssealyssetest"\n            br.form["passwd"]="finholt1"\n            br.find_control(".persistent").items[0].selected=True\n            br.submit()      \n\n    thing =flickr.sign({\n        "api_key":"f8525c74b1f8dcd19791a39cbd947dd0",\n        "photo_id":"8655391465",\n        "auth_token":"72157632878384274-4abc077968f36490"  \n\n    })  \n                            #Redirect to that website\n            \n            \n#Do all the set-up/initializing that is necessary for using the site (calling the above functions)   \nuser = getUser()                            #Get the current user of the site\nprojects = getProjectsForUser(user)         #Get the projects that the user is associated with\nmyProfileForm = getProfileFormForUser(user) #Get the form for the "My Profile" tab\nsetUpFlickrStuff()                          #Make sure all the flickr stuff is good to go (make sure we\'re authenticated)\n\n\n#Called when a new photoForm is submitted (called from showform when the photoForm is accepted)\ndef uploadPhotoToFlickr(photoForm):\n    #Get the info from the submitted photo form\n    photoWeb2pyId = photoForm.vars.id\n    projNum = photoForm.vars.projectNum\n    title = photoForm.vars.title\n    descr = photoForm.vars.description\n    name = "applications/SeniorProject/uploads/" + photoForm.vars.photo\n    \n    #Upload the photo to flickr and get the id of the photo in order to construct the url of the photo\n    idElement = flickr.upload(filename=name, title=title, description=descr)\n    id = idElement.find(\'photoid\').text\n    flickrUrl =  "http://www.flickr.com/photos/"+USER_ID+"/"+str(id)+"/"  \n\n    #Delete the corresponding row in our database (because we don\'t want to store the actual photo no our server)\n    db(db.Photos.id == photoWeb2pyId).delete()\n    \n    #Create a new row in our database with all the same info as the deleted row, but without the photo file\n    db.Photos.insert(projectNum=projNum, flickrURL=flickrUrl, title=title, description=descr)\n\n#Returns a dictionary used by the view default/index.html (which is the home screen)\n@auth.requires_login()\ndef index():\n    #response.flash = "Welcome " + auth.user.first_name + "!"    #Welcome the user to the site\n    response.flash = "Erik Smellz"\n    projectNums = []                                            #Get the project numbers of all the projects the user is associated with\n    for project in projects:\n        projectNums.append(project.projNum) \n    \n    #Get all the newsfeed entries for the user\'s projects, ordering by time created (most recent entry listed first)\n    entries = db(db.NewsFeed.projectNum.belongs(projectNums)).select(orderby=~db.NewsFeed.created_on)\n    \n    if entries == None or len(entries) == 0:                    #If there aren\'t any entries, set entries to None (this is checked in the View)\n        entries = None\n    elif len(entries) > 20:\n        entries = entries[0:20]                                 #Only display the first 20 newsfeed entries on the homescreen\n    \n    return dict(projects=projects,\n                myProfileForm=myProfileForm,\n                header=header,\n                footer=footer,\n                css=css,\n                entries=entries)\n\n#Created by web2py\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth(), header=header, footer=footer, css=css)\n\n#Created by web2py\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n#Created by web2py\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n#Created by web2py\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud(), css=css, footer=footer)\n\n#This is called when an admin clicks "Create User". It returns a dictionary used by the view default/regiser.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef register():\n    form = SQLFORM(db.auth_user)                                            #Create a form with the fields for a user\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.first_name) + \' created as user\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a user\'\n       \n    if form.validate():                                                     #Add the new user with membership in the General group (rather than Admin)\n        admin_user = auth.user\n        auth.get_or_create_user(form.vars)\n        auth.add_membership(auth.id_group(role="General"),auth.user_id)\n        auth.user = admin_user\n        redirect(URL(\'default\',\'register\'))                                 #Redirect to the same screen so the admin can create more users if needed\n        \n    return dict(form=form, header=header, footer=footer, css=css)\n\n#This is called when an admin clicks "User Permissions". It returns a dictionary used by the view default/changepermissions.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef changepermissions():\n     #Get all the users in alphabetical order, except the current user (don\'t want a user to change his own permissions)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)     \n     #Represent the user\'s id as a dropdown with the values of Admin or General, with the current value as the user\'s current group membership\n     db.auth_user.id.represent = lambda id: SELECT(getUserRole(id), XML(getOtherRoles(id)), _name=\'%i\'%id) \n     #Create a table with all the users and their current memberships\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Change Permission","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\'))\n \n     if table.accepts(request.vars): \n        for item in request.vars.keys():               #For each user selected..\n            if item.isdigit():\n                if not auth.has_membership(user_id=int(item), role=request.vars[item]):\n                    if auth.has_membership(user_id=int(item), role=getUserRole(int(item))): #in case they are in their individual user group. We should only delete them from the group we are in if they are switching from General to Admin or vice versa.\n                        auth.del_membership(auth.id_group(role=getUserRole(int(item))),int(item))\n                    auth.add_membership(auth.id_group(role=request.vars[item]),int(item)) #Add the user\'s membership\n                    \n        session.flash = \'Permissions changed\'\n        redirect(URL(\'default\',\'changepermissions\'))    #Redirect to the same screen so the admin can see the current permission level of every user\n        \n     elif table.errors:\n         session.flash = \'An error has occured\'\n     else:\n         session.flash = \'Modify user permissions\'\n     \n     return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Add Users to Projects". It returns a dictionary used by the view default/addtoproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef addtoproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)        #Get all the users of the site (in alphabetical order)\n    #Represent the user\'s id as checkboxes of possible projects for the user to be added to\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getAllProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Add To","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\')) \n    \n    if table.accepts(request.vars):\n        for userid in request.vars.keys():           #For each user selected..\n            if userid.isdigit():\n                projectList = db(db.auth_user.id == int(userid)).select().first().projects\n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projectList.append(int(item))\n                else:\n                    projectList.append(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projectList)\n        redirect(URL(\'default\',\'addtoproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete Users from Projects". It returns a dictionary used by the view default/deletefromproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef deletefromproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)    #Get all the users of the site (in alphabetical order)\n    #Represents the user\'s id as checkboxes of all the user\'s associated projects\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getUsersProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove From","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\')) \n   \n    if table.accepts(request.vars): \n        for userid in request.vars.keys():                                    #For each user selected..\n            if userid.isdigit():\n                user = db(db.auth_user.id ==int(userid)).select().first()\n                projects = user.projects\n                \n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projects.remove(int(item))\n                else:\n                    projects.remove(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projects)\n        redirect(URL(\'default\',\'deletefromproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete User". It returns a dictionary used by the view default/deleteusers.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef deleteusers():\n     #Get all the users on the site in alphabetical order, except the current user (don\'t want someone to delete himself)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)  \n     db.auth_user.id.represent = lambda id: DIV(id, INPUT (_type=\'checkbox\',_name=\'%i\'%id)) #Create a checkbox for each user\n     #Create a table of the information\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove User","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\'))\n     \n     if table.process().accepted:\n       response.flash = str(request.vars.first_name) + \' deleted as user\'\n     elif table.errors:\n       response.flash = \'Form has errors\'\n     else:\n       response.flash = \'Select users to delete\'\n     \n     if table.accepts(request.vars): \n        for item in request.vars.keys():                     #For each user selected..\n            if item.isdigit():\n                db(db.auth_user.id == int(item)).delete()    #Delete the user that was selected\n                \n        session.flash = \'User deleted\'\n        redirect(URL(\'default\',\'deleteusers\'))               #Redirect back to the same screen\n\n     return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Add Project". It returns a dictionary used by the view default/createproject.html \n@auth.requires_login()    \n@auth.requires_membership(\'Admin\')\ndef createproject():\n    #Create a form for inserting a new project into the database\n    form = SQLFORM(db.Project, labels={\'projNum\':\'Project Number\', \'openDate\':\'Open Date\', \'closedDate\':\'Closed Date\'})\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.name) + \' has been created\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a project\'\n       \n    return dict(form=form, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Manage Projects". It returns a dictionary used by the view default/manageprojects.html\n@auth.requires_login()   \n@auth.requires_membership(\'Admin\')\ndef manageprojects():\n    table = None\n    rows = db(db.Project.archived == False).select() #Get all the non-archived projects\n    \n    if len(rows) == 0:\n        table = "There are currently no non-archived projects"\n        \n    else:   #There is at least one on-going project\n        db.Project.id.represent = lambda id: DIV(id, INPUT(_type=\'checkbox\',_name=\'%i\'%id)) #Represent the project id as a checkbox\n        #Create a table of all the non-archived projects, each with a checkbox for the option to archive\n        table = FORM(SQLTABLE(rows, columns=["Project.id","Project.name","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.id":"Archive","Project.name":"Project Name","Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}), INPUT(_type=\'submit\'))\n        \n        table["_onsubmit"] = "return confirm(\'Are you sure you want to archive this project?\');"\n        \n        if table.process().accepted:\n           response.flash = str(request.vars.name) + \' has been archived\'\n        elif table.errors:\n           response.flash = \'Form has errors\'\n        else:\n           response.flash = \'Select a project to archive\'\n        \n        if table.accepts(request.vars):\n            for pID in request.vars.keys():                             #For each project that we want to archive..\n                if pID.isdigit():\n                    db(db.Project.id == int(pID)).update(archived=True) #Set archived=True for the project and update the database\n                    \n            redirect(URL(\'default\',\'manageprojects\'))                   #Redirect to the same screen\n            \n    return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Archived Projects". It returns a dictionary used by the view default/archiveprojects.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef archiveprojects():\n    table = None\n    rows = db(db.Project.archived == True).select()                #Get all the archived projects\n    \n    if len(rows) == 0:\n        table = "There are no projects that have been achived."\n        \n    else:                                                          #There is at least one archived project\n        #This column contains the option to view a project when "View" is clicked. It opens a new tab to display the selected project                                                      \n        extracolumn = [{\'label\':\'View Archived Project\', #label of the entirecolumn\n                        \'class\': \'\', #class name of the header\n                        \'width\': \'\', #width in pixels or %\n                        \'content\': lambda row, rc: A("View", _href=URL(\'default\',\'viewArchive\', args=row.id), _target=\'new\'), #what goes in each row\n                        \'selected\': False #aggregate class selected to this column\n                       }]\n        #Create a table of the archived projects, with the rightmost column containing the extracolumn\n        table = SQLTABLE(rows, columns=["Project.name","Project.owner","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.name":"Project Name", "Project.owner":"Owner", "Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}, extracolumns=extracolumn)\n    \n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "View" on the Archived Projects screen. It returns a dictionary used by the view default/viewArchive.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef viewArchive():\n    #Get the archived project that the user wants to view (the "archivedprojects" method puts the project id in args)\n    project = db(db.Project.id == request.args(0)).select().first()  \n    return dict(project=project, header=header_archived, css=css)\n\n#This is called when a user clicks on "News Feed" for a project in the sidebar. It returns a dictionary used by the view default/newsfeed.html\n@auth.requires_login()\ndef newsfeed():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Create an SQLFORM for the user to make a new status update\n    form = SQLFORM(db.NewsFeed, labels={\'description\':\'New Status Update\'}, fields=[\'description\'])\n    form.vars.projectNum = request.vars.projectNum                        #Initialize the project number to be the current project\'s number\n    form.vars.type = "human"                                              #Initialize the type to be" human"\n    form.vars.created_on = datetime.today()                               #Initialize the time created to be the current date and time\n    form.vars.creator = auth.user.first_name + " " + auth.user.last_name  #Initiaize the creator to be the current user\n    \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Status created successfully\')\n        elif form.errors:\n            response.flash = \'Form has errors\'\n                \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on) \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None\n        \n    return dict(form=form, entries=entries, fullTable=True, project=project, projects=projects, myProfileForm=myProfileForm, header=header, footer=footer, css=css)\n\n#This is called when a user clicks on "News Feed" on an archived project\'s sidebar. It returns a dictionary used by the view default/newsfeedarchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef newsfeedarchived():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on)   \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None   \n        \n    return dict(entries=entries, fullTable=True, project=project, header=header_archived, css=css)  \n\n#This is called when a user clicks on any of the tabs (to upload/generate a new document). It returns a dictionary used by the view default/showform.html\n@auth.requires_login() \ndef showform():\n    \n    displayForm = request.vars.displayForm                                       #Get the type of form we want to display\n    form = None                                                                  #The SQLFORM that we will display\n    projNum = request.vars.projectNum\n    if type(projNum) is list:\n        projNum = projNum[-1]\n    import tkMessageBox\n    tkMessageBox.showinfo(title="Greetings", message=str(projNum)) \n\n    if displayForm == "CCD":\n        #Create a form with all the CCD fields\n        form = SQLFORM(db.CCD, labels={\'ccdNum\':\'CCD #\',\'projectNum\': "Project #"}) \n        rows = db(db.CCD.projectNum == str(projNum)).select()    #Get all the CCD\'s for the current project\n        form.vars.ccdNum = len(rows) + 1               #Initialize the form\'s CCD number to be one more than the current number of CCDs               \n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "RFI":\n        #Create a dropdown of all the users\' names for the Request Referred To field\n        db.RFI.reqRefTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a form with the RFI fields specified by the fields parameter\n        form = SQLFORM(db.RFI, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\'}, fields=[\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'sheetName\', \'grids\', \'specSection\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\'])\n        \n        currentProj = db(db.Project.projNum == str(projNum)).select().first()\n        rows = db(db.RFI.projectNum == str(projNum)).select()    #Get all the RFI\'s for the current project       \n        form.vars.rfiNum = len(rows) + 1               #Initialize the form\'s RFI number to be one more than the current number of RFIs\n        form.vars.requestBy = auth.user.first_name + " " + auth.user.last_name #Initialize the form\'s RequestBy field to be the current user\n        form.vars.statusFlag = "Outstanding"           #Set the status flag (this field isn\'t displayed on the screen)\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number \n        form.vars.projectName = currentProj.name       #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n                \n    elif displayForm == "Submittal":\n        #Create a dropdown for the submittal type\n        db.Submittal.subType.requires = IS_IN_SET([\'Samples\',\'Shop Drawing\',\'Product Data\'])\n        #Create a dropdown of all the users\' names for the Assigned To field\n        db.Submittal.assignedTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a dropdown for the status flag\n        db.Submittal.statusFlag.requires = IS_IN_SET([\'Approved\',\'Resubmit\',\'Approved with Comments\',\'Submitted for Review\'])\n        #Create a form with all the submittal fields\n        form = SQLFORM(db.Submittal, labels={\'statusFlag\':\'Status Flag\', \'projectNum\':\'Project Number\', \'subType\':\'Submittal Type\', \'sectNum\':\'Section Number\',\'assignedTo\':\'Assigned to\'}) \n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "ProposalRequest":  \n        #Create a form with the Proposal Request fields specified by the fields parameter   \n        form = SQLFORM(db.ProposalRequest, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[ \'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\'])\n        \n        currentProj = db(db.Project.projNum == str(projNum)).select().first()\n        rows = db(db.ProposalRequest.projectNum == str(projNum)).select() #Get all the ProposalRequests for the current project\n        form.vars.reqNum = len(rows) + 1               #Initialize the request number to be one more than the current number of proposal requests\n        form.vars.statusFlag = "Open"                  #Set the status flag (this field isn\'t displayed on the screen)       \n        form.vars.creator = auth.user.id               #Initialize the creator to be the current user\'s id (this field also isn\'t displayed)\n        form.vars.projectNum = projNum              #Initialize the form\'s project number to be the current project\'s number\n        form.vars.projectName = currentProj.name   #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n        \n    elif displayForm == "Proposal":\n        propReqs = db(db.ProposalRequest.projectNum == str(projNum)).select()\n        propNumList = []\n        for propReq in propReqs:\n            propNumList.append(propReq.reqNum)                   #Get all the Proposal Request numbers for the project\n        db.Proposal.propReqRef.requires = IS_IN_SET(propNumList) #Create a dropdown for the Proposal Request Reference #\n        #Create a form with all the Proposal fields \n        form = SQLFORM(db.Proposal, labels={\'propNum\':\'Proposal #\', \'propReqRef\':\'Proposal Request Reference #\', \'projectNum\':\'Project Number\', \'propDate\':\'Proposal Date\'})\n        \n        rows = db(db.Proposal.projectNum == str(projNum)).select() #Get all the Proposals for the current project\n        form.vars.propNum = len(rows) + 1              #Initialize the proposal number to be one more than the current number of proposals\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "MeetingMinutes":\n        #Create a form with all the MeetingMinutes fields\n        form = SQLFORM(db.MeetingMinutes, labels={\'projectNum\':\'Project Number\',\'meetDate\':\'Meeting Date\'})\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "Photo": \n        #Create a form with the Photo fields specified by the fields parameter                     \n        form = SQLFORM(db.Photos, labels={\'projectNum\':\'Project Number\', \'title\':\'Title\', \'description\':\'Description\', \'photo\':\'Photo\'}, fields = [\'projectNum\',\'title\',\'description\',\'photo\'])\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Form accepted\')\n            if displayForm == "Photo":    #If the form submitted is a photo form, we need to upload it to flickr and delete the photo from our database\n                uploadPhotoToFlickr(form)\n            elif displayForm == "RFI":    #If the form submitted is an RFI form, we need to put the name of person the RFI is referred to instead of the id\n                reqUser = db(db.auth_user.id == form.vars.reqRefTo).select().first()\n                row = db(db.RFI.id == form.vars.id).select().first()\n                row.update_record(reqRefTo = reqUser.first_name + " " + reqUser.last_name)\n            elif displayForm == "Submittal": #If the form submitted is a Submittal, we need to put the name of person it is assigned to instead of the id\n                assignTo = db(db.auth_user.id == form.vars.assignedTo).select().first()\n                row = db(db.Submittal.id == form.vars.id).select().first()\n                row.update_record(assignedTo= assignTo.first_name + " " + assignTo.last_name)\n            \n            #Now create a new newsfeed update noting the new submission\n            if displayForm == "MeetingMinutes":\n                displayForm = "Plan for World Domination"\n            description = "A new " + displayForm + " has been added."\n            db.NewsFeed.insert(projectNum=form.vars.projectNum, type="document", created_on=datetime.today(), description=description, creator=auth.user.first_name + " " + auth.user.last_name)\n            db.commit()\n            \n        elif form.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n        xredirect(URL("default","index"))\n    return dict(displayForm=displayForm,\n                form=form,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                footer=footer,\n                header=header,\n                css=css,\n                projNum=projNum)\n\n#This is called when a user clicks on a categry in an archived project\'s sidebar. It returns a dictionary used by the view default/formtablearchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\') \ndef formtablearchived():\n    formType = request.vars.formType                                              #Get the type of table to display\n    project =  db(db.Project.projNum == request.vars.projectNum).select().first() #Get the archived project that is currently being viewed\n    table = None                                                                  #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                              #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()     #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]           #Set the CCD\'s file URL\n        #Create a table of the CCDs, displaying the values given by the columns parameter\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'],headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"},upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()     #Get all the RFIs for the current project\n        #Represent the RFI number as a link to view the RFI\n        db.RFI.rfiNum.represent = lambda rfiNum: A(str(rfiNum), _href=URL("default","create_odt",args=[int(rfiNum)]),_target="_blank")\n        #Create a table of the RFIs\n        table = SQLTABLE(rows, _width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseDate"], \n            headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To","RFI.responseDate":"Response Date"})\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select() #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]   #Set the Submittal\'s file URL\n        #Create a table of the Submittals \n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.subType","Submittal.sectNum","Submittal.submittal"], \n            headers={"Submittal.assignedTo":"Assigned To","Submittal.subType":"Type","Submittal.sectNum":"Section Number",\n            "Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.sentTo","ProposalRequest.propDate"],\n            headers={"ProposalRequest.reqNum":"Request Number","ProposalRequest.amendNum":"Amendment Number",\n            "ProposalRequest.sentTo":"Sent To","ProposalRequest.propDate":"Proposal Request Date"})\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()  #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]             #Set the Proposal\'s file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"], \n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select() #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the Meeting Minute\'s file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"], \n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()         #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There were no documents uploaded for this project section."\n        fullTable = False\n\n    return dict(formType=formType,\n                project=project,\n                table=table,\n                header=header_archived,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on a category for a project in the sidebar. It returns a dictionary used by the view default/formtable.html\n@auth.requires_login()\ndef formtable():\n    formType = request.vars.formType                                                     #Get the type of table to display        \n    table = None                                                                         #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                                     #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()            #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the CCD file\'s URL\n        #myextracolumns = [{\'label\': \'CCD Thumbnail(for testing)\',\'class\':\'\',\'selected\':False, \'width\':\'\', \n        #    \'content\': lambda row, rc: IMG(_width="40",_height="40",_src=URL(\'default\',\'download\',args=row.file))}]\n        #Create a table of the CCDs\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'], headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()            #Get all the RFIs for the current project\n        #Create an extra column. If the user is the one who is supposed to reply to the RFI, then have a link in the column for the user to do so\n        extracolumn = [{\'label\':\'Reply to RFI\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Reply", _href=URL(\'default\',\'replyRFI\',args=row.id)) if auth.user.first_name +" " +\n                     auth.user.last_name == row.reqRefTo else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the RFIs, adding the extra "Reply to RFI" column on the far right\n        table = SQLTABLE(rows,_width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseBy","RFI.responseDate",\n            "RFI.statusFlag"], headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To",\n            "RFI.responseDate":"Response Date","RFI.responseBy":"Need Response By","RFI.statusFlag":"Status Flag"}, extracolumns=extracolumn)\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select()       #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]         #Set the Submittals\' file URL\n        #Create a table of the Submittals\n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.statusFlag","Submittal.subType","Submittal.sectNum","Submittal.submittal"],\n            headers={"Submittal.assignedTo":"Assigned To","Submittal.statusFlag":"Status Flag","Submittal.subType":"Type",\n            "Submittal.sectNum":"Section Number","Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create an extra column. If the user is the creator of the request, include a link with the option to change the status of the document \n        extracolumn = [{\'label\':\'Change Status\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Change", _href=URL(\'default\',\'changePropReq\',args=row.id)) if auth.user.id == row.creator else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.statusFlag",\n            "ProposalRequest.sentTo","ProposalRequest.propDate"], headers={"ProposalRequest.reqNum":"Request Number",\n            "ProposalRequest.amendNum":"Amendment Number","ProposalRequest.sentTo":"Sent To","ProposalRequest.statusFlag":"Status Flag",\n            "ProposalRequest.propDate":"Proposal Request Date"}, extracolumns=extracolumn)\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()        #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Proposals\' file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"],\n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select()  #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Meeting Minutes\' file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"],\n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()          #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There are no documents uploaded for this project section yet."\n        fullTable = False\n\n    return dict(formType=formType,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                table= table,\n                footer=footer,\n                header=header,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on "Reply to RFI" when on the RFI\'s formtable view. It returns a dictionary used by the view default/replyRFI.html\n@auth.requires_login()\ndef replyRFI():\n    id = request.args(0) #the id of the RFI\n    db.RFI.statusFlag.requires = IS_IN_SET([\'Outstanding\',\'Closed\']) #Make a dropdown for the status flag\n    \n    #Create the SQLFORM, filling in all the previously submitted information\n    replyRfiForm = SQLFORM(db.RFI, id, showid=False, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\', \'reply\':\'Reply\', \'responseDate\':\'Response Date\', \'statusFlag\':\'Status Flag\'}, fields = [\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'specSection\', \'sheetName\', \'grids\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\', \'reply\', \'responseDate\', \'statusFlag\'], _id="replyForm")\n    \n    if replyRfiForm != None:\n        if replyRfiForm.process().accepted:\n            row = db(db.RFI.id == id).select().first() #Get the RFI we\'re replying to\n            \n            #Update the RFI\'s reply and response date (but don\'t save any of the other fields -- want to keep the other fields read-only for this)\n            row.update_record(reply=str(replyRfiForm.vars.reply), responseDate=str(replyRfiForm.vars.responseDate))     \n            db.commit()   \n            \n            session.flash = T(\'RFI Reply Accepted\')  \n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'RFI\', projectNum=str(replyRfiForm.vars.projectNum))))  #Redirect to the RFI table                    \n        \n        elif replyRfiForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(replyRfiForm=replyRfiForm, css=css, header=header, footer=footer)\n\n#This is called when a user clicks on "Change Status" when on the Proposal Request\'s formtable view. It returns a dictionary used by the view default/changePropReq.html\n@auth.requires_login()\ndef changePropReq():\n    id = request.args(0)  #The id of the Proposal Request\n    db.ProposalRequest.statusFlag.requires = IS_IN_SET([\'Open\',\'Closed\'])          #Make a dropdown for the status flag  \n    #Create the SQLFORM, filling in all the previously submitted information\n    changePropReqForm = SQLFORM(db.ProposalRequest, id, showid=False, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'statusFlag\':\'Status\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[\'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\',\'statusFlag\'], _id="changePropReqForm")\n        \n    if changePropReqForm != None:\n        if changePropReqForm.process().accepted:\n            row = db(db.ProposalRequest.id == id).select().first()                 #Get the current Proposal Request\n            row.update_record(statusFlag = str(changePropReqForm.vars.statusFlag)) #Update the Proposal Request with the new status flag      \n            db.commit()   \n            session.flash = T(\'Status Change Accepted\')  \n            #Redirect to the Proposal Request table\n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'ProposalRequest\', projectNum=str(changePropReqForm.vars.projectNum))))                      \n        elif changePropReqForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(changePropReqForm=changePropReqForm, css=css, header=header, footer=footer)  \n\ndef viewPhoto():\n    br = mechanize.Browser()\n    # Browser options\n    br.set_handle_equiv(True)\n    br.set_handle_gzip(True)\n    br.set_handle_redirect(True)\n    br.set_handle_referer(True)\n    br.set_handle_robots(False)\n\n    # Follows refresh 0 but not hangs on refresh > 0\n    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n    r = br.open(request.vars["url"])\n    br.select_form("login_form")\n    br.form["passwd"]="finholt1"\n    import tkMessageBox\n    #tkMessageBox.showinfo(title="Greetings", message=str(br.form))\n    r = br.submit()\n    br.open(request.vars["url"])\n\n\n    \n    redirect(request.vars["url"])        \n\n#This returns a string of the opposite of the user\'s role (either Admin or General)\ndef getOtherRoles(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "General"\n    else:\n        return "Admin"\n\n#This returns a string of the user\'s role (either Admin or General)     \ndef getUserRole(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "Admin"\n    else:\n        return "General"\n\n#This is called by create_odt to get a dictionay of RFI data given the RFI number\ndef get_data(row_id):\n    import MySQLdb\n\n    db = MySQLdb.connect(host="10.24.6.23", user="seniorproj", passwd="web2py2012", db="finholt")\n    cur = db.cursor()\n\n    # Getting the rows from the database\n\n    cur.execute("SELECT * FROM RFI WHERE rfiNum = %s;",(row_id))\n    columns = cur.description\n    row = cur.fetchall()\n\n    dict = {}\n\n    for i in range(len(columns)):\n        dict[columns[i][0]] = row[0][i]\n\n    return dict\n\n#This creates the RFI document for viewing in the browser. It returns a dictionary used by the view default/create_odt.html\ndef create_odt():\n    import subprocess\n    import os\n    import time\n    appy = local_import(\'appy.pod.renderer\')\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'result.odt\')\n    subprocess.Popen("rm " + phpscript, shell=True)\n\n    # giving the program enough time to delete the old result.odt\n    time.sleep(1)\n \n    dictionary = get_data(request.args[0])\n\n    appyDict = {}\n    appyDict[\'rfiNumber\'] = dictionary[\'rfiNum\']\n\n    # Need to add database places for these and then add the dictionary\n    appyDict[\'project\'] = dictionary[\'projectName\']\n    appyDict[\'owner\'] = dictionary[\'owner\']\n\n    appyDict[\'requestBy\'] = dictionary[\'requestBy\']\n\n    dtSent = dictionary[\'dateSent\']\n    if dtSent != None:\n        appyDict[\'DateSent\'] = "%s/%s/%s" % (dtSent.month,dtSent.day,dtSent.year)\n    else:\n        appyDict[\'DateSent\'] = "None"\n\n    appyDict[\'requestReferredTo\'] = dictionary[\'reqRefTo\']\n\n    dtRec = dictionary[\'dateRec\']\n    if dtRec != None:\n        appyDict[\'DateReceived\'] = "%s/%s/%s" % (dtRec.month,dtRec.day,dtRec.year)\n    else:\n        appyDict[\'DateReceived\'] = "None"\n\n    appyDict[\'drawingNum\'] = dictionary[\'drawingNum\']\n\n    appyDict[\'detailNum\'] = dictionary[\'detailNum\']\n\n    appyDict[\'specNum\'] = dictionary[\'specSection\']\n    appyDict[\'sheetName\'] = dictionary[\'sheetName\']\n\n    appyDict[\'grids\'] = dictionary[\'grids\']\n    appyDict[\'sectionPage\'] = dictionary[\'sectionPage\']\n\n    appyDict[\'rfiDescription\'] = dictionary[\'description\']\n\n    appyDict[\'contractorSuggestion\'] = dictionary[\'suggestion\']\n\n    appyDict[\'reply\'] = dictionary[\'reply\']\n\n    appyDict[\'responseBy\'] = dictionary[\'responseBy\']\n\n    dtResp = dictionary[\'responseDate\']\n    if dtResp != None:\n        appyDict[\'responseDate\'] = "%s/%s/%s" % (dtResp.month,dtResp.day,dtResp.year)\n    else:\n        appyDict[\'responseDate\']\n\n    myfile = os.path.join(request.folder, \'static\',\'php\', \'rfiTemplate.odt\')\n    newfile = os.path.join(request.folder, \'static\',\'php\', \'result.odt\')\n    \n    renderer = appy.Renderer(myfile, appyDict, newfile)\n    renderer.run()\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'rfi.php\')\n    proc = subprocess.Popen("php " + phpscript, shell=True, stdout=subprocess.PIPE)\n    resp = proc.stdout.read()\n\n    return dict(html=HTML(\'\',XML(resp)))\n\n#Returns the html needed for the checkboxes on the addtoproject screen \ndef getAllProjectsHtml(id):\n    html=\'\'\n    projects = db(db.Project.archived == False).select()  #Get all the current non-archived projects\n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n\n    for row in projects:                                  #Find all the projects that the user is not already associated with\n        if user.projects != None:\n            if row.projNum not in user.projects:\n                html +=  \'<input value="\'+str(row.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.projNum)+"</br>"\n        else:\n            html +=  \'<input value="\'+str(row.id)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.id)+"</br>"\n    \n    if html ==\'\':                                         #The user is already associated with all the projects\n        html = "<p>In all projects</p>"\n        \n    return html \n\n#Returns the html needed for the checkboxes on the deletefromproject screen\ndef getUsersProjectsHtml(id):\n    html = \'\'    \n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n    \n    if user.projects != None and len(user.projects) >= 1: #Make a checkbox for all the projects that the user is associatewith\n        for projId in user.projects:\n            project = db((db.Project.archived == False) & (db.Project.projNum == projId)).select().first()\n            html +=  \'<input value="\'+str(project.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(project.projNum)+"</br>"\n    else:\n        html = "<p>Not on any projects</p>"\n        \n    return html\n\nresponse._vars=response._caller(showform)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.NameError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.NameError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.NameError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.NameError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.NameError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.NameError object>'
p23
sS'args'
p24
S'("global name \'xredirect\' is not defined",)'
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.NameError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.NameError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.NameError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.NameError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.NameError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.NameError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.NameError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.NameError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.NameError object>'
p47
sS'__doc__'
p48
S"'Name not found globally.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.NameError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"global name 'xredirect' is not defined"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'SeniorProject'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g24
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
sbasbasbasbag57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g67
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
g82
g83
ssg71
g147
sg64
(lp154
S'body'
p155
asbag57
(g78
g59
NtRp156
(dp157
g62
(dp158
g89
g90
ssg71
g147
sg64
(lp159
S':'
asbag57
(g78
g59
NtRp160
(dp161
g62
(dp162
sg71
g147
sg64
(lp163
g57
(g58
g59
NtRp164
(dp165
g62
(dp166
g70
I5
ssg71
g160
sg64
(lp167
S'<cStringIO.StringO object at 0x10c34f2d0>'
p168
asbasbasbag57
(g73
g59
NtRp169
(dp170
g62
(dp171
sg71
g67
sg64
(lp172
g57
(g78
g59
NtRp173
(dp174
g62
(dp175
g82
g83
ssg71
g169
sg64
(lp176
S'client'
p177
asbag57
(g78
g59
NtRp178
(dp179
g62
(dp180
g89
g90
ssg71
g169
sg64
(lp181
S':'
asbag57
(g78
g59
NtRp182
(dp183
g62
(dp184
sg71
g169
sg64
(lp185
g57
(g58
g59
NtRp186
(dp187
g62
(dp188
g70
I5
ssg71
g182
sg64
(lp189
S'127.0.0.1'
p190
asbasbasbag57
(g73
g59
NtRp191
(dp192
g62
(dp193
sg71
g67
sg64
(lp194
g57
(g78
g59
NtRp195
(dp196
g62
(dp197
g82
g83
ssg71
g191
sg64
(lp198
S'controller'
p199
asbag57
(g78
g59
NtRp200
(dp201
g62
(dp202
g89
g90
ssg71
g191
sg64
(lp203
S':'
asbag57
(g78
g59
NtRp204
(dp205
g62
(dp206
sg71
g191
sg64
(lp207
g57
(g58
g59
NtRp208
(dp209
g62
(dp210
g70
I5
ssg71
g204
sg64
(lp211
S'default'
p212
asbasbasbag57
(g73
g59
NtRp213
(dp214
g62
(dp215
sg71
g67
sg64
(lp216
g57
(g78
g59
NtRp217
(dp218
g62
(dp219
g82
g83
ssg71
g213
sg64
(lp220
S'cookies'
p221
asbag57
(g78
g59
NtRp222
(dp223
g62
(dp224
g89
g90
ssg71
g213
sg64
(lp225
S':'
asbag57
(g78
g59
NtRp226
(dp227
g62
(dp228
sg71
g213
sg64
(lp229
g57
(g58
g59
NtRp230
(dp231
g62
(dp232
g70
I5
ssg71
g226
sg64
(lp233
g57
(g66
g59
NtRp234
(dp235
g62
(dp236
g70
I4
ssg71
Nsg64
(lp237
g57
(g73
g59
NtRp238
(dp239
g62
(dp240
sg71
g234
sg64
(lp241
g57
(g78
g59
NtRp242
(dp243
g62
(dp244
g82
g83
ssg71
g238
sg64
(lp245
S'session_id_admin'
p246
asbag57
(g78
g59
NtRp247
(dp248
g62
(dp249
g89
g90
ssg71
g238
sg64
(lp250
S':'
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
sg71
g238
sg64
(lp254
g57
(g58
g59
NtRp255
(dp256
g62
(dp257
g70
I4
ssg71
g251
sg64
(lp258
g57
(g66
g59
NtRp259
(dp260
g62
(dp261
g70
I3
ssg71
Nsg64
(lp262
g57
(g73
g59
NtRp263
(dp264
g62
(dp265
sg71
g259
sg64
(lp266
g57
(g78
g59
NtRp267
(dp268
g62
(dp269
g82
g83
ssg71
g263
sg64
(lp270
S'comment'
p271
asbag57
(g78
g59
NtRp272
(dp273
g62
(dp274
g89
g90
ssg71
g263
sg64
(lp275
S':'
asbag57
(g78
g59
NtRp276
(dp277
g62
(dp278
sg71
g263
sg64
(lp279
g57
(g58
g59
NtRp280
(dp281
g62
(dp282
g70
I3
ssg71
g276
sg64
(lp283
S''
asbasbasbag57
(g73
g59
NtRp284
(dp285
g62
(dp286
sg71
g259
sg64
(lp287
g57
(g78
g59
NtRp288
(dp289
g62
(dp290
g82
g83
ssg71
g284
sg64
(lp291
S'domain'
p292
asbag57
(g78
g59
NtRp293
(dp294
g62
(dp295
g89
g90
ssg71
g284
sg64
(lp296
S':'
asbag57
(g78
g59
NtRp297
(dp298
g62
(dp299
sg71
g284
sg64
(lp300
g57
(g58
g59
NtRp301
(dp302
g62
(dp303
g70
I3
ssg71
g297
sg64
(lp304
S''
asbasbasbag57
(g73
g59
NtRp305
(dp306
g62
(dp307
sg71
g259
sg64
(lp308
g57
(g78
g59
NtRp309
(dp310
g62
(dp311
g82
g83
ssg71
g305
sg64
(lp312
S'expires'
p313
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
g89
g90
ssg71
g305
sg64
(lp317
S':'
asbag57
(g78
g59
NtRp318
(dp319
g62
(dp320
sg71
g305
sg64
(lp321
g57
(g58
g59
NtRp322
(dp323
g62
(dp324
g70
I3
ssg71
g318
sg64
(lp325
S''
asbasbasbag57
(g73
g59
NtRp326
(dp327
g62
(dp328
sg71
g259
sg64
(lp329
g57
(g78
g59
NtRp330
(dp331
g62
(dp332
g82
g83
ssg71
g326
sg64
(lp333
S'httponly'
p334
asbag57
(g78
g59
NtRp335
(dp336
g62
(dp337
g89
g90
ssg71
g326
sg64
(lp338
S':'
asbag57
(g78
g59
NtRp339
(dp340
g62
(dp341
sg71
g326
sg64
(lp342
g57
(g58
g59
NtRp343
(dp344
g62
(dp345
g70
I3
ssg71
g339
sg64
(lp346
S''
asbasbasbag57
(g73
g59
NtRp347
(dp348
g62
(dp349
sg71
g259
sg64
(lp350
g57
(g78
g59
NtRp351
(dp352
g62
(dp353
g82
g83
ssg71
g347
sg64
(lp354
S'max-age'
p355
asbag57
(g78
g59
NtRp356
(dp357
g62
(dp358
g89
g90
ssg71
g347
sg64
(lp359
S':'
asbag57
(g78
g59
NtRp360
(dp361
g62
(dp362
sg71
g347
sg64
(lp363
g57
(g58
g59
NtRp364
(dp365
g62
(dp366
g70
I3
ssg71
g360
sg64
(lp367
S''
asbasbasbag57
(g73
g59
NtRp368
(dp369
g62
(dp370
sg71
g259
sg64
(lp371
g57
(g78
g59
NtRp372
(dp373
g62
(dp374
g82
g83
ssg71
g368
sg64
(lp375
S'path'
p376
asbag57
(g78
g59
NtRp377
(dp378
g62
(dp379
g89
g90
ssg71
g368
sg64
(lp380
S':'
asbag57
(g78
g59
NtRp381
(dp382
g62
(dp383
sg71
g368
sg64
(lp384
g57
(g58
g59
NtRp385
(dp386
g62
(dp387
g70
I3
ssg71
g381
sg64
(lp388
S''
asbasbasbag57
(g73
g59
NtRp389
(dp390
g62
(dp391
sg71
g259
sg64
(lp392
g57
(g78
g59
NtRp393
(dp394
g62
(dp395
g82
g83
ssg71
g389
sg64
(lp396
S'secure'
p397
asbag57
(g78
g59
NtRp398
(dp399
g62
(dp400
g89
g90
ssg71
g389
sg64
(lp401
S':'
asbag57
(g78
g59
NtRp402
(dp403
g62
(dp404
sg71
g389
sg64
(lp405
g57
(g58
g59
NtRp406
(dp407
g62
(dp408
g70
I3
ssg71
g402
sg64
(lp409
S''
asbasbasbag57
(g73
g59
NtRp410
(dp411
g62
(dp412
sg71
g259
sg64
(lp413
g57
(g78
g59
NtRp414
(dp415
g62
(dp416
g82
g83
ssg71
g410
sg64
(lp417
S'version'
p418
asbag57
(g78
g59
NtRp419
(dp420
g62
(dp421
g89
g90
ssg71
g410
sg64
(lp422
S':'
asbag57
(g78
g59
NtRp423
(dp424
g62
(dp425
sg71
g410
sg64
(lp426
g57
(g58
g59
NtRp427
(dp428
g62
(dp429
g70
I3
ssg71
g423
sg64
(lp430
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp431
(dp432
g62
(dp433
sg71
g234
sg64
(lp434
g57
(g78
g59
NtRp435
(dp436
g62
(dp437
g82
g83
ssg71
g431
sg64
(lp438
S'session_id_seniorproject'
p439
asbag57
(g78
g59
NtRp440
(dp441
g62
(dp442
g89
g90
ssg71
g431
sg64
(lp443
S':'
asbag57
(g78
g59
NtRp444
(dp445
g62
(dp446
sg71
g431
sg64
(lp447
g57
(g58
g59
NtRp448
(dp449
g62
(dp450
g70
I4
ssg71
g444
sg64
(lp451
g57
(g66
g59
NtRp452
(dp453
g62
(dp454
g70
I3
ssg71
Nsg64
(lp455
g57
(g73
g59
NtRp456
(dp457
g62
(dp458
sg71
g452
sg64
(lp459
g57
(g78
g59
NtRp460
(dp461
g62
(dp462
g82
g83
ssg71
g456
sg64
(lp463
g271
asbag57
(g78
g59
NtRp464
(dp465
g62
(dp466
g89
g90
ssg71
g456
sg64
(lp467
S':'
asbag57
(g78
g59
NtRp468
(dp469
g62
(dp470
sg71
g456
sg64
(lp471
g57
(g58
g59
NtRp472
(dp473
g62
(dp474
g70
I3
ssg71
g468
sg64
(lp475
S''
asbasbasbag57
(g73
g59
NtRp476
(dp477
g62
(dp478
sg71
g452
sg64
(lp479
g57
(g78
g59
NtRp480
(dp481
g62
(dp482
g82
g83
ssg71
g476
sg64
(lp483
g292
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g476
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g476
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g452
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
g313
asbag57
(g78
g59
NtRp504
(dp505
g62
(dp506
g89
g90
ssg71
g496
sg64
(lp507
S':'
asbag57
(g78
g59
NtRp508
(dp509
g62
(dp510
sg71
g496
sg64
(lp511
g57
(g58
g59
NtRp512
(dp513
g62
(dp514
g70
I3
ssg71
g508
sg64
(lp515
S''
asbasbasbag57
(g73
g59
NtRp516
(dp517
g62
(dp518
sg71
g452
sg64
(lp519
g57
(g78
g59
NtRp520
(dp521
g62
(dp522
g82
g83
ssg71
g516
sg64
(lp523
g334
asbag57
(g78
g59
NtRp524
(dp525
g62
(dp526
g89
g90
ssg71
g516
sg64
(lp527
S':'
asbag57
(g78
g59
NtRp528
(dp529
g62
(dp530
sg71
g516
sg64
(lp531
g57
(g58
g59
NtRp532
(dp533
g62
(dp534
g70
I3
ssg71
g528
sg64
(lp535
S''
asbasbasbag57
(g73
g59
NtRp536
(dp537
g62
(dp538
sg71
g452
sg64
(lp539
g57
(g78
g59
NtRp540
(dp541
g62
(dp542
g82
g83
ssg71
g536
sg64
(lp543
g355
asbag57
(g78
g59
NtRp544
(dp545
g62
(dp546
g89
g90
ssg71
g536
sg64
(lp547
S':'
asbag57
(g78
g59
NtRp548
(dp549
g62
(dp550
sg71
g536
sg64
(lp551
g57
(g58
g59
NtRp552
(dp553
g62
(dp554
g70
I3
ssg71
g548
sg64
(lp555
S''
asbasbasbag57
(g73
g59
NtRp556
(dp557
g62
(dp558
sg71
g452
sg64
(lp559
g57
(g78
g59
NtRp560
(dp561
g62
(dp562
g82
g83
ssg71
g556
sg64
(lp563
g376
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g556
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g556
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I3
ssg71
g568
sg64
(lp575
S''
asbasbasbag57
(g73
g59
NtRp576
(dp577
g62
(dp578
sg71
g452
sg64
(lp579
g57
(g78
g59
NtRp580
(dp581
g62
(dp582
g82
g83
ssg71
g576
sg64
(lp583
g397
asbag57
(g78
g59
NtRp584
(dp585
g62
(dp586
g89
g90
ssg71
g576
sg64
(lp587
S':'
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
sg71
g576
sg64
(lp591
g57
(g58
g59
NtRp592
(dp593
g62
(dp594
g70
I3
ssg71
g588
sg64
(lp595
S''
asbasbasbag57
(g73
g59
NtRp596
(dp597
g62
(dp598
sg71
g452
sg64
(lp599
g57
(g78
g59
NtRp600
(dp601
g62
(dp602
g82
g83
ssg71
g596
sg64
(lp603
g418
asbag57
(g78
g59
NtRp604
(dp605
g62
(dp606
g89
g90
ssg71
g596
sg64
(lp607
S':'
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
sg71
g596
sg64
(lp611
g57
(g58
g59
NtRp612
(dp613
g62
(dp614
g70
I3
ssg71
g608
sg64
(lp615
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp616
(dp617
g62
(dp618
sg71
g234
sg64
(lp619
g57
(g78
g59
NtRp620
(dp621
g62
(dp622
g82
g83
ssg71
g616
sg64
(lp623
S'session_id_welcome'
p624
asbag57
(g78
g59
NtRp625
(dp626
g62
(dp627
g89
g90
ssg71
g616
sg64
(lp628
S':'
asbag57
(g78
g59
NtRp629
(dp630
g62
(dp631
sg71
g616
sg64
(lp632
g57
(g58
g59
NtRp633
(dp634
g62
(dp635
g70
I4
ssg71
g629
sg64
(lp636
g57
(g66
g59
NtRp637
(dp638
g62
(dp639
g70
I3
ssg71
Nsg64
(lp640
g57
(g73
g59
NtRp641
(dp642
g62
(dp643
sg71
g637
sg64
(lp644
g57
(g78
g59
NtRp645
(dp646
g62
(dp647
g82
g83
ssg71
g641
sg64
(lp648
g271
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g641
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g641
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I3
ssg71
g653
sg64
(lp660
S''
asbasbasbag57
(g73
g59
NtRp661
(dp662
g62
(dp663
sg71
g637
sg64
(lp664
g57
(g78
g59
NtRp665
(dp666
g62
(dp667
g82
g83
ssg71
g661
sg64
(lp668
g292
asbag57
(g78
g59
NtRp669
(dp670
g62
(dp671
g89
g90
ssg71
g661
sg64
(lp672
S':'
asbag57
(g78
g59
NtRp673
(dp674
g62
(dp675
sg71
g661
sg64
(lp676
g57
(g58
g59
NtRp677
(dp678
g62
(dp679
g70
I3
ssg71
g673
sg64
(lp680
S''
asbasbasbag57
(g73
g59
NtRp681
(dp682
g62
(dp683
sg71
g637
sg64
(lp684
g57
(g78
g59
NtRp685
(dp686
g62
(dp687
g82
g83
ssg71
g681
sg64
(lp688
g313
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
g89
g90
ssg71
g681
sg64
(lp692
S':'
asbag57
(g78
g59
NtRp693
(dp694
g62
(dp695
sg71
g681
sg64
(lp696
g57
(g58
g59
NtRp697
(dp698
g62
(dp699
g70
I3
ssg71
g693
sg64
(lp700
S''
asbasbasbag57
(g73
g59
NtRp701
(dp702
g62
(dp703
sg71
g637
sg64
(lp704
g57
(g78
g59
NtRp705
(dp706
g62
(dp707
g82
g83
ssg71
g701
sg64
(lp708
g334
asbag57
(g78
g59
NtRp709
(dp710
g62
(dp711
g89
g90
ssg71
g701
sg64
(lp712
S':'
asbag57
(g78
g59
NtRp713
(dp714
g62
(dp715
sg71
g701
sg64
(lp716
g57
(g58
g59
NtRp717
(dp718
g62
(dp719
g70
I3
ssg71
g713
sg64
(lp720
S''
asbasbasbag57
(g73
g59
NtRp721
(dp722
g62
(dp723
sg71
g637
sg64
(lp724
g57
(g78
g59
NtRp725
(dp726
g62
(dp727
g82
g83
ssg71
g721
sg64
(lp728
g355
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g721
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g721
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I3
ssg71
g733
sg64
(lp740
S''
asbasbasbag57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g637
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
g376
asbag57
(g78
g59
NtRp749
(dp750
g62
(dp751
g89
g90
ssg71
g741
sg64
(lp752
S':'
asbag57
(g78
g59
NtRp753
(dp754
g62
(dp755
sg71
g741
sg64
(lp756
g57
(g58
g59
NtRp757
(dp758
g62
(dp759
g70
I3
ssg71
g753
sg64
(lp760
S''
asbasbasbag57
(g73
g59
NtRp761
(dp762
g62
(dp763
sg71
g637
sg64
(lp764
g57
(g78
g59
NtRp765
(dp766
g62
(dp767
g82
g83
ssg71
g761
sg64
(lp768
g397
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g761
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g761
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I3
ssg71
g773
sg64
(lp780
S''
asbasbasbag57
(g73
g59
NtRp781
(dp782
g62
(dp783
sg71
g637
sg64
(lp784
g57
(g78
g59
NtRp785
(dp786
g62
(dp787
g82
g83
ssg71
g781
sg64
(lp788
g418
asbag57
(g78
g59
NtRp789
(dp790
g62
(dp791
g89
g90
ssg71
g781
sg64
(lp792
S':'
asbag57
(g78
g59
NtRp793
(dp794
g62
(dp795
sg71
g781
sg64
(lp796
g57
(g58
g59
NtRp797
(dp798
g62
(dp799
g70
I3
ssg71
g793
sg64
(lp800
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp801
(dp802
g62
(dp803
sg71
g67
sg64
(lp804
g57
(g78
g59
NtRp805
(dp806
g62
(dp807
g82
g83
ssg71
g801
sg64
(lp808
S'env'
p809
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
g89
g90
ssg71
g801
sg64
(lp813
S':'
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
sg71
g801
sg64
(lp817
g57
(g58
g59
NtRp818
(dp819
g62
(dp820
g70
I5
ssg71
g814
sg64
(lp821
g57
(g66
g59
NtRp822
(dp823
g62
(dp824
g70
I4
ssg71
Nsg64
(lp825
g57
(g73
g59
NtRp826
(dp827
g62
(dp828
sg71
g822
sg64
(lp829
g57
(g78
g59
NtRp830
(dp831
g62
(dp832
g82
g83
ssg71
g826
sg64
(lp833
S'app_folders'
p834
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
g89
g90
ssg71
g826
sg64
(lp838
S':'
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
sg71
g826
sg64
(lp842
g57
(g58
g59
NtRp843
(dp844
g62
(dp845
g70
I4
ssg71
g839
sg64
(lp846
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p847
asbasbasbag57
(g73
g59
NtRp848
(dp849
g62
(dp850
sg71
g822
sg64
(lp851
g57
(g78
g59
NtRp852
(dp853
g62
(dp854
g82
g83
ssg71
g848
sg64
(lp855
S'applications_parent'
p856
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g848
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g848
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I4
ssg71
g861
sg64
(lp868
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p869
asbasbasbag57
(g73
g59
NtRp870
(dp871
g62
(dp872
sg71
g822
sg64
(lp873
g57
(g78
g59
NtRp874
(dp875
g62
(dp876
g82
g83
ssg71
g870
sg64
(lp877
S'cmd_args'
p878
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
g89
g90
ssg71
g870
sg64
(lp882
S':'
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
sg71
g870
sg64
(lp886
g57
(g58
g59
NtRp887
(dp888
g62
(dp889
g70
I4
ssg71
g883
sg64
(lp890
g57
(g66
g59
NtRp891
(dp892
g62
(dp893
g70
I3
ssg71
Nsg64
(lp894
sbasbasbasbag57
(g73
g59
NtRp895
(dp896
g62
(dp897
sg71
g822
sg64
(lp898
g57
(g78
g59
NtRp899
(dp900
g62
(dp901
g82
g83
ssg71
g895
sg64
(lp902
S'cmd_options'
p903
asbag57
(g78
g59
NtRp904
(dp905
g62
(dp906
g89
g90
ssg71
g895
sg64
(lp907
S':'
asbag57
(g78
g59
NtRp908
(dp909
g62
(dp910
sg71
g895
sg64
(lp911
g57
(g58
g59
NtRp912
(dp913
g62
(dp914
g70
I4
ssg71
g908
sg64
(lp915
S"<Values at 0x1019a7440: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p916
asbasbasbag57
(g73
g59
NtRp917
(dp918
g62
(dp919
sg71
g822
sg64
(lp920
g57
(g78
g59
NtRp921
(dp922
g62
(dp923
g82
g83
ssg71
g917
sg64
(lp924
S'db_sessions'
p925
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
g89
g90
ssg71
g917
sg64
(lp929
S':'
asbag57
(g78
g59
NtRp930
(dp931
g62
(dp932
sg71
g917
sg64
(lp933
g57
(g58
g59
NtRp934
(dp935
g62
(dp936
g70
I4
ssg71
g930
sg64
(lp937
S'set([])'
p938
asbasbasbag57
(g73
g59
NtRp939
(dp940
g62
(dp941
sg71
g822
sg64
(lp942
g57
(g78
g59
NtRp943
(dp944
g62
(dp945
g82
g83
ssg71
g939
sg64
(lp946
S'debugging'
p947
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
g89
g90
ssg71
g939
sg64
(lp951
S':'
asbag57
(g78
g59
NtRp952
(dp953
g62
(dp954
sg71
g939
sg64
(lp955
g57
(g58
g59
NtRp956
(dp957
g62
(dp958
g70
I4
ssg71
g952
sg64
(lp959
g100
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g822
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'gluon_parent'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g822
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_accept'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g822
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_accept_charset'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g822
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_accept_encoding'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'gzip,deflate,sdch'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g822
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_accept_language'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'en-US,en;q=0.8'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g822
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_connection'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'keep-alive'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g822
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'http_cookie'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
S'session_id_welcome=127.0.0.1-06963b13-5292-4f12-a45f-8facc0240d3e; session_id_admin=127.0.0.1-9a7f619c-556f-488f-ab9a-5a25f7a5da28; session_id_seniorproject=127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p1113
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g822
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'http_host'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'127.0.0.1:8000'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g822
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'http_referer'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'http://127.0.0.1:8000/SeniorProject/default/formtable?formType=RFI&projectNum=12'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g822
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'http_user_agent'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
S'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31'
p1179
asbasbasbag57
(g73
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g822
sg64
(lp1183
g57
(g78
g59
NtRp1184
(dp1185
g62
(dp1186
g82
g83
ssg71
g1180
sg64
(lp1187
S'is_jython'
p1188
asbag57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
g89
g90
ssg71
g1180
sg64
(lp1192
S':'
asbag57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
sg71
g1180
sg64
(lp1196
g57
(g58
g59
NtRp1197
(dp1198
g62
(dp1199
g70
I4
ssg71
g1193
sg64
(lp1200
g100
asbasbasbag57
(g73
g59
NtRp1201
(dp1202
g62
(dp1203
sg71
g822
sg64
(lp1204
g57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
g82
g83
ssg71
g1201
sg64
(lp1208
S'is_pypy'
p1209
asbag57
(g78
g59
NtRp1210
(dp1211
g62
(dp1212
g89
g90
ssg71
g1201
sg64
(lp1213
S':'
asbag57
(g78
g59
NtRp1214
(dp1215
g62
(dp1216
sg71
g1201
sg64
(lp1217
g57
(g58
g59
NtRp1218
(dp1219
g62
(dp1220
g70
I4
ssg71
g1214
sg64
(lp1221
g100
asbasbasbag57
(g73
g59
NtRp1222
(dp1223
g62
(dp1224
sg71
g822
sg64
(lp1225
g57
(g78
g59
NtRp1226
(dp1227
g62
(dp1228
g82
g83
ssg71
g1222
sg64
(lp1229
S'path_info'
p1230
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g89
g90
ssg71
g1222
sg64
(lp1234
S':'
asbag57
(g78
g59
NtRp1235
(dp1236
g62
(dp1237
sg71
g1222
sg64
(lp1238
g57
(g58
g59
NtRp1239
(dp1240
g62
(dp1241
g70
I4
ssg71
g1235
sg64
(lp1242
S'/SeniorProject/default/showform'
p1243
asbasbasbag57
(g73
g59
NtRp1244
(dp1245
g62
(dp1246
sg71
g822
sg64
(lp1247
g57
(g78
g59
NtRp1248
(dp1249
g62
(dp1250
g82
g83
ssg71
g1244
sg64
(lp1251
S'query_string'
p1252
asbag57
(g78
g59
NtRp1253
(dp1254
g62
(dp1255
g89
g90
ssg71
g1244
sg64
(lp1256
S':'
asbag57
(g78
g59
NtRp1257
(dp1258
g62
(dp1259
sg71
g1244
sg64
(lp1260
g57
(g58
g59
NtRp1261
(dp1262
g62
(dp1263
g70
I4
ssg71
g1257
sg64
(lp1264
S'displayForm=Submittal&projectNum=12'
p1265
asbasbasbag57
(g73
g59
NtRp1266
(dp1267
g62
(dp1268
sg71
g822
sg64
(lp1269
g57
(g78
g59
NtRp1270
(dp1271
g62
(dp1272
g82
g83
ssg71
g1266
sg64
(lp1273
S'remote_addr'
p1274
asbag57
(g78
g59
NtRp1275
(dp1276
g62
(dp1277
g89
g90
ssg71
g1266
sg64
(lp1278
S':'
asbag57
(g78
g59
NtRp1279
(dp1280
g62
(dp1281
sg71
g1266
sg64
(lp1282
g57
(g58
g59
NtRp1283
(dp1284
g62
(dp1285
g70
I4
ssg71
g1279
sg64
(lp1286
g190
asbasbasbag57
(g73
g59
NtRp1287
(dp1288
g62
(dp1289
sg71
g822
sg64
(lp1290
g57
(g78
g59
NtRp1291
(dp1292
g62
(dp1293
g82
g83
ssg71
g1287
sg64
(lp1294
S'remote_port'
p1295
asbag57
(g78
g59
NtRp1296
(dp1297
g62
(dp1298
g89
g90
ssg71
g1287
sg64
(lp1299
S':'
asbag57
(g78
g59
NtRp1300
(dp1301
g62
(dp1302
sg71
g1287
sg64
(lp1303
g57
(g58
g59
NtRp1304
(dp1305
g62
(dp1306
g70
I4
ssg71
g1300
sg64
(lp1307
S'50977'
p1308
asbasbasbag57
(g73
g59
NtRp1309
(dp1310
g62
(dp1311
sg71
g822
sg64
(lp1312
g57
(g78
g59
NtRp1313
(dp1314
g62
(dp1315
g82
g83
ssg71
g1309
sg64
(lp1316
S'request_method'
p1317
asbag57
(g78
g59
NtRp1318
(dp1319
g62
(dp1320
g89
g90
ssg71
g1309
sg64
(lp1321
S':'
asbag57
(g78
g59
NtRp1322
(dp1323
g62
(dp1324
sg71
g1309
sg64
(lp1325
g57
(g58
g59
NtRp1326
(dp1327
g62
(dp1328
g70
I4
ssg71
g1322
sg64
(lp1329
S'GET'
p1330
asbasbasbag57
(g73
g59
NtRp1331
(dp1332
g62
(dp1333
sg71
g822
sg64
(lp1334
g57
(g78
g59
NtRp1335
(dp1336
g62
(dp1337
g82
g83
ssg71
g1331
sg64
(lp1338
S'script_name'
p1339
asbag57
(g78
g59
NtRp1340
(dp1341
g62
(dp1342
g89
g90
ssg71
g1331
sg64
(lp1343
S':'
asbag57
(g78
g59
NtRp1344
(dp1345
g62
(dp1346
sg71
g1331
sg64
(lp1347
g57
(g58
g59
NtRp1348
(dp1349
g62
(dp1350
g70
I4
ssg71
g1344
sg64
(lp1351
S''
asbasbasbag57
(g73
g59
NtRp1352
(dp1353
g62
(dp1354
sg71
g822
sg64
(lp1355
g57
(g78
g59
NtRp1356
(dp1357
g62
(dp1358
g82
g83
ssg71
g1352
sg64
(lp1359
S'server_name'
p1360
asbag57
(g78
g59
NtRp1361
(dp1362
g62
(dp1363
g89
g90
ssg71
g1352
sg64
(lp1364
S':'
asbag57
(g78
g59
NtRp1365
(dp1366
g62
(dp1367
sg71
g1352
sg64
(lp1368
g57
(g58
g59
NtRp1369
(dp1370
g62
(dp1371
g70
I4
ssg71
g1365
sg64
(lp1372
S'Nathans-MacBook-Pro-2.local'
p1373
asbasbasbag57
(g73
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g822
sg64
(lp1377
g57
(g78
g59
NtRp1378
(dp1379
g62
(dp1380
g82
g83
ssg71
g1374
sg64
(lp1381
S'server_port'
p1382
asbag57
(g78
g59
NtRp1383
(dp1384
g62
(dp1385
g89
g90
ssg71
g1374
sg64
(lp1386
S':'
asbag57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
sg71
g1374
sg64
(lp1390
g57
(g58
g59
NtRp1391
(dp1392
g62
(dp1393
g70
I4
ssg71
g1387
sg64
(lp1394
S'8000'
p1395
asbasbasbag57
(g73
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g822
sg64
(lp1399
g57
(g78
g59
NtRp1400
(dp1401
g62
(dp1402
g82
g83
ssg71
g1396
sg64
(lp1403
S'server_protocol'
p1404
asbag57
(g78
g59
NtRp1405
(dp1406
g62
(dp1407
g89
g90
ssg71
g1396
sg64
(lp1408
S':'
asbag57
(g78
g59
NtRp1409
(dp1410
g62
(dp1411
sg71
g1396
sg64
(lp1412
g57
(g58
g59
NtRp1413
(dp1414
g62
(dp1415
g70
I4
ssg71
g1409
sg64
(lp1416
S'HTTP/1.1'
p1417
asbasbasbag57
(g73
g59
NtRp1418
(dp1419
g62
(dp1420
sg71
g822
sg64
(lp1421
g57
(g78
g59
NtRp1422
(dp1423
g62
(dp1424
g82
g83
ssg71
g1418
sg64
(lp1425
S'server_software'
p1426
asbag57
(g78
g59
NtRp1427
(dp1428
g62
(dp1429
g89
g90
ssg71
g1418
sg64
(lp1430
S':'
asbag57
(g78
g59
NtRp1431
(dp1432
g62
(dp1433
sg71
g1418
sg64
(lp1434
g57
(g58
g59
NtRp1435
(dp1436
g62
(dp1437
g70
I4
ssg71
g1431
sg64
(lp1438
S'Rocket 1.2.4'
p1439
asbasbasbag57
(g73
g59
NtRp1440
(dp1441
g62
(dp1442
sg71
g822
sg64
(lp1443
g57
(g78
g59
NtRp1444
(dp1445
g62
(dp1446
g82
g83
ssg71
g1440
sg64
(lp1447
S'web2py_crontype'
p1448
asbag57
(g78
g59
NtRp1449
(dp1450
g62
(dp1451
g89
g90
ssg71
g1440
sg64
(lp1452
S':'
asbag57
(g78
g59
NtRp1453
(dp1454
g62
(dp1455
sg71
g1440
sg64
(lp1456
g57
(g58
g59
NtRp1457
(dp1458
g62
(dp1459
g70
I4
ssg71
g1453
sg64
(lp1460
S'hard'
p1461
asbasbasbag57
(g73
g59
NtRp1462
(dp1463
g62
(dp1464
sg71
g822
sg64
(lp1465
g57
(g78
g59
NtRp1466
(dp1467
g62
(dp1468
g82
g83
ssg71
g1462
sg64
(lp1469
S'web2py_path'
p1470
asbag57
(g78
g59
NtRp1471
(dp1472
g62
(dp1473
g89
g90
ssg71
g1462
sg64
(lp1474
S':'
asbag57
(g78
g59
NtRp1475
(dp1476
g62
(dp1477
sg71
g1462
sg64
(lp1478
g57
(g58
g59
NtRp1479
(dp1480
g62
(dp1481
g70
I4
ssg71
g1475
sg64
(lp1482
g869
asbasbasbag57
(g73
g59
NtRp1483
(dp1484
g62
(dp1485
sg71
g822
sg64
(lp1486
g57
(g78
g59
NtRp1487
(dp1488
g62
(dp1489
g82
g83
ssg71
g1483
sg64
(lp1490
S'web2py_version'
p1491
asbag57
(g78
g59
NtRp1492
(dp1493
g62
(dp1494
g89
g90
ssg71
g1483
sg64
(lp1495
S':'
asbag57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
sg71
g1483
sg64
(lp1499
g57
(g58
g59
NtRp1500
(dp1501
g62
(dp1502
g70
I4
ssg71
g1496
sg64
(lp1503
g57
(g66
g59
NtRp1504
(dp1505
g62
(dp1506
g70
I3
ssg71
Nsg64
(lp1507
g57
(g73
g59
NtRp1508
(dp1509
g62
(dp1510
sg71
g1504
sg64
(lp1511
g57
(g78
g59
NtRp1512
(dp1513
g62
(dp1514
sg71
g1508
sg64
(lp1515
g57
(g58
g59
NtRp1516
(dp1517
g62
(dp1518
g70
I3
ssg71
g1512
sg64
(lp1519
S'1'
asbasbasbag57
(g73
g59
NtRp1520
(dp1521
g62
(dp1522
sg71
g1504
sg64
(lp1523
g57
(g78
g59
NtRp1524
(dp1525
g62
(dp1526
sg71
g1520
sg64
(lp1527
g57
(g58
g59
NtRp1528
(dp1529
g62
(dp1530
g70
I3
ssg71
g1524
sg64
(lp1531
S'99'
p1532
asbasbasbag57
(g73
g59
NtRp1533
(dp1534
g62
(dp1535
sg71
g1504
sg64
(lp1536
g57
(g78
g59
NtRp1537
(dp1538
g62
(dp1539
sg71
g1533
sg64
(lp1540
g57
(g58
g59
NtRp1541
(dp1542
g62
(dp1543
g70
I3
ssg71
g1537
sg64
(lp1544
S'7'
asbasbasbag57
(g73
g59
NtRp1545
(dp1546
g62
(dp1547
sg71
g1504
sg64
(lp1548
g57
(g78
g59
NtRp1549
(dp1550
g62
(dp1551
sg71
g1545
sg64
(lp1552
g57
(g58
g59
NtRp1553
(dp1554
g62
(dp1555
g70
I3
ssg71
g1549
sg64
(lp1556
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1557
asbasbasbag57
(g73
g59
NtRp1558
(dp1559
g62
(dp1560
sg71
g1504
sg64
(lp1561
g57
(g78
g59
NtRp1562
(dp1563
g62
(dp1564
sg71
g1558
sg64
(lp1565
g57
(g58
g59
NtRp1566
(dp1567
g62
(dp1568
g70
I3
ssg71
g1562
sg64
(lp1569
S'stable'
p1570
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1571
(dp1572
g62
(dp1573
sg71
g822
sg64
(lp1574
g57
(g78
g59
NtRp1575
(dp1576
g62
(dp1577
g82
g83
ssg71
g1571
sg64
(lp1578
S'wsgi_errors'
p1579
asbag57
(g78
g59
NtRp1580
(dp1581
g62
(dp1582
g89
g90
ssg71
g1571
sg64
(lp1583
S':'
asbag57
(g78
g59
NtRp1584
(dp1585
g62
(dp1586
sg71
g1571
sg64
(lp1587
g57
(g58
g59
NtRp1588
(dp1589
g62
(dp1590
g70
I4
ssg71
g1584
sg64
(lp1591
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p1592
asbasbasbag57
(g73
g59
NtRp1593
(dp1594
g62
(dp1595
sg71
g822
sg64
(lp1596
g57
(g78
g59
NtRp1597
(dp1598
g62
(dp1599
g82
g83
ssg71
g1593
sg64
(lp1600
S'wsgi_file_wrapper'
p1601
asbag57
(g78
g59
NtRp1602
(dp1603
g62
(dp1604
g89
g90
ssg71
g1593
sg64
(lp1605
S':'
asbag57
(g78
g59
NtRp1606
(dp1607
g62
(dp1608
sg71
g1593
sg64
(lp1609
g57
(g58
g59
NtRp1610
(dp1611
g62
(dp1612
g70
I4
ssg71
g1606
sg64
(lp1613
S'<class wsgiref.util.FileWrapper at 0x1018c6120>'
p1614
asbasbasbag57
(g73
g59
NtRp1615
(dp1616
g62
(dp1617
sg71
g822
sg64
(lp1618
g57
(g78
g59
NtRp1619
(dp1620
g62
(dp1621
g82
g83
ssg71
g1615
sg64
(lp1622
S'wsgi_input'
p1623
asbag57
(g78
g59
NtRp1624
(dp1625
g62
(dp1626
g89
g90
ssg71
g1615
sg64
(lp1627
S':'
asbag57
(g78
g59
NtRp1628
(dp1629
g62
(dp1630
sg71
g1615
sg64
(lp1631
g57
(g58
g59
NtRp1632
(dp1633
g62
(dp1634
g70
I4
ssg71
g1628
sg64
(lp1635
S'<socket._fileobject object at 0x10c187f50>'
p1636
asbasbasbag57
(g73
g59
NtRp1637
(dp1638
g62
(dp1639
sg71
g822
sg64
(lp1640
g57
(g78
g59
NtRp1641
(dp1642
g62
(dp1643
g82
g83
ssg71
g1637
sg64
(lp1644
S'wsgi_multiprocess'
p1645
asbag57
(g78
g59
NtRp1646
(dp1647
g62
(dp1648
g89
g90
ssg71
g1637
sg64
(lp1649
S':'
asbag57
(g78
g59
NtRp1650
(dp1651
g62
(dp1652
sg71
g1637
sg64
(lp1653
g57
(g58
g59
NtRp1654
(dp1655
g62
(dp1656
g70
I4
ssg71
g1650
sg64
(lp1657
g100
asbasbasbag57
(g73
g59
NtRp1658
(dp1659
g62
(dp1660
sg71
g822
sg64
(lp1661
g57
(g78
g59
NtRp1662
(dp1663
g62
(dp1664
g82
g83
ssg71
g1658
sg64
(lp1665
S'wsgi_multithread'
p1666
asbag57
(g78
g59
NtRp1667
(dp1668
g62
(dp1669
g89
g90
ssg71
g1658
sg64
(lp1670
S':'
asbag57
(g78
g59
NtRp1671
(dp1672
g62
(dp1673
sg71
g1658
sg64
(lp1674
g57
(g58
g59
NtRp1675
(dp1676
g62
(dp1677
g70
I4
ssg71
g1671
sg64
(lp1678
S'True'
p1679
asbasbasbag57
(g73
g59
NtRp1680
(dp1681
g62
(dp1682
sg71
g822
sg64
(lp1683
g57
(g78
g59
NtRp1684
(dp1685
g62
(dp1686
g82
g83
ssg71
g1680
sg64
(lp1687
S'wsgi_run_once'
p1688
asbag57
(g78
g59
NtRp1689
(dp1690
g62
(dp1691
g89
g90
ssg71
g1680
sg64
(lp1692
S':'
asbag57
(g78
g59
NtRp1693
(dp1694
g62
(dp1695
sg71
g1680
sg64
(lp1696
g57
(g58
g59
NtRp1697
(dp1698
g62
(dp1699
g70
I4
ssg71
g1693
sg64
(lp1700
g100
asbasbasbag57
(g73
g59
NtRp1701
(dp1702
g62
(dp1703
sg71
g822
sg64
(lp1704
g57
(g78
g59
NtRp1705
(dp1706
g62
(dp1707
g82
g83
ssg71
g1701
sg64
(lp1708
S'wsgi_url_scheme'
p1709
asbag57
(g78
g59
NtRp1710
(dp1711
g62
(dp1712
g89
g90
ssg71
g1701
sg64
(lp1713
S':'
asbag57
(g78
g59
NtRp1714
(dp1715
g62
(dp1716
sg71
g1701
sg64
(lp1717
g57
(g58
g59
NtRp1718
(dp1719
g62
(dp1720
g70
I4
ssg71
g1714
sg64
(lp1721
S'http'
p1722
asbasbasbag57
(g73
g59
NtRp1723
(dp1724
g62
(dp1725
sg71
g822
sg64
(lp1726
g57
(g78
g59
NtRp1727
(dp1728
g62
(dp1729
g82
g83
ssg71
g1723
sg64
(lp1730
S'wsgi_version'
p1731
asbag57
(g78
g59
NtRp1732
(dp1733
g62
(dp1734
g89
g90
ssg71
g1723
sg64
(lp1735
S':'
asbag57
(g78
g59
NtRp1736
(dp1737
g62
(dp1738
sg71
g1723
sg64
(lp1739
g57
(g58
g59
NtRp1740
(dp1741
g62
(dp1742
g70
I4
ssg71
g1736
sg64
(lp1743
g57
(g66
g59
NtRp1744
(dp1745
g62
(dp1746
g70
I3
ssg71
Nsg64
(lp1747
g57
(g73
g59
NtRp1748
(dp1749
g62
(dp1750
sg71
g1744
sg64
(lp1751
g57
(g78
g59
NtRp1752
(dp1753
g62
(dp1754
sg71
g1748
sg64
(lp1755
g57
(g58
g59
NtRp1756
(dp1757
g62
(dp1758
g70
I3
ssg71
g1752
sg64
(lp1759
S'1'
asbasbasbag57
(g73
g59
NtRp1760
(dp1761
g62
(dp1762
sg71
g1744
sg64
(lp1763
g57
(g78
g59
NtRp1764
(dp1765
g62
(dp1766
sg71
g1760
sg64
(lp1767
g57
(g58
g59
NtRp1768
(dp1769
g62
(dp1770
g70
I3
ssg71
g1764
sg64
(lp1771
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1772
(dp1773
g62
(dp1774
sg71
g67
sg64
(lp1775
g57
(g78
g59
NtRp1776
(dp1777
g62
(dp1778
g82
g83
ssg71
g1772
sg64
(lp1779
S'extension'
p1780
asbag57
(g78
g59
NtRp1781
(dp1782
g62
(dp1783
g89
g90
ssg71
g1772
sg64
(lp1784
S':'
asbag57
(g78
g59
NtRp1785
(dp1786
g62
(dp1787
sg71
g1772
sg64
(lp1788
g57
(g58
g59
NtRp1789
(dp1790
g62
(dp1791
g70
I5
ssg71
g1785
sg64
(lp1792
S'html'
p1793
asbasbasbag57
(g73
g59
NtRp1794
(dp1795
g62
(dp1796
sg71
g67
sg64
(lp1797
g57
(g78
g59
NtRp1798
(dp1799
g62
(dp1800
g82
g83
ssg71
g1794
sg64
(lp1801
S'folder'
p1802
asbag57
(g78
g59
NtRp1803
(dp1804
g62
(dp1805
g89
g90
ssg71
g1794
sg64
(lp1806
S':'
asbag57
(g78
g59
NtRp1807
(dp1808
g62
(dp1809
sg71
g1794
sg64
(lp1810
g57
(g58
g59
NtRp1811
(dp1812
g62
(dp1813
g70
I5
ssg71
g1807
sg64
(lp1814
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/'
p1815
asbasbasbag57
(g73
g59
NtRp1816
(dp1817
g62
(dp1818
sg71
g67
sg64
(lp1819
g57
(g78
g59
NtRp1820
(dp1821
g62
(dp1822
g82
g83
ssg71
g1816
sg64
(lp1823
S'function'
p1824
asbag57
(g78
g59
NtRp1825
(dp1826
g62
(dp1827
g89
g90
ssg71
g1816
sg64
(lp1828
S':'
asbag57
(g78
g59
NtRp1829
(dp1830
g62
(dp1831
sg71
g1816
sg64
(lp1832
g57
(g58
g59
NtRp1833
(dp1834
g62
(dp1835
g70
I5
ssg71
g1829
sg64
(lp1836
S'showform'
p1837
asbasbasbag57
(g73
g59
NtRp1838
(dp1839
g62
(dp1840
sg71
g67
sg64
(lp1841
g57
(g78
g59
NtRp1842
(dp1843
g62
(dp1844
g82
g83
ssg71
g1838
sg64
(lp1845
S'get_vars'
p1846
asbag57
(g78
g59
NtRp1847
(dp1848
g62
(dp1849
g89
g90
ssg71
g1838
sg64
(lp1850
S':'
asbag57
(g78
g59
NtRp1851
(dp1852
g62
(dp1853
sg71
g1838
sg64
(lp1854
g57
(g58
g59
NtRp1855
(dp1856
g62
(dp1857
g70
I5
ssg71
g1851
sg64
(lp1858
g57
(g66
g59
NtRp1859
(dp1860
g62
(dp1861
g70
I4
ssg71
Nsg64
(lp1862
g57
(g73
g59
NtRp1863
(dp1864
g62
(dp1865
sg71
g1859
sg64
(lp1866
g57
(g78
g59
NtRp1867
(dp1868
g62
(dp1869
g82
g83
ssg71
g1863
sg64
(lp1870
S'displayForm'
p1871
asbag57
(g78
g59
NtRp1872
(dp1873
g62
(dp1874
g89
g90
ssg71
g1863
sg64
(lp1875
S':'
asbag57
(g78
g59
NtRp1876
(dp1877
g62
(dp1878
sg71
g1863
sg64
(lp1879
g57
(g58
g59
NtRp1880
(dp1881
g62
(dp1882
g70
I4
ssg71
g1876
sg64
(lp1883
S'Submittal'
p1884
asbasbasbag57
(g73
g59
NtRp1885
(dp1886
g62
(dp1887
sg71
g1859
sg64
(lp1888
g57
(g78
g59
NtRp1889
(dp1890
g62
(dp1891
g82
g83
ssg71
g1885
sg64
(lp1892
S'projectNum'
p1893
asbag57
(g78
g59
NtRp1894
(dp1895
g62
(dp1896
g89
g90
ssg71
g1885
sg64
(lp1897
S':'
asbag57
(g78
g59
NtRp1898
(dp1899
g62
(dp1900
sg71
g1885
sg64
(lp1901
g57
(g58
g59
NtRp1902
(dp1903
g62
(dp1904
g70
I4
ssg71
g1898
sg64
(lp1905
S'12'
p1906
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1907
(dp1908
g62
(dp1909
sg71
g67
sg64
(lp1910
g57
(g78
g59
NtRp1911
(dp1912
g62
(dp1913
g82
g83
ssg71
g1907
sg64
(lp1914
S'global_settings'
p1915
asbag57
(g78
g59
NtRp1916
(dp1917
g62
(dp1918
g89
g90
ssg71
g1907
sg64
(lp1919
S':'
asbag57
(g78
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1907
sg64
(lp1923
g57
(g58
g59
NtRp1924
(dp1925
g62
(dp1926
g70
I5
ssg71
g1920
sg64
(lp1927
g57
(g66
g59
NtRp1928
(dp1929
g62
(dp1930
g70
I4
ssg71
Nsg64
(lp1931
g57
(g73
g59
NtRp1932
(dp1933
g62
(dp1934
sg71
g1928
sg64
(lp1935
g57
(g78
g59
NtRp1936
(dp1937
g62
(dp1938
g82
g83
ssg71
g1932
sg64
(lp1939
g834
asbag57
(g78
g59
NtRp1940
(dp1941
g62
(dp1942
g89
g90
ssg71
g1932
sg64
(lp1943
S':'
asbag57
(g78
g59
NtRp1944
(dp1945
g62
(dp1946
sg71
g1932
sg64
(lp1947
g57
(g58
g59
NtRp1948
(dp1949
g62
(dp1950
g70
I4
ssg71
g1944
sg64
(lp1951
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p1952
asbasbasbag57
(g73
g59
NtRp1953
(dp1954
g62
(dp1955
sg71
g1928
sg64
(lp1956
g57
(g78
g59
NtRp1957
(dp1958
g62
(dp1959
g82
g83
ssg71
g1953
sg64
(lp1960
g856
asbag57
(g78
g59
NtRp1961
(dp1962
g62
(dp1963
g89
g90
ssg71
g1953
sg64
(lp1964
S':'
asbag57
(g78
g59
NtRp1965
(dp1966
g62
(dp1967
sg71
g1953
sg64
(lp1968
g57
(g58
g59
NtRp1969
(dp1970
g62
(dp1971
g70
I4
ssg71
g1965
sg64
(lp1972
g869
asbasbasbag57
(g73
g59
NtRp1973
(dp1974
g62
(dp1975
sg71
g1928
sg64
(lp1976
g57
(g78
g59
NtRp1977
(dp1978
g62
(dp1979
g82
g83
ssg71
g1973
sg64
(lp1980
g878
asbag57
(g78
g59
NtRp1981
(dp1982
g62
(dp1983
g89
g90
ssg71
g1973
sg64
(lp1984
S':'
asbag57
(g78
g59
NtRp1985
(dp1986
g62
(dp1987
sg71
g1973
sg64
(lp1988
g57
(g58
g59
NtRp1989
(dp1990
g62
(dp1991
g70
I4
ssg71
g1985
sg64
(lp1992
g57
(g66
g59
NtRp1993
(dp1994
g62
(dp1995
g70
I3
ssg71
Nsg64
(lp1996
sbasbasbasbag57
(g73
g59
NtRp1997
(dp1998
g62
(dp1999
sg71
g1928
sg64
(lp2000
g57
(g78
g59
NtRp2001
(dp2002
g62
(dp2003
g82
g83
ssg71
g1997
sg64
(lp2004
g903
asbag57
(g78
g59
NtRp2005
(dp2006
g62
(dp2007
g89
g90
ssg71
g1997
sg64
(lp2008
S':'
asbag57
(g78
g59
NtRp2009
(dp2010
g62
(dp2011
sg71
g1997
sg64
(lp2012
g57
(g58
g59
NtRp2013
(dp2014
g62
(dp2015
g70
I4
ssg71
g2009
sg64
(lp2016
S"<Values at 0x1019a7440: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2017
asbasbasbag57
(g73
g59
NtRp2018
(dp2019
g62
(dp2020
sg71
g1928
sg64
(lp2021
g57
(g78
g59
NtRp2022
(dp2023
g62
(dp2024
g82
g83
ssg71
g2018
sg64
(lp2025
g925
asbag57
(g78
g59
NtRp2026
(dp2027
g62
(dp2028
g89
g90
ssg71
g2018
sg64
(lp2029
S':'
asbag57
(g78
g59
NtRp2030
(dp2031
g62
(dp2032
sg71
g2018
sg64
(lp2033
g57
(g58
g59
NtRp2034
(dp2035
g62
(dp2036
g70
I4
ssg71
g2030
sg64
(lp2037
S'set([])'
p2038
asbasbasbag57
(g73
g59
NtRp2039
(dp2040
g62
(dp2041
sg71
g1928
sg64
(lp2042
g57
(g78
g59
NtRp2043
(dp2044
g62
(dp2045
g82
g83
ssg71
g2039
sg64
(lp2046
g947
asbag57
(g78
g59
NtRp2047
(dp2048
g62
(dp2049
g89
g90
ssg71
g2039
sg64
(lp2050
S':'
asbag57
(g78
g59
NtRp2051
(dp2052
g62
(dp2053
sg71
g2039
sg64
(lp2054
g57
(g58
g59
NtRp2055
(dp2056
g62
(dp2057
g70
I4
ssg71
g2051
sg64
(lp2058
g100
asbasbasbag57
(g73
g59
NtRp2059
(dp2060
g62
(dp2061
sg71
g1928
sg64
(lp2062
g57
(g78
g59
NtRp2063
(dp2064
g62
(dp2065
g82
g83
ssg71
g2059
sg64
(lp2066
g968
asbag57
(g78
g59
NtRp2067
(dp2068
g62
(dp2069
g89
g90
ssg71
g2059
sg64
(lp2070
S':'
asbag57
(g78
g59
NtRp2071
(dp2072
g62
(dp2073
sg71
g2059
sg64
(lp2074
g57
(g58
g59
NtRp2075
(dp2076
g62
(dp2077
g70
I4
ssg71
g2071
sg64
(lp2078
g981
asbasbasbag57
(g73
g59
NtRp2079
(dp2080
g62
(dp2081
sg71
g1928
sg64
(lp2082
g57
(g78
g59
NtRp2083
(dp2084
g62
(dp2085
g82
g83
ssg71
g2079
sg64
(lp2086
g1188
asbag57
(g78
g59
NtRp2087
(dp2088
g62
(dp2089
g89
g90
ssg71
g2079
sg64
(lp2090
S':'
asbag57
(g78
g59
NtRp2091
(dp2092
g62
(dp2093
sg71
g2079
sg64
(lp2094
g57
(g58
g59
NtRp2095
(dp2096
g62
(dp2097
g70
I4
ssg71
g2091
sg64
(lp2098
g100
asbasbasbag57
(g73
g59
NtRp2099
(dp2100
g62
(dp2101
sg71
g1928
sg64
(lp2102
g57
(g78
g59
NtRp2103
(dp2104
g62
(dp2105
g82
g83
ssg71
g2099
sg64
(lp2106
g1209
asbag57
(g78
g59
NtRp2107
(dp2108
g62
(dp2109
g89
g90
ssg71
g2099
sg64
(lp2110
S':'
asbag57
(g78
g59
NtRp2111
(dp2112
g62
(dp2113
sg71
g2099
sg64
(lp2114
g57
(g58
g59
NtRp2115
(dp2116
g62
(dp2117
g70
I4
ssg71
g2111
sg64
(lp2118
g100
asbasbasbag57
(g73
g59
NtRp2119
(dp2120
g62
(dp2121
sg71
g1928
sg64
(lp2122
g57
(g78
g59
NtRp2123
(dp2124
g62
(dp2125
g82
g83
ssg71
g2119
sg64
(lp2126
g1448
asbag57
(g78
g59
NtRp2127
(dp2128
g62
(dp2129
g89
g90
ssg71
g2119
sg64
(lp2130
S':'
asbag57
(g78
g59
NtRp2131
(dp2132
g62
(dp2133
sg71
g2119
sg64
(lp2134
g57
(g58
g59
NtRp2135
(dp2136
g62
(dp2137
g70
I4
ssg71
g2131
sg64
(lp2138
g1461
asbasbasbag57
(g73
g59
NtRp2139
(dp2140
g62
(dp2141
sg71
g1928
sg64
(lp2142
g57
(g78
g59
NtRp2143
(dp2144
g62
(dp2145
g82
g83
ssg71
g2139
sg64
(lp2146
g1491
asbag57
(g78
g59
NtRp2147
(dp2148
g62
(dp2149
g89
g90
ssg71
g2139
sg64
(lp2150
S':'
asbag57
(g78
g59
NtRp2151
(dp2152
g62
(dp2153
sg71
g2139
sg64
(lp2154
g57
(g58
g59
NtRp2155
(dp2156
g62
(dp2157
g70
I4
ssg71
g2151
sg64
(lp2158
g57
(g66
g59
NtRp2159
(dp2160
g62
(dp2161
g70
I3
ssg71
Nsg64
(lp2162
g57
(g73
g59
NtRp2163
(dp2164
g62
(dp2165
sg71
g2159
sg64
(lp2166
g57
(g78
g59
NtRp2167
(dp2168
g62
(dp2169
sg71
g2163
sg64
(lp2170
g57
(g58
g59
NtRp2171
(dp2172
g62
(dp2173
g70
I3
ssg71
g2167
sg64
(lp2174
S'1'
asbasbasbag57
(g73
g59
NtRp2175
(dp2176
g62
(dp2177
sg71
g2159
sg64
(lp2178
g57
(g78
g59
NtRp2179
(dp2180
g62
(dp2181
sg71
g2175
sg64
(lp2182
g57
(g58
g59
NtRp2183
(dp2184
g62
(dp2185
g70
I3
ssg71
g2179
sg64
(lp2186
S'99'
p2187
asbasbasbag57
(g73
g59
NtRp2188
(dp2189
g62
(dp2190
sg71
g2159
sg64
(lp2191
g57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
sg71
g2188
sg64
(lp2195
g57
(g58
g59
NtRp2196
(dp2197
g62
(dp2198
g70
I3
ssg71
g2192
sg64
(lp2199
S'7'
asbasbasbag57
(g73
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g2159
sg64
(lp2203
g57
(g78
g59
NtRp2204
(dp2205
g62
(dp2206
sg71
g2200
sg64
(lp2207
g57
(g58
g59
NtRp2208
(dp2209
g62
(dp2210
g70
I3
ssg71
g2204
sg64
(lp2211
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2212
asbasbasbag57
(g73
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2159
sg64
(lp2216
g57
(g78
g59
NtRp2217
(dp2218
g62
(dp2219
sg71
g2213
sg64
(lp2220
g57
(g58
g59
NtRp2221
(dp2222
g62
(dp2223
g70
I3
ssg71
g2217
sg64
(lp2224
g1570
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g67
sg64
(lp2228
g57
(g78
g59
NtRp2229
(dp2230
g62
(dp2231
g82
g83
ssg71
g2225
sg64
(lp2232
S'is_https'
p2233
asbag57
(g78
g59
NtRp2234
(dp2235
g62
(dp2236
g89
g90
ssg71
g2225
sg64
(lp2237
S':'
asbag57
(g78
g59
NtRp2238
(dp2239
g62
(dp2240
sg71
g2225
sg64
(lp2241
g57
(g58
g59
NtRp2242
(dp2243
g62
(dp2244
g70
I5
ssg71
g2238
sg64
(lp2245
g100
asbasbasbag57
(g73
g59
NtRp2246
(dp2247
g62
(dp2248
sg71
g67
sg64
(lp2249
g57
(g78
g59
NtRp2250
(dp2251
g62
(dp2252
g82
g83
ssg71
g2246
sg64
(lp2253
S'is_local'
p2254
asbag57
(g78
g59
NtRp2255
(dp2256
g62
(dp2257
g89
g90
ssg71
g2246
sg64
(lp2258
S':'
asbag57
(g78
g59
NtRp2259
(dp2260
g62
(dp2261
sg71
g2246
sg64
(lp2262
g57
(g58
g59
NtRp2263
(dp2264
g62
(dp2265
g70
I5
ssg71
g2259
sg64
(lp2266
g1679
asbasbasbag57
(g73
g59
NtRp2267
(dp2268
g62
(dp2269
sg71
g67
sg64
(lp2270
g57
(g78
g59
NtRp2271
(dp2272
g62
(dp2273
g82
g83
ssg71
g2267
sg64
(lp2274
S'is_restful'
p2275
asbag57
(g78
g59
NtRp2276
(dp2277
g62
(dp2278
g89
g90
ssg71
g2267
sg64
(lp2279
S':'
asbag57
(g78
g59
NtRp2280
(dp2281
g62
(dp2282
sg71
g2267
sg64
(lp2283
g57
(g58
g59
NtRp2284
(dp2285
g62
(dp2286
g70
I5
ssg71
g2280
sg64
(lp2287
g100
asbasbasbag57
(g73
g59
NtRp2288
(dp2289
g62
(dp2290
sg71
g67
sg64
(lp2291
g57
(g78
g59
NtRp2292
(dp2293
g62
(dp2294
g82
g83
ssg71
g2288
sg64
(lp2295
S'now'
p2296
asbag57
(g78
g59
NtRp2297
(dp2298
g62
(dp2299
g89
g90
ssg71
g2288
sg64
(lp2300
S':'
asbag57
(g78
g59
NtRp2301
(dp2302
g62
(dp2303
sg71
g2288
sg64
(lp2304
g57
(g58
g59
NtRp2305
(dp2306
g62
(dp2307
g70
I5
ssg71
g2301
sg64
(lp2308
S'datetime.datetime(2013, 4, 18, 13, 7, 29, 486789)'
p2309
asbasbasbag57
(g73
g59
NtRp2310
(dp2311
g62
(dp2312
sg71
g67
sg64
(lp2313
g57
(g78
g59
NtRp2314
(dp2315
g62
(dp2316
g82
g83
ssg71
g2310
sg64
(lp2317
S'post_vars'
p2318
asbag57
(g78
g59
NtRp2319
(dp2320
g62
(dp2321
g89
g90
ssg71
g2310
sg64
(lp2322
S':'
asbag57
(g78
g59
NtRp2323
(dp2324
g62
(dp2325
sg71
g2310
sg64
(lp2326
g57
(g58
g59
NtRp2327
(dp2328
g62
(dp2329
g70
I5
ssg71
g2323
sg64
(lp2330
g57
(g66
g59
NtRp2331
(dp2332
g62
(dp2333
g70
I4
ssg71
Nsg64
(lp2334
sbasbasbasbag57
(g73
g59
NtRp2335
(dp2336
g62
(dp2337
sg71
g67
sg64
(lp2338
g57
(g78
g59
NtRp2339
(dp2340
g62
(dp2341
g82
g83
ssg71
g2335
sg64
(lp2342
S'url'
p2343
asbag57
(g78
g59
NtRp2344
(dp2345
g62
(dp2346
g89
g90
ssg71
g2335
sg64
(lp2347
S':'
asbag57
(g78
g59
NtRp2348
(dp2349
g62
(dp2350
sg71
g2335
sg64
(lp2351
g57
(g58
g59
NtRp2352
(dp2353
g62
(dp2354
g70
I5
ssg71
g2348
sg64
(lp2355
S'/SeniorProject/default/showform'
p2356
asbasbasbag57
(g73
g59
NtRp2357
(dp2358
g62
(dp2359
sg71
g67
sg64
(lp2360
g57
(g78
g59
NtRp2361
(dp2362
g62
(dp2363
g82
g83
ssg71
g2357
sg64
(lp2364
S'utcnow'
p2365
asbag57
(g78
g59
NtRp2366
(dp2367
g62
(dp2368
g89
g90
ssg71
g2357
sg64
(lp2369
S':'
asbag57
(g78
g59
NtRp2370
(dp2371
g62
(dp2372
sg71
g2357
sg64
(lp2373
g57
(g58
g59
NtRp2374
(dp2375
g62
(dp2376
g70
I5
ssg71
g2370
sg64
(lp2377
S'datetime.datetime(2013, 4, 18, 18, 7, 29, 486799)'
p2378
asbasbasbag57
(g73
g59
NtRp2379
(dp2380
g62
(dp2381
sg71
g67
sg64
(lp2382
g57
(g78
g59
NtRp2383
(dp2384
g62
(dp2385
g82
g83
ssg71
g2379
sg64
(lp2386
S'uuid'
p2387
asbag57
(g78
g59
NtRp2388
(dp2389
g62
(dp2390
g89
g90
ssg71
g2379
sg64
(lp2391
S':'
asbag57
(g78
g59
NtRp2392
(dp2393
g62
(dp2394
sg71
g2379
sg64
(lp2395
g57
(g58
g59
NtRp2396
(dp2397
g62
(dp2398
g70
I5
ssg71
g2392
sg64
(lp2399
S'SeniorProject/127.0.0.1.2013-04-18.13-07-29.539ec6a0-ee09-4341-8ccd-5d9c260c9f16'
p2400
asbasbasbag57
(g73
g59
NtRp2401
(dp2402
g62
(dp2403
sg71
g67
sg64
(lp2404
g57
(g78
g59
NtRp2405
(dp2406
g62
(dp2407
g82
g83
ssg71
g2401
sg64
(lp2408
S'vars'
p2409
asbag57
(g78
g59
NtRp2410
(dp2411
g62
(dp2412
g89
g90
ssg71
g2401
sg64
(lp2413
S':'
asbag57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
sg71
g2401
sg64
(lp2417
g57
(g58
g59
NtRp2418
(dp2419
g62
(dp2420
g70
I5
ssg71
g2414
sg64
(lp2421
g57
(g66
g59
NtRp2422
(dp2423
g62
(dp2424
g70
I4
ssg71
Nsg64
(lp2425
g57
(g73
g59
NtRp2426
(dp2427
g62
(dp2428
sg71
g2422
sg64
(lp2429
g57
(g78
g59
NtRp2430
(dp2431
g62
(dp2432
g82
g83
ssg71
g2426
sg64
(lp2433
g1871
asbag57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
g89
g90
ssg71
g2426
sg64
(lp2437
S':'
asbag57
(g78
g59
NtRp2438
(dp2439
g62
(dp2440
sg71
g2426
sg64
(lp2441
g57
(g58
g59
NtRp2442
(dp2443
g62
(dp2444
g70
I4
ssg71
g2438
sg64
(lp2445
g1884
asbasbasbag57
(g73
g59
NtRp2446
(dp2447
g62
(dp2448
sg71
g2422
sg64
(lp2449
g57
(g78
g59
NtRp2450
(dp2451
g62
(dp2452
g82
g83
ssg71
g2446
sg64
(lp2453
g1893
asbag57
(g78
g59
NtRp2454
(dp2455
g62
(dp2456
g89
g90
ssg71
g2446
sg64
(lp2457
S':'
asbag57
(g78
g59
NtRp2458
(dp2459
g62
(dp2460
sg71
g2446
sg64
(lp2461
g57
(g58
g59
NtRp2462
(dp2463
g62
(dp2464
g70
I4
ssg71
g2458
sg64
(lp2465
g1906
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2466
(dp2467
g62
(dp2468
sg71
g67
sg64
(lp2469
g57
(g78
g59
NtRp2470
(dp2471
g62
(dp2472
g82
g83
ssg71
g2466
sg64
(lp2473
S'wsgi'
p2474
asbag57
(g78
g59
NtRp2475
(dp2476
g62
(dp2477
g89
g90
ssg71
g2466
sg64
(lp2478
S':'
asbag57
(g78
g59
NtRp2479
(dp2480
g62
(dp2481
sg71
g2466
sg64
(lp2482
g57
(g58
g59
NtRp2483
(dp2484
g62
(dp2485
g70
I5
ssg71
g2479
sg64
(lp2486
g57
(g66
g59
NtRp2487
(dp2488
g62
(dp2489
g70
I4
ssg71
Nsg64
(lp2490
g57
(g73
g59
NtRp2491
(dp2492
g62
(dp2493
sg71
g2487
sg64
(lp2494
g57
(g78
g59
NtRp2495
(dp2496
g62
(dp2497
g82
g83
ssg71
g2491
sg64
(lp2498
S'environ'
p2499
asbag57
(g78
g59
NtRp2500
(dp2501
g62
(dp2502
g89
g90
ssg71
g2491
sg64
(lp2503
S':'
asbag57
(g78
g59
NtRp2504
(dp2505
g62
(dp2506
sg71
g2491
sg64
(lp2507
g57
(g58
g59
NtRp2508
(dp2509
g62
(dp2510
g70
I4
ssg71
g2504
sg64
(lp2511
g57
(g66
g59
NtRp2512
(dp2513
g62
(dp2514
g70
I3
ssg71
Nsg64
(lp2515
g57
(g73
g59
NtRp2516
(dp2517
g62
(dp2518
sg71
g2512
sg64
(lp2519
g57
(g78
g59
NtRp2520
(dp2521
g62
(dp2522
g82
g83
ssg71
g2516
sg64
(lp2523
S'HTTP_ACCEPT'
p2524
asbag57
(g78
g59
NtRp2525
(dp2526
g62
(dp2527
g89
g90
ssg71
g2516
sg64
(lp2528
S':'
asbag57
(g78
g59
NtRp2529
(dp2530
g62
(dp2531
sg71
g2516
sg64
(lp2532
g57
(g58
g59
NtRp2533
(dp2534
g62
(dp2535
g70
I3
ssg71
g2529
sg64
(lp2536
g1003
asbasbasbag57
(g73
g59
NtRp2537
(dp2538
g62
(dp2539
sg71
g2512
sg64
(lp2540
g57
(g78
g59
NtRp2541
(dp2542
g62
(dp2543
g82
g83
ssg71
g2537
sg64
(lp2544
S'HTTP_ACCEPT_CHARSET'
p2545
asbag57
(g78
g59
NtRp2546
(dp2547
g62
(dp2548
g89
g90
ssg71
g2537
sg64
(lp2549
S':'
asbag57
(g78
g59
NtRp2550
(dp2551
g62
(dp2552
sg71
g2537
sg64
(lp2553
g57
(g58
g59
NtRp2554
(dp2555
g62
(dp2556
g70
I3
ssg71
g2550
sg64
(lp2557
g1025
asbasbasbag57
(g73
g59
NtRp2558
(dp2559
g62
(dp2560
sg71
g2512
sg64
(lp2561
g57
(g78
g59
NtRp2562
(dp2563
g62
(dp2564
g82
g83
ssg71
g2558
sg64
(lp2565
S'HTTP_ACCEPT_ENCODING'
p2566
asbag57
(g78
g59
NtRp2567
(dp2568
g62
(dp2569
g89
g90
ssg71
g2558
sg64
(lp2570
S':'
asbag57
(g78
g59
NtRp2571
(dp2572
g62
(dp2573
sg71
g2558
sg64
(lp2574
g57
(g58
g59
NtRp2575
(dp2576
g62
(dp2577
g70
I3
ssg71
g2571
sg64
(lp2578
g1047
asbasbasbag57
(g73
g59
NtRp2579
(dp2580
g62
(dp2581
sg71
g2512
sg64
(lp2582
g57
(g78
g59
NtRp2583
(dp2584
g62
(dp2585
g82
g83
ssg71
g2579
sg64
(lp2586
S'HTTP_ACCEPT_LANGUAGE'
p2587
asbag57
(g78
g59
NtRp2588
(dp2589
g62
(dp2590
g89
g90
ssg71
g2579
sg64
(lp2591
S':'
asbag57
(g78
g59
NtRp2592
(dp2593
g62
(dp2594
sg71
g2579
sg64
(lp2595
g57
(g58
g59
NtRp2596
(dp2597
g62
(dp2598
g70
I3
ssg71
g2592
sg64
(lp2599
g1069
asbasbasbag57
(g73
g59
NtRp2600
(dp2601
g62
(dp2602
sg71
g2512
sg64
(lp2603
g57
(g78
g59
NtRp2604
(dp2605
g62
(dp2606
g82
g83
ssg71
g2600
sg64
(lp2607
S'HTTP_CONNECTION'
p2608
asbag57
(g78
g59
NtRp2609
(dp2610
g62
(dp2611
g89
g90
ssg71
g2600
sg64
(lp2612
S':'
asbag57
(g78
g59
NtRp2613
(dp2614
g62
(dp2615
sg71
g2600
sg64
(lp2616
g57
(g58
g59
NtRp2617
(dp2618
g62
(dp2619
g70
I3
ssg71
g2613
sg64
(lp2620
g1091
asbasbasbag57
(g73
g59
NtRp2621
(dp2622
g62
(dp2623
sg71
g2512
sg64
(lp2624
g57
(g78
g59
NtRp2625
(dp2626
g62
(dp2627
g82
g83
ssg71
g2621
sg64
(lp2628
S'HTTP_COOKIE'
p2629
asbag57
(g78
g59
NtRp2630
(dp2631
g62
(dp2632
g89
g90
ssg71
g2621
sg64
(lp2633
S':'
asbag57
(g78
g59
NtRp2634
(dp2635
g62
(dp2636
sg71
g2621
sg64
(lp2637
g57
(g58
g59
NtRp2638
(dp2639
g62
(dp2640
g70
I3
ssg71
g2634
sg64
(lp2641
g1113
asbasbasbag57
(g73
g59
NtRp2642
(dp2643
g62
(dp2644
sg71
g2512
sg64
(lp2645
g57
(g78
g59
NtRp2646
(dp2647
g62
(dp2648
g82
g83
ssg71
g2642
sg64
(lp2649
S'HTTP_HOST'
p2650
asbag57
(g78
g59
NtRp2651
(dp2652
g62
(dp2653
g89
g90
ssg71
g2642
sg64
(lp2654
S':'
asbag57
(g78
g59
NtRp2655
(dp2656
g62
(dp2657
sg71
g2642
sg64
(lp2658
g57
(g58
g59
NtRp2659
(dp2660
g62
(dp2661
g70
I3
ssg71
g2655
sg64
(lp2662
g1135
asbasbasbag57
(g73
g59
NtRp2663
(dp2664
g62
(dp2665
sg71
g2512
sg64
(lp2666
g57
(g78
g59
NtRp2667
(dp2668
g62
(dp2669
g82
g83
ssg71
g2663
sg64
(lp2670
S'HTTP_REFERER'
p2671
asbag57
(g78
g59
NtRp2672
(dp2673
g62
(dp2674
g89
g90
ssg71
g2663
sg64
(lp2675
S':'
asbag57
(g78
g59
NtRp2676
(dp2677
g62
(dp2678
sg71
g2663
sg64
(lp2679
g57
(g58
g59
NtRp2680
(dp2681
g62
(dp2682
g70
I3
ssg71
g2676
sg64
(lp2683
g1157
asbasbasbag57
(g73
g59
NtRp2684
(dp2685
g62
(dp2686
sg71
g2512
sg64
(lp2687
g57
(g78
g59
NtRp2688
(dp2689
g62
(dp2690
g82
g83
ssg71
g2684
sg64
(lp2691
S'HTTP_USER_AGENT'
p2692
asbag57
(g78
g59
NtRp2693
(dp2694
g62
(dp2695
g89
g90
ssg71
g2684
sg64
(lp2696
S':'
asbag57
(g78
g59
NtRp2697
(dp2698
g62
(dp2699
sg71
g2684
sg64
(lp2700
g57
(g58
g59
NtRp2701
(dp2702
g62
(dp2703
g70
I3
ssg71
g2697
sg64
(lp2704
g1179
asbasbasbag57
(g73
g59
NtRp2705
(dp2706
g62
(dp2707
sg71
g2512
sg64
(lp2708
g57
(g78
g59
NtRp2709
(dp2710
g62
(dp2711
g82
g83
ssg71
g2705
sg64
(lp2712
S'PATH_INFO'
p2713
asbag57
(g78
g59
NtRp2714
(dp2715
g62
(dp2716
g89
g90
ssg71
g2705
sg64
(lp2717
S':'
asbag57
(g78
g59
NtRp2718
(dp2719
g62
(dp2720
sg71
g2705
sg64
(lp2721
g57
(g58
g59
NtRp2722
(dp2723
g62
(dp2724
g70
I3
ssg71
g2718
sg64
(lp2725
g1243
asbasbasbag57
(g73
g59
NtRp2726
(dp2727
g62
(dp2728
sg71
g2512
sg64
(lp2729
g57
(g78
g59
NtRp2730
(dp2731
g62
(dp2732
g82
g83
ssg71
g2726
sg64
(lp2733
S'QUERY_STRING'
p2734
asbag57
(g78
g59
NtRp2735
(dp2736
g62
(dp2737
g89
g90
ssg71
g2726
sg64
(lp2738
S':'
asbag57
(g78
g59
NtRp2739
(dp2740
g62
(dp2741
sg71
g2726
sg64
(lp2742
g57
(g58
g59
NtRp2743
(dp2744
g62
(dp2745
g70
I3
ssg71
g2739
sg64
(lp2746
g1265
asbasbasbag57
(g73
g59
NtRp2747
(dp2748
g62
(dp2749
sg71
g2512
sg64
(lp2750
g57
(g78
g59
NtRp2751
(dp2752
g62
(dp2753
g82
g83
ssg71
g2747
sg64
(lp2754
S'REMOTE_ADDR'
p2755
asbag57
(g78
g59
NtRp2756
(dp2757
g62
(dp2758
g89
g90
ssg71
g2747
sg64
(lp2759
S':'
asbag57
(g78
g59
NtRp2760
(dp2761
g62
(dp2762
sg71
g2747
sg64
(lp2763
g57
(g58
g59
NtRp2764
(dp2765
g62
(dp2766
g70
I3
ssg71
g2760
sg64
(lp2767
g190
asbasbasbag57
(g73
g59
NtRp2768
(dp2769
g62
(dp2770
sg71
g2512
sg64
(lp2771
g57
(g78
g59
NtRp2772
(dp2773
g62
(dp2774
g82
g83
ssg71
g2768
sg64
(lp2775
S'REMOTE_PORT'
p2776
asbag57
(g78
g59
NtRp2777
(dp2778
g62
(dp2779
g89
g90
ssg71
g2768
sg64
(lp2780
S':'
asbag57
(g78
g59
NtRp2781
(dp2782
g62
(dp2783
sg71
g2768
sg64
(lp2784
g57
(g58
g59
NtRp2785
(dp2786
g62
(dp2787
g70
I3
ssg71
g2781
sg64
(lp2788
g1308
asbasbasbag57
(g73
g59
NtRp2789
(dp2790
g62
(dp2791
sg71
g2512
sg64
(lp2792
g57
(g78
g59
NtRp2793
(dp2794
g62
(dp2795
g82
g83
ssg71
g2789
sg64
(lp2796
S'REQUEST_METHOD'
p2797
asbag57
(g78
g59
NtRp2798
(dp2799
g62
(dp2800
g89
g90
ssg71
g2789
sg64
(lp2801
S':'
asbag57
(g78
g59
NtRp2802
(dp2803
g62
(dp2804
sg71
g2789
sg64
(lp2805
g57
(g58
g59
NtRp2806
(dp2807
g62
(dp2808
g70
I3
ssg71
g2802
sg64
(lp2809
g1330
asbasbasbag57
(g73
g59
NtRp2810
(dp2811
g62
(dp2812
sg71
g2512
sg64
(lp2813
g57
(g78
g59
NtRp2814
(dp2815
g62
(dp2816
g82
g83
ssg71
g2810
sg64
(lp2817
S'SCRIPT_NAME'
p2818
asbag57
(g78
g59
NtRp2819
(dp2820
g62
(dp2821
g89
g90
ssg71
g2810
sg64
(lp2822
S':'
asbag57
(g78
g59
NtRp2823
(dp2824
g62
(dp2825
sg71
g2810
sg64
(lp2826
g57
(g58
g59
NtRp2827
(dp2828
g62
(dp2829
g70
I3
ssg71
g2823
sg64
(lp2830
S''
asbasbasbag57
(g73
g59
NtRp2831
(dp2832
g62
(dp2833
sg71
g2512
sg64
(lp2834
g57
(g78
g59
NtRp2835
(dp2836
g62
(dp2837
g82
g83
ssg71
g2831
sg64
(lp2838
S'SERVER_NAME'
p2839
asbag57
(g78
g59
NtRp2840
(dp2841
g62
(dp2842
g89
g90
ssg71
g2831
sg64
(lp2843
S':'
asbag57
(g78
g59
NtRp2844
(dp2845
g62
(dp2846
sg71
g2831
sg64
(lp2847
g57
(g58
g59
NtRp2848
(dp2849
g62
(dp2850
g70
I3
ssg71
g2844
sg64
(lp2851
g1373
asbasbasbag57
(g73
g59
NtRp2852
(dp2853
g62
(dp2854
sg71
g2512
sg64
(lp2855
g57
(g78
g59
NtRp2856
(dp2857
g62
(dp2858
g82
g83
ssg71
g2852
sg64
(lp2859
S'SERVER_PORT'
p2860
asbag57
(g78
g59
NtRp2861
(dp2862
g62
(dp2863
g89
g90
ssg71
g2852
sg64
(lp2864
S':'
asbag57
(g78
g59
NtRp2865
(dp2866
g62
(dp2867
sg71
g2852
sg64
(lp2868
g57
(g58
g59
NtRp2869
(dp2870
g62
(dp2871
g70
I3
ssg71
g2865
sg64
(lp2872
g1395
asbasbasbag57
(g73
g59
NtRp2873
(dp2874
g62
(dp2875
sg71
g2512
sg64
(lp2876
g57
(g78
g59
NtRp2877
(dp2878
g62
(dp2879
g82
g83
ssg71
g2873
sg64
(lp2880
S'SERVER_PROTOCOL'
p2881
asbag57
(g78
g59
NtRp2882
(dp2883
g62
(dp2884
g89
g90
ssg71
g2873
sg64
(lp2885
S':'
asbag57
(g78
g59
NtRp2886
(dp2887
g62
(dp2888
sg71
g2873
sg64
(lp2889
g57
(g58
g59
NtRp2890
(dp2891
g62
(dp2892
g70
I3
ssg71
g2886
sg64
(lp2893
g1417
asbasbasbag57
(g73
g59
NtRp2894
(dp2895
g62
(dp2896
sg71
g2512
sg64
(lp2897
g57
(g78
g59
NtRp2898
(dp2899
g62
(dp2900
g82
g83
ssg71
g2894
sg64
(lp2901
S'SERVER_SOFTWARE'
p2902
asbag57
(g78
g59
NtRp2903
(dp2904
g62
(dp2905
g89
g90
ssg71
g2894
sg64
(lp2906
S':'
asbag57
(g78
g59
NtRp2907
(dp2908
g62
(dp2909
sg71
g2894
sg64
(lp2910
g57
(g58
g59
NtRp2911
(dp2912
g62
(dp2913
g70
I3
ssg71
g2907
sg64
(lp2914
g1439
asbasbasbag57
(g73
g59
NtRp2915
(dp2916
g62
(dp2917
sg71
g2512
sg64
(lp2918
g57
(g78
g59
NtRp2919
(dp2920
g62
(dp2921
g82
g83
ssg71
g2915
sg64
(lp2922
S'wsgi.errors'
p2923
asbag57
(g78
g59
NtRp2924
(dp2925
g62
(dp2926
g89
g90
ssg71
g2915
sg64
(lp2927
S':'
asbag57
(g78
g59
NtRp2928
(dp2929
g62
(dp2930
sg71
g2915
sg64
(lp2931
g57
(g58
g59
NtRp2932
(dp2933
g62
(dp2934
g70
I3
ssg71
g2928
sg64
(lp2935
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p2936
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2512
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'wsgi.file_wrapper'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
S'<class wsgiref.util.FileWrapper at 0x1018c6120>'
p2958
asbasbasbag57
(g73
g59
NtRp2959
(dp2960
g62
(dp2961
sg71
g2512
sg64
(lp2962
g57
(g78
g59
NtRp2963
(dp2964
g62
(dp2965
g82
g83
ssg71
g2959
sg64
(lp2966
S'wsgi.input'
p2967
asbag57
(g78
g59
NtRp2968
(dp2969
g62
(dp2970
g89
g90
ssg71
g2959
sg64
(lp2971
S':'
asbag57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
sg71
g2959
sg64
(lp2975
g57
(g58
g59
NtRp2976
(dp2977
g62
(dp2978
g70
I3
ssg71
g2972
sg64
(lp2979
S'<cStringIO.StringO object at 0x10c34f2d0>'
p2980
asbasbasbag57
(g73
g59
NtRp2981
(dp2982
g62
(dp2983
sg71
g2512
sg64
(lp2984
g57
(g78
g59
NtRp2985
(dp2986
g62
(dp2987
g82
g83
ssg71
g2981
sg64
(lp2988
S'wsgi.multiprocess'
p2989
asbag57
(g78
g59
NtRp2990
(dp2991
g62
(dp2992
g89
g90
ssg71
g2981
sg64
(lp2993
S':'
asbag57
(g78
g59
NtRp2994
(dp2995
g62
(dp2996
sg71
g2981
sg64
(lp2997
g57
(g58
g59
NtRp2998
(dp2999
g62
(dp3000
g70
I3
ssg71
g2994
sg64
(lp3001
g100
asbasbasbag57
(g73
g59
NtRp3002
(dp3003
g62
(dp3004
sg71
g2512
sg64
(lp3005
g57
(g78
g59
NtRp3006
(dp3007
g62
(dp3008
g82
g83
ssg71
g3002
sg64
(lp3009
S'wsgi.multithread'
p3010
asbag57
(g78
g59
NtRp3011
(dp3012
g62
(dp3013
g89
g90
ssg71
g3002
sg64
(lp3014
S':'
asbag57
(g78
g59
NtRp3015
(dp3016
g62
(dp3017
sg71
g3002
sg64
(lp3018
g57
(g58
g59
NtRp3019
(dp3020
g62
(dp3021
g70
I3
ssg71
g3015
sg64
(lp3022
g1679
asbasbasbag57
(g73
g59
NtRp3023
(dp3024
g62
(dp3025
sg71
g2512
sg64
(lp3026
g57
(g78
g59
NtRp3027
(dp3028
g62
(dp3029
g82
g83
ssg71
g3023
sg64
(lp3030
S'wsgi.run_once'
p3031
asbag57
(g78
g59
NtRp3032
(dp3033
g62
(dp3034
g89
g90
ssg71
g3023
sg64
(lp3035
S':'
asbag57
(g78
g59
NtRp3036
(dp3037
g62
(dp3038
sg71
g3023
sg64
(lp3039
g57
(g58
g59
NtRp3040
(dp3041
g62
(dp3042
g70
I3
ssg71
g3036
sg64
(lp3043
g100
asbasbasbag57
(g73
g59
NtRp3044
(dp3045
g62
(dp3046
sg71
g2512
sg64
(lp3047
g57
(g78
g59
NtRp3048
(dp3049
g62
(dp3050
g82
g83
ssg71
g3044
sg64
(lp3051
S'wsgi.url_scheme'
p3052
asbag57
(g78
g59
NtRp3053
(dp3054
g62
(dp3055
g89
g90
ssg71
g3044
sg64
(lp3056
S':'
asbag57
(g78
g59
NtRp3057
(dp3058
g62
(dp3059
sg71
g3044
sg64
(lp3060
g57
(g58
g59
NtRp3061
(dp3062
g62
(dp3063
g70
I3
ssg71
g3057
sg64
(lp3064
g1722
asbasbasbag57
(g73
g59
NtRp3065
(dp3066
g62
(dp3067
sg71
g2512
sg64
(lp3068
g57
(g78
g59
NtRp3069
(dp3070
g62
(dp3071
g82
g83
ssg71
g3065
sg64
(lp3072
S'wsgi.version'
p3073
asbag57
(g78
g59
NtRp3074
(dp3075
g62
(dp3076
g89
g90
ssg71
g3065
sg64
(lp3077
S':'
asbag57
(g78
g59
NtRp3078
(dp3079
g62
(dp3080
sg71
g3065
sg64
(lp3081
g57
(g58
g59
NtRp3082
(dp3083
g62
(dp3084
g70
I3
ssg71
g3078
sg64
(lp3085
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3086
(lp3087
(dp3088
S'file'
p3089
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3090
sS'dump'
p3091
(dp3092
S'environment'
p3093
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3094
sS'ccode'
p3095
S'<code object <module> at 0x104976cb0, file "/Use...s/SeniorProject/controllers/default.py", line 13>'
p3096
ssS'lnum'
p3097
I205
sS'lines'
p3098
(dp3099
I200
S'    try:'
p3100
sI201
S'        if type(code) == types.CodeType:'
p3101
sI202
S'            ccode = code'
p3102
sI203
S'        else:'
p3103
sI204
S'            ccode = compile2(code,layer)'
p3104
sI205
S'        exec ccode in environment'
p3105
sI206
S'    except HTTP:'
p3106
sI207
S'        raise'
p3107
sI208
S'    except RestrictedError:'
p3108
sI209
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3109
ssS'call'
p3110
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3111
sS'func'
p3112
S'restricted'
p3113
sa(dp3114
g3089
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p3115
sg3091
(dp3116
sg3097
I970
sg3098
(dp3117
I960
S''
sI961
S'    if user.projects != None and len(user.projects) >= 1: #Make a checkbox for all the projects that the user is associatewith'
p3118
sI962
S'        for projId in user.projects:'
p3119
sI963
S'            project = db((db.Project.archived == False) & (db.Project.projNum == projId)).select().first()'
p3120
sI964
S'            html +=  \'<input value="\'+str(project.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(project.projNum)+"</br>"'
p3121
sI965
S'    else:'
p3122
sI966
S'        html = "<p>Not on any projects</p>"'
p3123
sI967
S''
sI968
S'    return html'
p3124
sI959
S"    user = db(db.auth_user.id == id).select().first()     #Get the user given the user's id"
p3125
ssg3110
S'()'
p3126
sg3112
S'<module>'
p3127
sa(dp3128
g3089
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/globals.py'
p3129
sg3091
(dp3130
S'self'
p3131
S'undefined'
p3132
sS'f'
S'<function showform>'
p3133
ssg3097
I173
sg3098
(dp3134
I168
S'        self.menu = []             # used by the default view layout'
p3135
sI169
S'        self.files = []            # used by web2py_ajax.html'
p3136
sI170
S'        self.generic_patterns = [] # patterns to allow generic views'
p3137
sI171
S"        self.delimiters = ('{{','}}')"
p3138
sI172
S'        self._vars = None'
p3139
sI173
S'        self._caller = lambda f: f()'
p3140
sI174
S'        self._view_environment = None'
p3141
sI175
S'        self._custom_commit = None'
p3142
sI176
S'        self._custom_rollback = None'
p3143
sI177
S''
ssg3110
S'(f=<function showform>)'
p3144
sg3112
S'<lambda>'
p3145
sa(dp3146
g3089
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/tools.py'
p3147
sg3091
(dp3148
S'action'
p3149
S'<function showform>'
p3150
sS'a'
S'()'
p3151
sS'b'
g45
ssg3097
I2575
sg3098
(dp3152
I2570
S'                    flag = condition'
p3153
sI2571
S'                if not flag:'
p3154
sI2572
S'                    current.session.flash = self.messages.access_denied'
p3155
sI2573
S'                    return call_or_redirect('
p3156
sI2574
S'                        self.settings.on_failed_authorization)'
p3157
sI2575
S'                return action(*a, **b)'
p3158
sI2576
S'            f.__doc__ = action.__doc__'
p3159
sI2577
S'            f.__name__ = action.__name__'
p3160
sI2578
S'            f.__dict__.update(action.__dict__)'
p3161
sI2579
S'            return f'
p3162
ssg3110
S'(*a=(), **b={})'
p3163
sg3112
S'f'
sa(dp3164
g3089
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p3165
sg3091
(dp3166
S'global URL'
p3167
S'<function URL>'
p3168
sS'xredirect'
p3169
g3132
ssg3097
I578
sg3098
(dp3170
I576
S'        else:'
p3171
sI577
S"            response.flash = 'Please fill out the form'"
p3172
sI578
S'        xredirect(URL("default","index"))'
p3173
sI579
S'    return dict(displayForm=displayForm,'
p3174
sI580
S'                form=form,'
p3175
sI581
S'                myProfileForm=myProfileForm,'
p3176
sI582
S'                projects=projects,'
p3177
sI573
S''
sI574
S'        elif form.errors:'
p3178
sI575
S"            response.flash = 'Form has errors'"
p3179
ssg3110
S'()'
p3180
sg3112
S'showform'
p3181
sasS'pyver'
p3182
S'Python 2.7.2: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python'
p3183
sS'session'
p3184
g57
(g58
g59
NtRp3185
(dp3186
g62
(dp3187
sg64
(lp3188
g57
(g66
g59
NtRp3189
(dp3190
g62
(dp3191
g70
I5
ssg71
Nsg64
(lp3192
g57
(g73
g59
NtRp3193
(dp3194
g62
(dp3195
sg71
g3189
sg64
(lp3196
g57
(g78
g59
NtRp3197
(dp3198
g62
(dp3199
g82
g83
ssg71
g3193
sg64
(lp3200
S'auth'
p3201
asbag57
(g78
g59
NtRp3202
(dp3203
g62
(dp3204
g89
g90
ssg71
g3193
sg64
(lp3205
S':'
asbag57
(g78
g59
NtRp3206
(dp3207
g62
(dp3208
sg71
g3193
sg64
(lp3209
g57
(g58
g59
NtRp3210
(dp3211
g62
(dp3212
g70
I5
ssg71
g3206
sg64
(lp3213
g57
(g66
g59
NtRp3214
(dp3215
g62
(dp3216
g70
I4
ssg71
Nsg64
(lp3217
g57
(g73
g59
NtRp3218
(dp3219
g62
(dp3220
sg71
g3214
sg64
(lp3221
g57
(g78
g59
NtRp3222
(dp3223
g62
(dp3224
g82
g83
ssg71
g3218
sg64
(lp3225
S'expiration'
p3226
asbag57
(g78
g59
NtRp3227
(dp3228
g62
(dp3229
g89
g90
ssg71
g3218
sg64
(lp3230
S':'
asbag57
(g78
g59
NtRp3231
(dp3232
g62
(dp3233
sg71
g3218
sg64
(lp3234
g57
(g58
g59
NtRp3235
(dp3236
g62
(dp3237
g70
I4
ssg71
g3231
sg64
(lp3238
S'3600'
p3239
asbasbasbag57
(g73
g59
NtRp3240
(dp3241
g62
(dp3242
sg71
g3214
sg64
(lp3243
g57
(g78
g59
NtRp3244
(dp3245
g62
(dp3246
g82
g83
ssg71
g3240
sg64
(lp3247
S'hmac_key'
p3248
asbag57
(g78
g59
NtRp3249
(dp3250
g62
(dp3251
g89
g90
ssg71
g3240
sg64
(lp3252
S':'
asbag57
(g78
g59
NtRp3253
(dp3254
g62
(dp3255
sg71
g3240
sg64
(lp3256
g57
(g58
g59
NtRp3257
(dp3258
g62
(dp3259
g70
I4
ssg71
g3253
sg64
(lp3260
S'8283127a-f7e0-4b3a-a237-254d6b628a96'
p3261
asbasbasbag57
(g73
g59
NtRp3262
(dp3263
g62
(dp3264
sg71
g3214
sg64
(lp3265
g57
(g78
g59
NtRp3266
(dp3267
g62
(dp3268
g82
g83
ssg71
g3262
sg64
(lp3269
S'last_visit'
p3270
asbag57
(g78
g59
NtRp3271
(dp3272
g62
(dp3273
g89
g90
ssg71
g3262
sg64
(lp3274
S':'
asbag57
(g78
g59
NtRp3275
(dp3276
g62
(dp3277
sg71
g3262
sg64
(lp3278
g57
(g58
g59
NtRp3279
(dp3280
g62
(dp3281
g70
I4
ssg71
g3275
sg64
(lp3282
S'datetime.datetime(2013, 4, 18, 13, 2, 39, 399297)'
p3283
asbasbasbag57
(g73
g59
NtRp3284
(dp3285
g62
(dp3286
sg71
g3214
sg64
(lp3287
g57
(g78
g59
NtRp3288
(dp3289
g62
(dp3290
g82
g83
ssg71
g3284
sg64
(lp3291
S'remember'
p3292
asbag57
(g78
g59
NtRp3293
(dp3294
g62
(dp3295
g89
g90
ssg71
g3284
sg64
(lp3296
S':'
asbag57
(g78
g59
NtRp3297
(dp3298
g62
(dp3299
sg71
g3284
sg64
(lp3300
g57
(g58
g59
NtRp3301
(dp3302
g62
(dp3303
g70
I4
ssg71
g3297
sg64
(lp3304
g100
asbasbasbag57
(g73
g59
NtRp3305
(dp3306
g62
(dp3307
sg71
g3214
sg64
(lp3308
g57
(g78
g59
NtRp3309
(dp3310
g62
(dp3311
g82
g83
ssg71
g3305
sg64
(lp3312
S'user'
p3313
asbag57
(g78
g59
NtRp3314
(dp3315
g62
(dp3316
g89
g90
ssg71
g3305
sg64
(lp3317
S':'
asbag57
(g78
g59
NtRp3318
(dp3319
g62
(dp3320
sg71
g3305
sg64
(lp3321
g57
(g58
g59
NtRp3322
(dp3323
g62
(dp3324
g70
I4
ssg71
g3318
sg64
(lp3325
g57
(g66
g59
NtRp3326
(dp3327
g62
(dp3328
g70
I3
ssg71
Nsg64
(lp3329
g57
(g73
g59
NtRp3330
(dp3331
g62
(dp3332
sg71
g3326
sg64
(lp3333
g57
(g78
g59
NtRp3334
(dp3335
g62
(dp3336
g82
g83
ssg71
g3330
sg64
(lp3337
S'email'
p3338
asbag57
(g78
g59
NtRp3339
(dp3340
g62
(dp3341
g89
g90
ssg71
g3330
sg64
(lp3342
S':'
asbag57
(g78
g59
NtRp3343
(dp3344
g62
(dp3345
sg71
g3330
sg64
(lp3346
g57
(g58
g59
NtRp3347
(dp3348
g62
(dp3349
g70
I3
ssg71
g3343
sg64
(lp3350
S'hainna01@luther.edu'
p3351
asbasbasbag57
(g73
g59
NtRp3352
(dp3353
g62
(dp3354
sg71
g3326
sg64
(lp3355
g57
(g78
g59
NtRp3356
(dp3357
g62
(dp3358
g82
g83
ssg71
g3352
sg64
(lp3359
S'first_name'
p3360
asbag57
(g78
g59
NtRp3361
(dp3362
g62
(dp3363
g89
g90
ssg71
g3352
sg64
(lp3364
S':'
asbag57
(g78
g59
NtRp3365
(dp3366
g62
(dp3367
sg71
g3352
sg64
(lp3368
g57
(g58
g59
NtRp3369
(dp3370
g62
(dp3371
g70
I3
ssg71
g3365
sg64
(lp3372
S'Nathan'
p3373
asbasbasbag57
(g73
g59
NtRp3374
(dp3375
g62
(dp3376
sg71
g3326
sg64
(lp3377
g57
(g78
g59
NtRp3378
(dp3379
g62
(dp3380
g82
g83
ssg71
g3374
sg64
(lp3381
S'id'
p3382
asbag57
(g78
g59
NtRp3383
(dp3384
g62
(dp3385
g89
g90
ssg71
g3374
sg64
(lp3386
S':'
asbag57
(g78
g59
NtRp3387
(dp3388
g62
(dp3389
sg71
g3374
sg64
(lp3390
g57
(g58
g59
NtRp3391
(dp3392
g62
(dp3393
g70
I3
ssg71
g3387
sg64
(lp3394
S'1'
asbasbasbag57
(g73
g59
NtRp3395
(dp3396
g62
(dp3397
sg71
g3326
sg64
(lp3398
g57
(g78
g59
NtRp3399
(dp3400
g62
(dp3401
g82
g83
ssg71
g3395
sg64
(lp3402
S'last_name'
p3403
asbag57
(g78
g59
NtRp3404
(dp3405
g62
(dp3406
g89
g90
ssg71
g3395
sg64
(lp3407
S':'
asbag57
(g78
g59
NtRp3408
(dp3409
g62
(dp3410
sg71
g3395
sg64
(lp3411
g57
(g58
g59
NtRp3412
(dp3413
g62
(dp3414
g70
I3
ssg71
g3408
sg64
(lp3415
S'Haines'
p3416
asbasbasbag57
(g73
g59
NtRp3417
(dp3418
g62
(dp3419
sg71
g3326
sg64
(lp3420
g57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
g82
g83
ssg71
g3417
sg64
(lp3424
S'password'
p3425
asbag57
(g78
g59
NtRp3426
(dp3427
g62
(dp3428
g89
g90
ssg71
g3417
sg64
(lp3429
S':'
asbag57
(g78
g59
NtRp3430
(dp3431
g62
(dp3432
sg71
g3417
sg64
(lp3433
g57
(g58
g59
NtRp3434
(dp3435
g62
(dp3436
g70
I3
ssg71
g3430
sg64
(lp3437
S'fe1e96030dadc5f9d0d88de7261b31f4'
p3438
asbasbasbag57
(g73
g59
NtRp3439
(dp3440
g62
(dp3441
sg71
g3326
sg64
(lp3442
g57
(g78
g59
NtRp3443
(dp3444
g62
(dp3445
g82
g83
ssg71
g3439
sg64
(lp3446
S'phone'
p3447
asbag57
(g78
g59
NtRp3448
(dp3449
g62
(dp3450
g89
g90
ssg71
g3439
sg64
(lp3451
S':'
asbag57
(g78
g59
NtRp3452
(dp3453
g62
(dp3454
sg71
g3439
sg64
(lp3455
g57
(g58
g59
NtRp3456
(dp3457
g62
(dp3458
g70
I3
ssg71
g3452
sg64
(lp3459
S'786767676767'
p3460
asbasbasbag57
(g73
g59
NtRp3461
(dp3462
g62
(dp3463
sg71
g3326
sg64
(lp3464
g57
(g78
g59
NtRp3465
(dp3466
g62
(dp3467
g82
g83
ssg71
g3461
sg64
(lp3468
S'projects'
p3469
asbag57
(g78
g59
NtRp3470
(dp3471
g62
(dp3472
g89
g90
ssg71
g3461
sg64
(lp3473
S':'
asbag57
(g78
g59
NtRp3474
(dp3475
g62
(dp3476
sg71
g3461
sg64
(lp3477
g57
(g58
g59
NtRp3478
(dp3479
g62
(dp3480
g70
I3
ssg71
g3474
sg64
(lp3481
g57
(g66
g59
NtRp3482
(dp3483
g62
(dp3484
g70
I2
ssg71
Nsg64
(lp3485
sbasbasbasbag57
(g73
g59
NtRp3486
(dp3487
g62
(dp3488
sg71
g3326
sg64
(lp3489
g57
(g78
g59
NtRp3490
(dp3491
g62
(dp3492
g82
g83
ssg71
g3486
sg64
(lp3493
S'registration_id'
p3494
asbag57
(g78
g59
NtRp3495
(dp3496
g62
(dp3497
g89
g90
ssg71
g3486
sg64
(lp3498
S':'
asbag57
(g78
g59
NtRp3499
(dp3500
g62
(dp3501
sg71
g3486
sg64
(lp3502
g57
(g58
g59
NtRp3503
(dp3504
g62
(dp3505
g70
I3
ssg71
g3499
sg64
(lp3506
S''
asbasbasbag57
(g73
g59
NtRp3507
(dp3508
g62
(dp3509
sg71
g3326
sg64
(lp3510
g57
(g78
g59
NtRp3511
(dp3512
g62
(dp3513
g82
g83
ssg71
g3507
sg64
(lp3514
S'registration_key'
p3515
asbag57
(g78
g59
NtRp3516
(dp3517
g62
(dp3518
g89
g90
ssg71
g3507
sg64
(lp3519
S':'
asbag57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
sg71
g3507
sg64
(lp3523
g57
(g58
g59
NtRp3524
(dp3525
g62
(dp3526
g70
I3
ssg71
g3520
sg64
(lp3527
S''
asbasbasbag57
(g73
g59
NtRp3528
(dp3529
g62
(dp3530
sg71
g3326
sg64
(lp3531
g57
(g78
g59
NtRp3532
(dp3533
g62
(dp3534
g82
g83
ssg71
g3528
sg64
(lp3535
S'reset_password_key'
p3536
asbag57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
g89
g90
ssg71
g3528
sg64
(lp3540
S':'
asbag57
(g78
g59
NtRp3541
(dp3542
g62
(dp3543
sg71
g3528
sg64
(lp3544
g57
(g58
g59
NtRp3545
(dp3546
g62
(dp3547
g70
I3
ssg71
g3541
sg64
(lp3548
S''
asbasbasbag57
(g73
g59
NtRp3549
(dp3550
g62
(dp3551
sg71
g3326
sg64
(lp3552
g57
(g78
g59
NtRp3553
(dp3554
g62
(dp3555
g82
g83
ssg71
g3549
sg64
(lp3556
S'role'
p3557
asbag57
(g78
g59
NtRp3558
(dp3559
g62
(dp3560
g89
g90
ssg71
g3549
sg64
(lp3561
S':'
asbag57
(g78
g59
NtRp3562
(dp3563
g62
(dp3564
sg71
g3549
sg64
(lp3565
g57
(g58
g59
NtRp3566
(dp3567
g62
(dp3568
g70
I3
ssg71
g3562
sg64
(lp3569
S'asdfasdf'
p3570
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3571
(dp3572
g62
(dp3573
sg71
g3214
sg64
(lp3574
g57
(g78
g59
NtRp3575
(dp3576
g62
(dp3577
g82
g83
ssg71
g3571
sg64
(lp3578
S'user_groups'
p3579
asbag57
(g78
g59
NtRp3580
(dp3581
g62
(dp3582
g89
g90
ssg71
g3571
sg64
(lp3583
S':'
asbag57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
sg71
g3571
sg64
(lp3587
g57
(g58
g59
NtRp3588
(dp3589
g62
(dp3590
g70
I4
ssg71
g3584
sg64
(lp3591
g57
(g66
g59
NtRp3592
(dp3593
g62
(dp3594
g70
I3
ssg71
Nsg64
(lp3595
g57
(g73
g59
NtRp3596
(dp3597
g62
(dp3598
sg71
g3592
sg64
(lp3599
g57
(g78
g59
NtRp3600
(dp3601
g62
(dp3602
g82
g83
ssg71
g3596
sg64
(lp3603
S'2'
asbag57
(g78
g59
NtRp3604
(dp3605
g62
(dp3606
g89
g90
ssg71
g3596
sg64
(lp3607
S':'
asbag57
(g78
g59
NtRp3608
(dp3609
g62
(dp3610
sg71
g3596
sg64
(lp3611
g57
(g58
g59
NtRp3612
(dp3613
g62
(dp3614
g70
I3
ssg71
g3608
sg64
(lp3615
S'Admin'
p3616
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3617
(dp3618
g62
(dp3619
sg71
g3189
sg64
(lp3620
g57
(g78
g59
NtRp3621
(dp3622
g62
(dp3623
g82
g83
ssg71
g3617
sg64
(lp3624
S'last_query'
p3625
asbag57
(g78
g59
NtRp3626
(dp3627
g62
(dp3628
g89
g90
ssg71
g3617
sg64
(lp3629
S':'
asbag57
(g78
g59
NtRp3630
(dp3631
g62
(dp3632
sg71
g3617
sg64
(lp3633
g57
(g58
g59
NtRp3634
(dp3635
g62
(dp3636
g70
I5
ssg71
g3630
sg64
(lp3637
S'db.auth_membership.id>0'
p3638
asbasbasbasbasbsS'etype'
p3639
S"<type 'exceptions.NameError'>"
p3640
sS'date'
p3641
S'Thu Apr 18 13:07:34 2013'
p3642
sS'response'
p3643
g57
(g58
g59
NtRp3644
(dp3645
g62
(dp3646
sg64
(lp3647
g57
(g66
g59
NtRp3648
(dp3649
g62
(dp3650
g70
I5
ssg71
Nsg64
(lp3651
g57
(g73
g59
NtRp3652
(dp3653
g62
(dp3654
sg71
g3648
sg64
(lp3655
g57
(g78
g59
NtRp3656
(dp3657
g62
(dp3658
g82
g83
ssg71
g3652
sg64
(lp3659
g155
asbag57
(g78
g59
NtRp3660
(dp3661
g62
(dp3662
g89
g90
ssg71
g3652
sg64
(lp3663
S':'
asbag57
(g78
g59
NtRp3664
(dp3665
g62
(dp3666
sg71
g3652
sg64
(lp3667
g57
(g58
g59
NtRp3668
(dp3669
g62
(dp3670
g70
I5
ssg71
g3664
sg64
(lp3671
S'<cStringIO.StringO object at 0x10c3539d0>'
p3672
asbasbasbag57
(g73
g59
NtRp3673
(dp3674
g62
(dp3675
sg71
g3648
sg64
(lp3676
g57
(g78
g59
NtRp3677
(dp3678
g62
(dp3679
g82
g83
ssg71
g3673
sg64
(lp3680
g221
asbag57
(g78
g59
NtRp3681
(dp3682
g62
(dp3683
g89
g90
ssg71
g3673
sg64
(lp3684
S':'
asbag57
(g78
g59
NtRp3685
(dp3686
g62
(dp3687
sg71
g3673
sg64
(lp3688
g57
(g58
g59
NtRp3689
(dp3690
g62
(dp3691
g70
I5
ssg71
g3685
sg64
(lp3692
g57
(g66
g59
NtRp3693
(dp3694
g62
(dp3695
g70
I4
ssg71
Nsg64
(lp3696
g57
(g73
g59
NtRp3697
(dp3698
g62
(dp3699
sg71
g3693
sg64
(lp3700
g57
(g78
g59
NtRp3701
(dp3702
g62
(dp3703
g82
g83
ssg71
g3697
sg64
(lp3704
S'session_id_seniorproject'
p3705
asbag57
(g78
g59
NtRp3706
(dp3707
g62
(dp3708
g89
g90
ssg71
g3697
sg64
(lp3709
S':'
asbag57
(g78
g59
NtRp3710
(dp3711
g62
(dp3712
sg71
g3697
sg64
(lp3713
g57
(g58
g59
NtRp3714
(dp3715
g62
(dp3716
g70
I4
ssg71
g3710
sg64
(lp3717
g57
(g66
g59
NtRp3718
(dp3719
g62
(dp3720
g70
I3
ssg71
Nsg64
(lp3721
g57
(g73
g59
NtRp3722
(dp3723
g62
(dp3724
sg71
g3718
sg64
(lp3725
g57
(g78
g59
NtRp3726
(dp3727
g62
(dp3728
g82
g83
ssg71
g3722
sg64
(lp3729
g271
asbag57
(g78
g59
NtRp3730
(dp3731
g62
(dp3732
g89
g90
ssg71
g3722
sg64
(lp3733
S':'
asbag57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3722
sg64
(lp3737
g57
(g58
g59
NtRp3738
(dp3739
g62
(dp3740
g70
I3
ssg71
g3734
sg64
(lp3741
S''
asbasbasbag57
(g73
g59
NtRp3742
(dp3743
g62
(dp3744
sg71
g3718
sg64
(lp3745
g57
(g78
g59
NtRp3746
(dp3747
g62
(dp3748
g82
g83
ssg71
g3742
sg64
(lp3749
g292
asbag57
(g78
g59
NtRp3750
(dp3751
g62
(dp3752
g89
g90
ssg71
g3742
sg64
(lp3753
S':'
asbag57
(g78
g59
NtRp3754
(dp3755
g62
(dp3756
sg71
g3742
sg64
(lp3757
g57
(g58
g59
NtRp3758
(dp3759
g62
(dp3760
g70
I3
ssg71
g3754
sg64
(lp3761
S''
asbasbasbag57
(g73
g59
NtRp3762
(dp3763
g62
(dp3764
sg71
g3718
sg64
(lp3765
g57
(g78
g59
NtRp3766
(dp3767
g62
(dp3768
g82
g83
ssg71
g3762
sg64
(lp3769
g313
asbag57
(g78
g59
NtRp3770
(dp3771
g62
(dp3772
g89
g90
ssg71
g3762
sg64
(lp3773
S':'
asbag57
(g78
g59
NtRp3774
(dp3775
g62
(dp3776
sg71
g3762
sg64
(lp3777
g57
(g58
g59
NtRp3778
(dp3779
g62
(dp3780
g70
I3
ssg71
g3774
sg64
(lp3781
S''
asbasbasbag57
(g73
g59
NtRp3782
(dp3783
g62
(dp3784
sg71
g3718
sg64
(lp3785
g57
(g78
g59
NtRp3786
(dp3787
g62
(dp3788
g82
g83
ssg71
g3782
sg64
(lp3789
g334
asbag57
(g78
g59
NtRp3790
(dp3791
g62
(dp3792
g89
g90
ssg71
g3782
sg64
(lp3793
S':'
asbag57
(g78
g59
NtRp3794
(dp3795
g62
(dp3796
sg71
g3782
sg64
(lp3797
g57
(g58
g59
NtRp3798
(dp3799
g62
(dp3800
g70
I3
ssg71
g3794
sg64
(lp3801
S''
asbasbasbag57
(g73
g59
NtRp3802
(dp3803
g62
(dp3804
sg71
g3718
sg64
(lp3805
g57
(g78
g59
NtRp3806
(dp3807
g62
(dp3808
g82
g83
ssg71
g3802
sg64
(lp3809
g355
asbag57
(g78
g59
NtRp3810
(dp3811
g62
(dp3812
g89
g90
ssg71
g3802
sg64
(lp3813
S':'
asbag57
(g78
g59
NtRp3814
(dp3815
g62
(dp3816
sg71
g3802
sg64
(lp3817
g57
(g58
g59
NtRp3818
(dp3819
g62
(dp3820
g70
I3
ssg71
g3814
sg64
(lp3821
S''
asbasbasbag57
(g73
g59
NtRp3822
(dp3823
g62
(dp3824
sg71
g3718
sg64
(lp3825
g57
(g78
g59
NtRp3826
(dp3827
g62
(dp3828
g82
g83
ssg71
g3822
sg64
(lp3829
g376
asbag57
(g78
g59
NtRp3830
(dp3831
g62
(dp3832
g89
g90
ssg71
g3822
sg64
(lp3833
S':'
asbag57
(g78
g59
NtRp3834
(dp3835
g62
(dp3836
sg71
g3822
sg64
(lp3837
g57
(g58
g59
NtRp3838
(dp3839
g62
(dp3840
g70
I3
ssg71
g3834
sg64
(lp3841
S'/'
asbasbasbag57
(g73
g59
NtRp3842
(dp3843
g62
(dp3844
sg71
g3718
sg64
(lp3845
g57
(g78
g59
NtRp3846
(dp3847
g62
(dp3848
g82
g83
ssg71
g3842
sg64
(lp3849
g397
asbag57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
g89
g90
ssg71
g3842
sg64
(lp3853
S':'
asbag57
(g78
g59
NtRp3854
(dp3855
g62
(dp3856
sg71
g3842
sg64
(lp3857
g57
(g58
g59
NtRp3858
(dp3859
g62
(dp3860
g70
I3
ssg71
g3854
sg64
(lp3861
S''
asbasbasbag57
(g73
g59
NtRp3862
(dp3863
g62
(dp3864
sg71
g3718
sg64
(lp3865
g57
(g78
g59
NtRp3866
(dp3867
g62
(dp3868
g82
g83
ssg71
g3862
sg64
(lp3869
g418
asbag57
(g78
g59
NtRp3870
(dp3871
g62
(dp3872
g89
g90
ssg71
g3862
sg64
(lp3873
S':'
asbag57
(g78
g59
NtRp3874
(dp3875
g62
(dp3876
sg71
g3862
sg64
(lp3877
g57
(g58
g59
NtRp3878
(dp3879
g62
(dp3880
g70
I3
ssg71
g3874
sg64
(lp3881
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3882
(dp3883
g62
(dp3884
sg71
g3648
sg64
(lp3885
g57
(g78
g59
NtRp3886
(dp3887
g62
(dp3888
g82
g83
ssg71
g3882
sg64
(lp3889
S'delimiters'
p3890
asbag57
(g78
g59
NtRp3891
(dp3892
g62
(dp3893
g89
g90
ssg71
g3882
sg64
(lp3894
S':'
asbag57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
sg71
g3882
sg64
(lp3898
g57
(g58
g59
NtRp3899
(dp3900
g62
(dp3901
g70
I5
ssg71
g3895
sg64
(lp3902
g57
(g66
g59
NtRp3903
(dp3904
g62
(dp3905
g70
I4
ssg71
Nsg64
(lp3906
g57
(g73
g59
NtRp3907
(dp3908
g62
(dp3909
sg71
g3903
sg64
(lp3910
g57
(g78
g59
NtRp3911
(dp3912
g62
(dp3913
sg71
g3907
sg64
(lp3914
g57
(g58
g59
NtRp3915
(dp3916
g62
(dp3917
g70
I4
ssg71
g3911
sg64
(lp3918
S'{{'
p3919
asbasbasbag57
(g73
g59
NtRp3920
(dp3921
g62
(dp3922
sg71
g3903
sg64
(lp3923
g57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
sg71
g3920
sg64
(lp3927
g57
(g58
g59
NtRp3928
(dp3929
g62
(dp3930
g70
I4
ssg71
g3924
sg64
(lp3931
S'}}'
p3932
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3648
sg64
(lp3936
g57
(g78
g59
NtRp3937
(dp3938
g62
(dp3939
g82
g83
ssg71
g3933
sg64
(lp3940
S'files'
p3941
asbag57
(g78
g59
NtRp3942
(dp3943
g62
(dp3944
g89
g90
ssg71
g3933
sg64
(lp3945
S':'
asbag57
(g78
g59
NtRp3946
(dp3947
g62
(dp3948
sg71
g3933
sg64
(lp3949
g57
(g58
g59
NtRp3950
(dp3951
g62
(dp3952
g70
I5
ssg71
g3946
sg64
(lp3953
g57
(g66
g59
NtRp3954
(dp3955
g62
(dp3956
g70
I4
ssg71
Nsg64
(lp3957
sbasbasbasbag57
(g73
g59
NtRp3958
(dp3959
g62
(dp3960
sg71
g3648
sg64
(lp3961
g57
(g78
g59
NtRp3962
(dp3963
g62
(dp3964
g82
g83
ssg71
g3958
sg64
(lp3965
S'flash'
p3966
asbag57
(g78
g59
NtRp3967
(dp3968
g62
(dp3969
g89
g90
ssg71
g3958
sg64
(lp3970
S':'
asbag57
(g78
g59
NtRp3971
(dp3972
g62
(dp3973
sg71
g3958
sg64
(lp3974
g57
(g58
g59
NtRp3975
(dp3976
g62
(dp3977
g70
I5
ssg71
g3971
sg64
(lp3978
S'Please fill out the form'
p3979
asbasbasbag57
(g73
g59
NtRp3980
(dp3981
g62
(dp3982
sg71
g3648
sg64
(lp3983
g57
(g78
g59
NtRp3984
(dp3985
g62
(dp3986
g82
g83
ssg71
g3980
sg64
(lp3987
S'generic_patterns'
p3988
asbag57
(g78
g59
NtRp3989
(dp3990
g62
(dp3991
g89
g90
ssg71
g3980
sg64
(lp3992
S':'
asbag57
(g78
g59
NtRp3993
(dp3994
g62
(dp3995
sg71
g3980
sg64
(lp3996
g57
(g58
g59
NtRp3997
(dp3998
g62
(dp3999
g70
I5
ssg71
g3993
sg64
(lp4000
g57
(g66
g59
NtRp4001
(dp4002
g62
(dp4003
g70
I4
ssg71
Nsg64
(lp4004
g57
(g73
g59
NtRp4005
(dp4006
g62
(dp4007
sg71
g4001
sg64
(lp4008
g57
(g78
g59
NtRp4009
(dp4010
g62
(dp4011
sg71
g4005
sg64
(lp4012
g57
(g58
g59
NtRp4013
(dp4014
g62
(dp4015
g70
I4
ssg71
g4009
sg64
(lp4016
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4017
(dp4018
g62
(dp4019
sg71
g3648
sg64
(lp4020
g57
(g78
g59
NtRp4021
(dp4022
g62
(dp4023
g82
g83
ssg71
g4017
sg64
(lp4024
S'headers'
p4025
asbag57
(g78
g59
NtRp4026
(dp4027
g62
(dp4028
g89
g90
ssg71
g4017
sg64
(lp4029
S':'
asbag57
(g78
g59
NtRp4030
(dp4031
g62
(dp4032
sg71
g4017
sg64
(lp4033
g57
(g58
g59
NtRp4034
(dp4035
g62
(dp4036
g70
I5
ssg71
g4030
sg64
(lp4037
g57
(g66
g59
NtRp4038
(dp4039
g62
(dp4040
g70
I4
ssg71
Nsg64
(lp4041
g57
(g73
g59
NtRp4042
(dp4043
g62
(dp4044
sg71
g4038
sg64
(lp4045
g57
(g78
g59
NtRp4046
(dp4047
g62
(dp4048
g82
g83
ssg71
g4042
sg64
(lp4049
S'Cache-Control'
p4050
asbag57
(g78
g59
NtRp4051
(dp4052
g62
(dp4053
g89
g90
ssg71
g4042
sg64
(lp4054
S':'
asbag57
(g78
g59
NtRp4055
(dp4056
g62
(dp4057
sg71
g4042
sg64
(lp4058
g57
(g58
g59
NtRp4059
(dp4060
g62
(dp4061
g70
I4
ssg71
g4055
sg64
(lp4062
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p4063
asbasbasbag57
(g73
g59
NtRp4064
(dp4065
g62
(dp4066
sg71
g4038
sg64
(lp4067
g57
(g78
g59
NtRp4068
(dp4069
g62
(dp4070
g82
g83
ssg71
g4064
sg64
(lp4071
S'Content-Type'
p4072
asbag57
(g78
g59
NtRp4073
(dp4074
g62
(dp4075
g89
g90
ssg71
g4064
sg64
(lp4076
S':'
asbag57
(g78
g59
NtRp4077
(dp4078
g62
(dp4079
sg71
g4064
sg64
(lp4080
g57
(g58
g59
NtRp4081
(dp4082
g62
(dp4083
g70
I4
ssg71
g4077
sg64
(lp4084
S'text/html; charset=utf-8'
p4085
asbasbasbag57
(g73
g59
NtRp4086
(dp4087
g62
(dp4088
sg71
g4038
sg64
(lp4089
g57
(g78
g59
NtRp4090
(dp4091
g62
(dp4092
g82
g83
ssg71
g4086
sg64
(lp4093
S'Expires'
p4094
asbag57
(g78
g59
NtRp4095
(dp4096
g62
(dp4097
g89
g90
ssg71
g4086
sg64
(lp4098
S':'
asbag57
(g78
g59
NtRp4099
(dp4100
g62
(dp4101
sg71
g4086
sg64
(lp4102
g57
(g58
g59
NtRp4103
(dp4104
g62
(dp4105
g70
I4
ssg71
g4099
sg64
(lp4106
S'Thu, 18 Apr 2013 18:07:29 GMT'
p4107
asbasbasbag57
(g73
g59
NtRp4108
(dp4109
g62
(dp4110
sg71
g4038
sg64
(lp4111
g57
(g78
g59
NtRp4112
(dp4113
g62
(dp4114
g82
g83
ssg71
g4108
sg64
(lp4115
S'Pragma'
p4116
asbag57
(g78
g59
NtRp4117
(dp4118
g62
(dp4119
g89
g90
ssg71
g4108
sg64
(lp4120
S':'
asbag57
(g78
g59
NtRp4121
(dp4122
g62
(dp4123
sg71
g4108
sg64
(lp4124
g57
(g58
g59
NtRp4125
(dp4126
g62
(dp4127
g70
I4
ssg71
g4121
sg64
(lp4128
S'no-cache'
p4129
asbasbasbag57
(g73
g59
NtRp4130
(dp4131
g62
(dp4132
sg71
g4038
sg64
(lp4133
g57
(g78
g59
NtRp4134
(dp4135
g62
(dp4136
g82
g83
ssg71
g4130
sg64
(lp4137
S'X-Powered-By'
p4138
asbag57
(g78
g59
NtRp4139
(dp4140
g62
(dp4141
g89
g90
ssg71
g4130
sg64
(lp4142
S':'
asbag57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g4130
sg64
(lp4146
g57
(g58
g59
NtRp4147
(dp4148
g62
(dp4149
g70
I4
ssg71
g4143
sg64
(lp4150
S'web2py'
p4151
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g3648
sg64
(lp4155
g57
(g78
g59
NtRp4156
(dp4157
g62
(dp4158
g82
g83
ssg71
g4152
sg64
(lp4159
S'menu'
p4160
asbag57
(g78
g59
NtRp4161
(dp4162
g62
(dp4163
g89
g90
ssg71
g4152
sg64
(lp4164
S':'
asbag57
(g78
g59
NtRp4165
(dp4166
g62
(dp4167
sg71
g4152
sg64
(lp4168
g57
(g58
g59
NtRp4169
(dp4170
g62
(dp4171
g70
I5
ssg71
g4165
sg64
(lp4172
g57
(g66
g59
NtRp4173
(dp4174
g62
(dp4175
g70
I4
ssg71
Nsg64
(lp4176
g57
(g73
g59
NtRp4177
(dp4178
g62
(dp4179
sg71
g4173
sg64
(lp4180
g57
(g78
g59
NtRp4181
(dp4182
g62
(dp4183
sg71
g4177
sg64
(lp4184
g57
(g58
g59
NtRp4185
(dp4186
g62
(dp4187
g70
I4
ssg71
g4181
sg64
(lp4188
g57
(g66
g59
NtRp4189
(dp4190
g62
(dp4191
g70
I3
ssg71
Nsg64
(lp4192
g57
(g73
g59
NtRp4193
(dp4194
g62
(dp4195
sg71
g4189
sg64
(lp4196
g57
(g78
g59
NtRp4197
(dp4198
g62
(dp4199
sg71
g4193
sg64
(lp4200
g57
(g58
g59
NtRp4201
(dp4202
g62
(dp4203
g70
I3
ssg71
g4197
sg64
(lp4204
cgluon.languages
lazyT_unpickle
p4205
(S't\x04\x00\x00\x00Home'
tRp4206
asbasbasbag57
(g73
g59
NtRp4207
(dp4208
g62
(dp4209
sg71
g4189
sg64
(lp4210
g57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
sg71
g4207
sg64
(lp4214
g57
(g58
g59
NtRp4215
(dp4216
g62
(dp4217
g70
I3
ssg71
g4211
sg64
(lp4218
g100
asbasbasbag57
(g73
g59
NtRp4219
(dp4220
g62
(dp4221
sg71
g4189
sg64
(lp4222
g57
(g78
g59
NtRp4223
(dp4224
g62
(dp4225
sg71
g4219
sg64
(lp4226
g57
(g58
g59
NtRp4227
(dp4228
g62
(dp4229
g70
I3
ssg71
g4223
sg64
(lp4230
S'/SeniorProject/default/index'
p4231
asbasbasbag57
(g73
g59
NtRp4232
(dp4233
g62
(dp4234
sg71
g4189
sg64
(lp4235
g57
(g78
g59
NtRp4236
(dp4237
g62
(dp4238
sg71
g4232
sg64
(lp4239
g57
(g58
g59
NtRp4240
(dp4241
g62
(dp4242
g70
I3
ssg71
g4236
sg64
(lp4243
g57
(g66
g59
NtRp4244
(dp4245
g62
(dp4246
g70
I2
ssg71
Nsg64
(lp4247
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4248
(dp4249
g62
(dp4250
sg71
g4173
sg64
(lp4251
g57
(g78
g59
NtRp4252
(dp4253
g62
(dp4254
sg71
g4248
sg64
(lp4255
g57
(g58
g59
NtRp4256
(dp4257
g62
(dp4258
g70
I4
ssg71
g4252
sg64
(lp4259
g57
(g66
g59
NtRp4260
(dp4261
g62
(dp4262
g70
I3
ssg71
Nsg64
(lp4263
g57
(g73
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g4260
sg64
(lp4267
g57
(g78
g59
NtRp4268
(dp4269
g62
(dp4270
sg71
g4264
sg64
(lp4271
g57
(g58
g59
NtRp4272
(dp4273
g62
(dp4274
g70
I3
ssg71
g4268
sg64
(lp4275
g57
(cgluon.html
SPAN
p4276
g59
NtRp4277
(dp4278
g62
(dp4279
g82
S'color:yellow'
p4280
ssg71
Nsg64
(lp4281
g4151
asbasbasbasbag57
(g73
g59
NtRp4282
(dp4283
g62
(dp4284
sg71
g4260
sg64
(lp4285
g57
(g78
g59
NtRp4286
(dp4287
g62
(dp4288
sg71
g4282
sg64
(lp4289
g57
(g58
g59
NtRp4290
(dp4291
g62
(dp4292
g70
I3
ssg71
g4286
sg64
(lp4293
g100
asbasbasbag57
(g73
g59
NtRp4294
(dp4295
g62
(dp4296
sg71
g4260
sg64
(lp4297
g57
(g78
g59
NtRp4298
(dp4299
g62
(dp4300
sg71
g4294
sg64
(lp4301
g57
(g58
g59
NtRp4302
(dp4303
g62
(dp4304
g70
I3
ssg71
g4298
sg64
(lp4305
S'None'
p4306
asbasbasbag57
(g73
g59
NtRp4307
(dp4308
g62
(dp4309
sg71
g4260
sg64
(lp4310
g57
(g78
g59
NtRp4311
(dp4312
g62
(dp4313
sg71
g4307
sg64
(lp4314
g57
(g58
g59
NtRp4315
(dp4316
g62
(dp4317
g70
I3
ssg71
g4311
sg64
(lp4318
g57
(g66
g59
NtRp4319
(dp4320
g62
(dp4321
g70
I2
ssg71
Nsg64
(lp4322
g57
(g73
g59
NtRp4323
(dp4324
g62
(dp4325
sg71
g4319
sg64
(lp4326
g57
(g78
g59
NtRp4327
(dp4328
g62
(dp4329
sg71
g4323
sg64
(lp4330
g57
(g58
g59
NtRp4331
(dp4332
g62
(dp4333
g70
I2
ssg71
g4327
sg64
(lp4334
g57
(g66
g59
NtRp4335
(dp4336
g62
(dp4337
g70
I1
ssg71
Nsg64
(lp4338
g57
(g73
g59
NtRp4339
(dp4340
g62
(dp4341
sg71
g4335
sg64
(lp4342
g57
(g78
g59
NtRp4343
(dp4344
g62
(dp4345
sg71
g4339
sg64
(lp4346
g57
(g58
g59
NtRp4347
(dp4348
g62
(dp4349
g70
I1
ssg71
g4343
sg64
(lp4350
g4205
(S's\x08\x00\x00\x00My Sites'
tRp4351
asbasbasbag57
(g73
g59
NtRp4352
(dp4353
g62
(dp4354
sg71
g4335
sg64
(lp4355
g57
(g78
g59
NtRp4356
(dp4357
g62
(dp4358
sg71
g4352
sg64
(lp4359
g57
(g58
g59
NtRp4360
(dp4361
g62
(dp4362
g70
I1
ssg71
g4356
sg64
(lp4363
I00
asbasbasbag57
(g73
g59
NtRp4364
(dp4365
g62
(dp4366
sg71
g4335
sg64
(lp4367
g57
(g78
g59
NtRp4368
(dp4369
g62
(dp4370
sg71
g4364
sg64
(lp4371
g57
(g58
g59
NtRp4372
(dp4373
g62
(dp4374
g70
I1
ssg71
g4368
sg64
(lp4375
S'/admin/default/site'
p4376
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4377
(dp4378
g62
(dp4379
sg71
g4319
sg64
(lp4380
g57
(g78
g59
NtRp4381
(dp4382
g62
(dp4383
sg71
g4377
sg64
(lp4384
g57
(g58
g59
NtRp4385
(dp4386
g62
(dp4387
g70
I2
ssg71
g4381
sg64
(lp4388
g57
(g66
g59
NtRp4389
(dp4390
g62
(dp4391
g70
I1
ssg71
Nsg64
(lp4392
g57
(g73
g59
NtRp4393
(dp4394
g62
(dp4395
sg71
g4389
sg64
(lp4396
g57
(g78
g59
NtRp4397
(dp4398
g62
(dp4399
sg71
g4393
sg64
(lp4400
g57
(g58
g59
NtRp4401
(dp4402
g62
(dp4403
g70
I1
ssg71
g4397
sg64
(lp4404
g4205
(S's\x08\x00\x00\x00This App'
tRp4405
asbasbasbag57
(g73
g59
NtRp4406
(dp4407
g62
(dp4408
sg71
g4389
sg64
(lp4409
g57
(g78
g59
NtRp4410
(dp4411
g62
(dp4412
sg71
g4406
sg64
(lp4413
g57
(g58
g59
NtRp4414
(dp4415
g62
(dp4416
g70
I1
ssg71
g4410
sg64
(lp4417
I00
asbasbasbag57
(g73
g59
NtRp4418
(dp4419
g62
(dp4420
sg71
g4389
sg64
(lp4421
g57
(g78
g59
NtRp4422
(dp4423
g62
(dp4424
sg71
g4418
sg64
(lp4425
g57
(g58
g59
NtRp4426
(dp4427
g62
(dp4428
g70
I1
ssg71
g4422
sg64
(lp4429
S'/admin/default/design/SeniorProject'
p4430
asbasbasbag57
(g73
g59
NtRp4431
(dp4432
g62
(dp4433
sg71
g4389
sg64
(lp4434
g57
(g78
g59
NtRp4435
(dp4436
g62
(dp4437
sg71
g4431
sg64
(lp4438
g57
(g58
g59
NtRp4439
(dp4440
g62
(dp4441
g70
I1
ssg71
g4435
sg64
(lp4442
(lp4443
(g4205
(S't\n\x00\x00\x00Controller'
tRp4444
I00
S'/admin/default/edit/SeniorProject/controllers/default.py'
tp4445
a(g4205
(S't\x04\x00\x00\x00View'
tRp4446
I00
S'/admin/default/edit/SeniorProject/views/default/showform.html'
tp4447
a(g4205
(S't\x06\x00\x00\x00Layout'
tRp4448
I00
S'/admin/default/edit/SeniorProject/views/layout.html'
tp4449
a(g4205
(S't\n\x00\x00\x00Stylesheet'
tRp4450
I00
S'/admin/default/edit/SeniorProject/static/css/web2py.css'
tp4451
a(g4205
(S's\x08\x00\x00\x00DB Model'
tRp4452
I00
S'/admin/default/edit/SeniorProject/models/db.py'
tp4453
a(g4205
(S's\n\x00\x00\x00Menu Model'
tRp4454
I00
S'/admin/default/edit/SeniorProject/models/menu.py'
tp4455
a(g4205
(S't\x08\x00\x00\x00Database'
tRp4456
I00
S'/SeniorProject/appadmin/index'
tp4457
a(g4205
(S't\x06\x00\x00\x00Errors'
tRp4458
I00
S'/admin/default/errors/SeniorProject'
tp4459
a(g4205
(S't\x05\x00\x00\x00About'
tRp4460
I00
S'/admin/default/about/SeniorProject'
tp4461
aasbasbasbasbasbasbasbag57
(g73
g59
NtRp4462
(dp4463
g62
(dp4464
sg71
g4319
sg64
(lp4465
g57
(g78
g59
NtRp4466
(dp4467
g62
(dp4468
sg71
g4462
sg64
(lp4469
g57
(g58
g59
NtRp4470
(dp4471
g62
(dp4472
g70
I2
ssg71
g4466
sg64
(lp4473
g57
(g66
g59
NtRp4474
(dp4475
g62
(dp4476
g70
I1
ssg71
Nsg64
(lp4477
g57
(g73
g59
NtRp4478
(dp4479
g62
(dp4480
sg71
g4474
sg64
(lp4481
g57
(g78
g59
NtRp4482
(dp4483
g62
(dp4484
sg71
g4478
sg64
(lp4485
g57
(g58
g59
NtRp4486
(dp4487
g62
(dp4488
g70
I1
ssg71
g4482
sg64
(lp4489
S'web2py.com'
p4490
asbasbasbag57
(g73
g59
NtRp4491
(dp4492
g62
(dp4493
sg71
g4474
sg64
(lp4494
g57
(g78
g59
NtRp4495
(dp4496
g62
(dp4497
sg71
g4491
sg64
(lp4498
g57
(g58
g59
NtRp4499
(dp4500
g62
(dp4501
g70
I1
ssg71
g4495
sg64
(lp4502
I00
asbasbasbag57
(g73
g59
NtRp4503
(dp4504
g62
(dp4505
sg71
g4474
sg64
(lp4506
g57
(g78
g59
NtRp4507
(dp4508
g62
(dp4509
sg71
g4503
sg64
(lp4510
g57
(g58
g59
NtRp4511
(dp4512
g62
(dp4513
g70
I1
ssg71
g4507
sg64
(lp4514
S'http://www.web2py.com'
p4515
asbasbasbag57
(g73
g59
NtRp4516
(dp4517
g62
(dp4518
sg71
g4474
sg64
(lp4519
g57
(g78
g59
NtRp4520
(dp4521
g62
(dp4522
sg71
g4516
sg64
(lp4523
g57
(g58
g59
NtRp4524
(dp4525
g62
(dp4526
g70
I1
ssg71
g4520
sg64
(lp4527
(lp4528
(g4205
(S't\x08\x00\x00\x00Download'
tRp4529
I00
S'http://www.web2py.com/examples/default/download'
p4530
tp4531
a(g4205
(S't\x07\x00\x00\x00Support'
tRp4532
I00
S'http://www.web2py.com/examples/default/support'
p4533
tp4534
a(g4205
(S't\x04\x00\x00\x00Demo'
tRp4535
I00
S'http://web2py.com/demo_admin'
p4536
tp4537
a(g4205
(S's\x0e\x00\x00\x00Quick Examples'
tRp4538
I00
S'http://web2py.com/examples/default/examples'
p4539
tp4540
a(g4205
(S't\x03\x00\x00\x00FAQ'
tRp4541
I00
S'http://web2py.com/AlterEgo'
p4542
tp4543
a(g4205
(S't\x06\x00\x00\x00Videos'
tRp4544
I00
S'http://www.web2py.com/examples/default/videos/'
p4545
tp4546
a(g4205
(S's\x11\x00\x00\x00Free Applications'
tRp4547
I00
S'http://web2py.com/appliances'
p4548
tp4549
a(g4205
(S't\x07\x00\x00\x00Plugins'
tRp4550
I00
S'http://web2py.com/plugins'
p4551
tp4552
a(g4205
(S't\x07\x00\x00\x00Layouts'
tRp4553
I00
S'http://web2py.com/layouts'
p4554
tp4555
a(g4205
(S't\x07\x00\x00\x00Recipes'
tRp4556
I00
S'http://web2pyslices.com/'
p4557
tp4558
a(g4205
(S't\x08\x00\x00\x00Semantic'
tRp4559
I00
S'http://web2py.com/semantic'
p4560
tp4561
aasbasbasbasbasbasbasbag57
(g73
g59
NtRp4562
(dp4563
g62
(dp4564
sg71
g4319
sg64
(lp4565
g57
(g78
g59
NtRp4566
(dp4567
g62
(dp4568
sg71
g4562
sg64
(lp4569
g57
(g58
g59
NtRp4570
(dp4571
g62
(dp4572
g70
I2
ssg71
g4566
sg64
(lp4573
g57
(g66
g59
NtRp4574
(dp4575
g62
(dp4576
g70
I1
ssg71
Nsg64
(lp4577
g57
(g73
g59
NtRp4578
(dp4579
g62
(dp4580
sg71
g4574
sg64
(lp4581
g57
(g78
g59
NtRp4582
(dp4583
g62
(dp4584
sg71
g4578
sg64
(lp4585
g57
(g58
g59
NtRp4586
(dp4587
g62
(dp4588
g70
I1
ssg71
g4582
sg64
(lp4589
g4205
(S't\r\x00\x00\x00Documentation'
tRp4590
asbasbasbag57
(g73
g59
NtRp4591
(dp4592
g62
(dp4593
sg71
g4574
sg64
(lp4594
g57
(g78
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4591
sg64
(lp4598
g57
(g58
g59
NtRp4599
(dp4600
g62
(dp4601
g70
I1
ssg71
g4595
sg64
(lp4602
I00
asbasbasbag57
(g73
g59
NtRp4603
(dp4604
g62
(dp4605
sg71
g4574
sg64
(lp4606
g57
(g78
g59
NtRp4607
(dp4608
g62
(dp4609
sg71
g4603
sg64
(lp4610
g57
(g58
g59
NtRp4611
(dp4612
g62
(dp4613
g70
I1
ssg71
g4607
sg64
(lp4614
S'http://www.web2py.com/book'
p4615
asbasbasbag57
(g73
g59
NtRp4616
(dp4617
g62
(dp4618
sg71
g4574
sg64
(lp4619
g57
(g78
g59
NtRp4620
(dp4621
g62
(dp4622
sg71
g4616
sg64
(lp4623
g57
(g58
g59
NtRp4624
(dp4625
g62
(dp4626
g70
I1
ssg71
g4620
sg64
(lp4627
(lp4628
(g4205
(S't\x07\x00\x00\x00Preface'
tRp4629
I00
S'http://www.web2py.com/book/default/chapter/00'
p4630
tp4631
a(g4205
(S't\x0c\x00\x00\x00Introduction'
tRp4632
I00
S'http://www.web2py.com/book/default/chapter/01'
p4633
tp4634
a(g4205
(S't\x06\x00\x00\x00Python'
tRp4635
I00
S'http://www.web2py.com/book/default/chapter/02'
p4636
tp4637
a(g4205
(S't\x08\x00\x00\x00Overview'
tRp4638
I00
S'http://www.web2py.com/book/default/chapter/03'
p4639
tp4640
a(g4205
(S's\x08\x00\x00\x00The Core'
tRp4641
I00
S'http://www.web2py.com/book/default/chapter/04'
p4642
tp4643
a(g4205
(S's\t\x00\x00\x00The Views'
tRp4644
I00
S'http://www.web2py.com/book/default/chapter/05'
p4645
tp4646
a(g4205
(S't\x08\x00\x00\x00Database'
tRp4647
I00
S'http://www.web2py.com/book/default/chapter/06'
p4648
tp4649
a(g4205
(S's\x14\x00\x00\x00Forms and Validators'
tRp4650
I00
S'http://www.web2py.com/book/default/chapter/07'
p4651
tp4652
a(g4205
(S's\r\x00\x00\x00Email and SMS'
tRp4653
I00
S'http://www.web2py.com/book/default/chapter/08'
p4654
tp4655
a(g4205
(S's\x0e\x00\x00\x00Access Control'
tRp4656
I00
S'http://www.web2py.com/book/default/chapter/09'
p4657
tp4658
a(g4205
(S't\x08\x00\x00\x00Services'
tRp4659
I00
S'http://www.web2py.com/book/default/chapter/10'
p4660
tp4661
a(g4205
(S's\x0c\x00\x00\x00Ajax Recipes'
tRp4662
I00
S'http://www.web2py.com/book/default/chapter/11'
p4663
tp4664
a(g4205
(S's\x16\x00\x00\x00Components and Plugins'
tRp4665
I00
S'http://www.web2py.com/book/default/chapter/12'
p4666
tp4667
a(g4205
(S's\x12\x00\x00\x00Deployment Recipes'
tRp4668
I00
S'http://www.web2py.com/book/default/chapter/13'
p4669
tp4670
a(g4205
(S's\r\x00\x00\x00Other Recipes'
tRp4671
I00
S'http://www.web2py.com/book/default/chapter/14'
p4672
tp4673
a(g4205
(S's\r\x00\x00\x00Buy this book'
tRp4674
I00
S'http://stores.lulu.com/web2py'
p4675
tp4676
aasbasbasbasbasbasbasbag57
(g73
g59
NtRp4677
(dp4678
g62
(dp4679
sg71
g4319
sg64
(lp4680
g57
(g78
g59
NtRp4681
(dp4682
g62
(dp4683
sg71
g4677
sg64
(lp4684
g57
(g58
g59
NtRp4685
(dp4686
g62
(dp4687
g70
I2
ssg71
g4681
sg64
(lp4688
g57
(g66
g59
NtRp4689
(dp4690
g62
(dp4691
g70
I1
ssg71
Nsg64
(lp4692
g57
(g73
g59
NtRp4693
(dp4694
g62
(dp4695
sg71
g4689
sg64
(lp4696
g57
(g78
g59
NtRp4697
(dp4698
g62
(dp4699
sg71
g4693
sg64
(lp4700
g57
(g58
g59
NtRp4701
(dp4702
g62
(dp4703
g70
I1
ssg71
g4697
sg64
(lp4704
g4205
(S't\t\x00\x00\x00Community'
tRp4705
asbasbasbag57
(g73
g59
NtRp4706
(dp4707
g62
(dp4708
sg71
g4689
sg64
(lp4709
g57
(g78
g59
NtRp4710
(dp4711
g62
(dp4712
sg71
g4706
sg64
(lp4713
g57
(g58
g59
NtRp4714
(dp4715
g62
(dp4716
g70
I1
ssg71
g4710
sg64
(lp4717
I00
asbasbasbag57
(g73
g59
NtRp4718
(dp4719
g62
(dp4720
sg71
g4689
sg64
(lp4721
g57
(g78
g59
NtRp4722
(dp4723
g62
(dp4724
sg71
g4718
sg64
(lp4725
g57
(g58
g59
NtRp4726
(dp4727
g62
(dp4728
g70
I1
ssg71
g4722
sg64
(lp4729
Nasbasbasbag57
(g73
g59
NtRp4730
(dp4731
g62
(dp4732
sg71
g4689
sg64
(lp4733
g57
(g78
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g4730
sg64
(lp4737
g57
(g58
g59
NtRp4738
(dp4739
g62
(dp4740
g70
I1
ssg71
g4734
sg64
(lp4741
(lp4742
(g4205
(S't\x06\x00\x00\x00Groups'
tRp4743
I00
S'http://www.web2py.com/examples/default/usergroups'
p4744
tp4745
a(g4205
(S't\x07\x00\x00\x00Twitter'
tRp4746
I00
S'http://twitter.com/web2py'
p4747
tp4748
a(g4205
(S's\t\x00\x00\x00Live Chat'
tRp4749
I00
S'http://webchat.freenode.net/?channels=web2py'
p4750
tp4751
aasbasbasbasbasbasbasbag57
(g73
g59
NtRp4752
(dp4753
g62
(dp4754
sg71
g4319
sg64
(lp4755
g57
(g78
g59
NtRp4756
(dp4757
g62
(dp4758
sg71
g4752
sg64
(lp4759
g57
(g58
g59
NtRp4760
(dp4761
g62
(dp4762
g70
I2
ssg71
g4756
sg64
(lp4763
g57
(g66
g59
NtRp4764
(dp4765
g62
(dp4766
g70
I1
ssg71
Nsg64
(lp4767
g57
(g73
g59
NtRp4768
(dp4769
g62
(dp4770
sg71
g4764
sg64
(lp4771
g57
(g78
g59
NtRp4772
(dp4773
g62
(dp4774
sg71
g4768
sg64
(lp4775
g57
(g58
g59
NtRp4776
(dp4777
g62
(dp4778
g70
I1
ssg71
g4772
sg64
(lp4779
g4205
(S't\x07\x00\x00\x00Plugins'
tRp4780
asbasbasbag57
(g73
g59
NtRp4781
(dp4782
g62
(dp4783
sg71
g4764
sg64
(lp4784
g57
(g78
g59
NtRp4785
(dp4786
g62
(dp4787
sg71
g4781
sg64
(lp4788
g57
(g58
g59
NtRp4789
(dp4790
g62
(dp4791
g70
I1
ssg71
g4785
sg64
(lp4792
I00
asbasbasbag57
(g73
g59
NtRp4793
(dp4794
g62
(dp4795
sg71
g4764
sg64
(lp4796
g57
(g78
g59
NtRp4797
(dp4798
g62
(dp4799
sg71
g4793
sg64
(lp4800
g57
(g58
g59
NtRp4801
(dp4802
g62
(dp4803
g70
I1
ssg71
g4797
sg64
(lp4804
Nasbasbasbag57
(g73
g59
NtRp4805
(dp4806
g62
(dp4807
sg71
g4764
sg64
(lp4808
g57
(g78
g59
NtRp4809
(dp4810
g62
(dp4811
sg71
g4805
sg64
(lp4812
g57
(g58
g59
NtRp4813
(dp4814
g62
(dp4815
g70
I1
ssg71
g4809
sg64
(lp4816
(lp4817
(S'plugin_wiki'
p4818
I00
S'http://web2py.com/examples/default/download'
p4819
tp4820
a(g4205
(S's\r\x00\x00\x00Other Plugins'
tRp4821
I00
g4551
tp4822
a(g4205
(S's\x0e\x00\x00\x00Layout Plugins'
tRp4823
I00
g4554
tp4824
aasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4825
(dp4826
g62
(dp4827
sg71
g3648
sg64
(lp4828
g57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
g82
g83
ssg71
g4825
sg64
(lp4832
S'meta'
p4833
asbag57
(g78
g59
NtRp4834
(dp4835
g62
(dp4836
g89
g90
ssg71
g4825
sg64
(lp4837
S':'
asbag57
(g78
g59
NtRp4838
(dp4839
g62
(dp4840
sg71
g4825
sg64
(lp4841
g57
(g58
g59
NtRp4842
(dp4843
g62
(dp4844
g70
I5
ssg71
g4838
sg64
(lp4845
g57
(g66
g59
NtRp4846
(dp4847
g62
(dp4848
g70
I4
ssg71
Nsg64
(lp4849
g57
(g73
g59
NtRp4850
(dp4851
g62
(dp4852
sg71
g4846
sg64
(lp4853
g57
(g78
g59
NtRp4854
(dp4855
g62
(dp4856
g82
g83
ssg71
g4850
sg64
(lp4857
S'author'
p4858
asbag57
(g78
g59
NtRp4859
(dp4860
g62
(dp4861
g89
g90
ssg71
g4850
sg64
(lp4862
S':'
asbag57
(g78
g59
NtRp4863
(dp4864
g62
(dp4865
sg71
g4850
sg64
(lp4866
g57
(g58
g59
NtRp4867
(dp4868
g62
(dp4869
g70
I4
ssg71
g4863
sg64
(lp4870
S'Your Name <you@example.com>'
p4871
asbasbasbag57
(g73
g59
NtRp4872
(dp4873
g62
(dp4874
sg71
g4846
sg64
(lp4875
g57
(g78
g59
NtRp4876
(dp4877
g62
(dp4878
g82
g83
ssg71
g4872
sg64
(lp4879
S'copyright'
p4880
asbag57
(g78
g59
NtRp4881
(dp4882
g62
(dp4883
g89
g90
ssg71
g4872
sg64
(lp4884
S':'
asbag57
(g78
g59
NtRp4885
(dp4886
g62
(dp4887
sg71
g4872
sg64
(lp4888
g57
(g58
g59
NtRp4889
(dp4890
g62
(dp4891
g70
I4
ssg71
g4885
sg64
(lp4892
S'Copyright 2011'
p4893
asbasbasbag57
(g73
g59
NtRp4894
(dp4895
g62
(dp4896
sg71
g4846
sg64
(lp4897
g57
(g78
g59
NtRp4898
(dp4899
g62
(dp4900
g82
g83
ssg71
g4894
sg64
(lp4901
S'description'
p4902
asbag57
(g78
g59
NtRp4903
(dp4904
g62
(dp4905
g89
g90
ssg71
g4894
sg64
(lp4906
S':'
asbag57
(g78
g59
NtRp4907
(dp4908
g62
(dp4909
sg71
g4894
sg64
(lp4910
g57
(g58
g59
NtRp4911
(dp4912
g62
(dp4913
g70
I4
ssg71
g4907
sg64
(lp4914
S'a cool new app'
p4915
asbasbasbag57
(g73
g59
NtRp4916
(dp4917
g62
(dp4918
sg71
g4846
sg64
(lp4919
g57
(g78
g59
NtRp4920
(dp4921
g62
(dp4922
g82
g83
ssg71
g4916
sg64
(lp4923
S'generator'
p4924
asbag57
(g78
g59
NtRp4925
(dp4926
g62
(dp4927
g89
g90
ssg71
g4916
sg64
(lp4928
S':'
asbag57
(g78
g59
NtRp4929
(dp4930
g62
(dp4931
sg71
g4916
sg64
(lp4932
g57
(g58
g59
NtRp4933
(dp4934
g62
(dp4935
g70
I4
ssg71
g4929
sg64
(lp4936
S'Web2py Web Framework'
p4937
asbasbasbag57
(g73
g59
NtRp4938
(dp4939
g62
(dp4940
sg71
g4846
sg64
(lp4941
g57
(g78
g59
NtRp4942
(dp4943
g62
(dp4944
g82
g83
ssg71
g4938
sg64
(lp4945
S'keywords'
p4946
asbag57
(g78
g59
NtRp4947
(dp4948
g62
(dp4949
g89
g90
ssg71
g4938
sg64
(lp4950
S':'
asbag57
(g78
g59
NtRp4951
(dp4952
g62
(dp4953
sg71
g4938
sg64
(lp4954
g57
(g58
g59
NtRp4955
(dp4956
g62
(dp4957
g70
I4
ssg71
g4951
sg64
(lp4958
S'web2py, python, framework'
p4959
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4960
(dp4961
g62
(dp4962
sg71
g3648
sg64
(lp4963
g57
(g78
g59
NtRp4964
(dp4965
g62
(dp4966
g82
g83
ssg71
g4960
sg64
(lp4967
S'postprocessing'
p4968
asbag57
(g78
g59
NtRp4969
(dp4970
g62
(dp4971
g89
g90
ssg71
g4960
sg64
(lp4972
S':'
asbag57
(g78
g59
NtRp4973
(dp4974
g62
(dp4975
sg71
g4960
sg64
(lp4976
g57
(g58
g59
NtRp4977
(dp4978
g62
(dp4979
g70
I5
ssg71
g4973
sg64
(lp4980
g57
(g66
g59
NtRp4981
(dp4982
g62
(dp4983
g70
I4
ssg71
Nsg64
(lp4984
sbasbasbasbag57
(g73
g59
NtRp4985
(dp4986
g62
(dp4987
sg71
g3648
sg64
(lp4988
g57
(g78
g59
NtRp4989
(dp4990
g62
(dp4991
g82
g83
ssg71
g4985
sg64
(lp4992
S'session_file'
p4993
asbag57
(g78
g59
NtRp4994
(dp4995
g62
(dp4996
g89
g90
ssg71
g4985
sg64
(lp4997
S':'
asbag57
(g78
g59
NtRp4998
(dp4999
g62
(dp5000
sg71
g4985
sg64
(lp5001
g57
(g58
g59
NtRp5002
(dp5003
g62
(dp5004
g70
I5
ssg71
g4998
sg64
(lp5005
S"<open file '/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b', mode 'rb+' at 0x10b2e5810>"
p5006
asbasbasbag57
(g73
g59
NtRp5007
(dp5008
g62
(dp5009
sg71
g3648
sg64
(lp5010
g57
(g78
g59
NtRp5011
(dp5012
g62
(dp5013
g82
g83
ssg71
g5007
sg64
(lp5014
S'session_filename'
p5015
asbag57
(g78
g59
NtRp5016
(dp5017
g62
(dp5018
g89
g90
ssg71
g5007
sg64
(lp5019
S':'
asbag57
(g78
g59
NtRp5020
(dp5021
g62
(dp5022
sg71
g5007
sg64
(lp5023
g57
(g58
g59
NtRp5024
(dp5025
g62
(dp5026
g70
I5
ssg71
g5020
sg64
(lp5027
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p5028
asbasbasbag57
(g73
g59
NtRp5029
(dp5030
g62
(dp5031
sg71
g3648
sg64
(lp5032
g57
(g78
g59
NtRp5033
(dp5034
g62
(dp5035
g82
g83
ssg71
g5029
sg64
(lp5036
S'session_id'
p5037
asbag57
(g78
g59
NtRp5038
(dp5039
g62
(dp5040
g89
g90
ssg71
g5029
sg64
(lp5041
S':'
asbag57
(g78
g59
NtRp5042
(dp5043
g62
(dp5044
sg71
g5029
sg64
(lp5045
g57
(g58
g59
NtRp5046
(dp5047
g62
(dp5048
g70
I5
ssg71
g5042
sg64
(lp5049
S'127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p5050
asbasbasbag57
(g73
g59
NtRp5051
(dp5052
g62
(dp5053
sg71
g3648
sg64
(lp5054
g57
(g78
g59
NtRp5055
(dp5056
g62
(dp5057
g82
g83
ssg71
g5051
sg64
(lp5058
S'session_id_name'
p5059
asbag57
(g78
g59
NtRp5060
(dp5061
g62
(dp5062
g89
g90
ssg71
g5051
sg64
(lp5063
S':'
asbag57
(g78
g59
NtRp5064
(dp5065
g62
(dp5066
sg71
g5051
sg64
(lp5067
g57
(g58
g59
NtRp5068
(dp5069
g62
(dp5070
g70
I5
ssg71
g5064
sg64
(lp5071
g3705
asbasbasbag57
(g73
g59
NtRp5072
(dp5073
g62
(dp5074
sg71
g3648
sg64
(lp5075
g57
(g78
g59
NtRp5076
(dp5077
g62
(dp5078
g82
g83
ssg71
g5072
sg64
(lp5079
S'session_locked'
p5080
asbag57
(g78
g59
NtRp5081
(dp5082
g62
(dp5083
g89
g90
ssg71
g5072
sg64
(lp5084
S':'
asbag57
(g78
g59
NtRp5085
(dp5086
g62
(dp5087
sg71
g5072
sg64
(lp5088
g57
(g58
g59
NtRp5089
(dp5090
g62
(dp5091
g70
I5
ssg71
g5085
sg64
(lp5092
g1679
asbasbasbag57
(g73
g59
NtRp5093
(dp5094
g62
(dp5095
sg71
g3648
sg64
(lp5096
g57
(g78
g59
NtRp5097
(dp5098
g62
(dp5099
g82
g83
ssg71
g5093
sg64
(lp5100
S'session_new'
p5101
asbag57
(g78
g59
NtRp5102
(dp5103
g62
(dp5104
g89
g90
ssg71
g5093
sg64
(lp5105
S':'
asbag57
(g78
g59
NtRp5106
(dp5107
g62
(dp5108
sg71
g5093
sg64
(lp5109
g57
(g58
g59
NtRp5110
(dp5111
g62
(dp5112
g70
I5
ssg71
g5106
sg64
(lp5113
g100
asbasbasbag57
(g73
g59
NtRp5114
(dp5115
g62
(dp5116
sg71
g3648
sg64
(lp5117
g57
(g78
g59
NtRp5118
(dp5119
g62
(dp5120
g82
g83
ssg71
g5114
sg64
(lp5121
S'status'
p5122
asbag57
(g78
g59
NtRp5123
(dp5124
g62
(dp5125
g89
g90
ssg71
g5114
sg64
(lp5126
S':'
asbag57
(g78
g59
NtRp5127
(dp5128
g62
(dp5129
sg71
g5114
sg64
(lp5130
g57
(g58
g59
NtRp5131
(dp5132
g62
(dp5133
g70
I5
ssg71
g5127
sg64
(lp5134
S'200'
p5135
asbasbasbag57
(g73
g59
NtRp5136
(dp5137
g62
(dp5138
sg71
g3648
sg64
(lp5139
g57
(g78
g59
NtRp5140
(dp5141
g62
(dp5142
g82
g83
ssg71
g5136
sg64
(lp5143
S'subtitle'
p5144
asbag57
(g78
g59
NtRp5145
(dp5146
g62
(dp5147
g89
g90
ssg71
g5136
sg64
(lp5148
S':'
asbag57
(g78
g59
NtRp5149
(dp5150
g62
(dp5151
sg71
g5136
sg64
(lp5152
g57
(g58
g59
NtRp5153
(dp5154
g62
(dp5155
g70
I5
ssg71
g5149
sg64
(lp5156
g4205
(S's\r\x00\x00\x00customize me!'
tRp5157
asbasbasbag57
(g73
g59
NtRp5158
(dp5159
g62
(dp5160
sg71
g3648
sg64
(lp5161
g57
(g78
g59
NtRp5162
(dp5163
g62
(dp5164
g82
g83
ssg71
g5158
sg64
(lp5165
S'title'
p5166
asbag57
(g78
g59
NtRp5167
(dp5168
g62
(dp5169
g89
g90
ssg71
g5158
sg64
(lp5170
S':'
asbag57
(g78
g59
NtRp5171
(dp5172
g62
(dp5173
sg71
g5158
sg64
(lp5174
g57
(g58
g59
NtRp5175
(dp5176
g62
(dp5177
g70
I5
ssg71
g5171
sg64
(lp5178
S'Seniorproject'
p5179
asbasbasbag57
(g73
g59
NtRp5180
(dp5181
g62
(dp5182
sg71
g3648
sg64
(lp5183
g57
(g78
g59
NtRp5184
(dp5185
g62
(dp5186
g82
g83
ssg71
g5180
sg64
(lp5187
g2387
asbag57
(g78
g59
NtRp5188
(dp5189
g62
(dp5190
g89
g90
ssg71
g5180
sg64
(lp5191
S':'
asbag57
(g78
g59
NtRp5192
(dp5193
g62
(dp5194
sg71
g5180
sg64
(lp5195
g57
(g58
g59
NtRp5196
(dp5197
g62
(dp5198
g70
I5
ssg71
g5192
sg64
(lp5199
g2400
asbasbasbag57
(g73
g59
NtRp5200
(dp5201
g62
(dp5202
sg71
g3648
sg64
(lp5203
g57
(g78
g59
NtRp5204
(dp5205
g62
(dp5206
g82
g83
ssg71
g5200
sg64
(lp5207
S'view'
p5208
asbag57
(g78
g59
NtRp5209
(dp5210
g62
(dp5211
g89
g90
ssg71
g5200
sg64
(lp5212
S':'
asbag57
(g78
g59
NtRp5213
(dp5214
g62
(dp5215
sg71
g5200
sg64
(lp5216
g57
(g58
g59
NtRp5217
(dp5218
g62
(dp5219
g70
I5
ssg71
g5213
sg64
(lp5220
S'default/showform.html'
p5221
asbasbasbasbasbsS'locals'
p5222
(dp5223
S'tkMessageBox'
p5224
S"<module 'tkMessageBox' from '/Library/Frameworks...sions/2.7/lib/python2.7/lib-tk/tkMessageBox.pyc'>"
p5225
sS'projNum'
p5226
S"'12'"
p5227
sS'form'
p5228
S'<gluon.sqlhtml.SQLFORM object>'
p5229
sS'displayForm'
p5230
S"'Submittal'"
p5231
sssS'traceback'
p5232
S'Traceback (most recent call last):\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py", line 970, in <module>\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/globals.py", line 173, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/tools.py", line 2575, in f\n    return action(*a, **b)\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py", line 578, in showform\n    xredirect(URL("default","index"))\nNameError: global name \'xredirect\' is not defined\n'
p5233
s.