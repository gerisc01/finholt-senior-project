(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> invalid syntax (default.py, line 573)"
p3
sS'layer'
p4
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n#Import necessary modules\nimport flickrapi\nimport appy\nfrom datetime import datetime\n\nimport mechanize\nimport cookielib\n#Flickr API keys\nKEY = \'614fd86a34a00d38293c7e803d14c3ab\'\nSECRET_KEY = \'ad86826c3187eb4d\'\nUSER_ID = \'93142072@N05\'\n\n#Create the static links to be passed in to the views\nheader = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\')), _href=URL(\'default\',\'index\')), _id="header")\nheader_archived = DIV(A(IMG(_src=URL(\'static\',\'images/bluebannertext.jpg\'))), _id="header")\nfooter = DIV(A("Home Page", _href=URL(\'default\',\'index\')), TD("------"), A("Log out", _href=URL(\'default\',\'user\', args=\'logout\')), _id="footer")\ncss = "/SeniorProject/static/css/bluestyle.css"\n    \nif not db(db.PhotoToken).isempty():\n    tok = (db.PhotoToken(db.PhotoToken.id>0)).token\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #create a flickr object\nelse:\n    flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n\n#Returns the current user (object) of the site\ndef getUser():\n    user = None\n    if auth.user != None:\n        user = db(db.auth_user.id == auth.user.id).select().first()\n    return user\n\n\nif auth.user != None:\n    record = auth.user.id     #Gets the info for the current user\n    myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\nelse: \n    myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n#Returns the form that will be displayed when the "My Profile" tab is clicked (the paratmeter passed in is a user object)\ndef getProfileFormForUser(user):\n    if user != None:        #We will display the form with the user\'s current information filled in\n        record = user.id    #Gets the info for the current user    \n        myProfileForm = SQLFORM(db.auth_user, record, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    else:                   #Display the form with no fields filled in \n        myProfileForm = SQLFORM(db.auth_user, showid=False, labels={\'first_name\':\'First Name\', \'last_name\':\'Last Name\', \'email\':\'E-mail\', \'phone\':\'Phone Number\', \'password\':\'New Password\'}, fields = [\'first_name\',\'last_name\',\'email\',\'phone\'],_id="profileForm")\n    return myProfileForm\n\ndef getProjectsForUser(user):\n    projects = []\n    if user != None and user.projects != None:\n        if auth.has_membership(user_id=user.id, role="Admin"):\n            projects = db(db.Project.archived == False).select()\n        else:\n            for item in user.projects:\n                rows = db((db.Project.archived == False) & (db.Project.projNum == item)).select()\n                if len(projects) ==0:\n                    projects = rows\n                else:\n                    projects= projects & rows   \n    return projects\n\n#Checks if the current token is valid; if not, then redirects to flickr to be authenticated and get a token\ndef setUpFlickrStuff():   \n    if not db(db.PhotoToken).isempty():                                #We already have a PhotoToken, so use the token when creating a flickr object\n        tok = (db.PhotoToken(db.PhotoToken.id > 0)).token              #Get the token from the database\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY, token = tok)     #Create a flickr object\n    else:\n        flickr = flickrapi.FlickrAPI(KEY, SECRET_KEY)\n    \n    if not db(db.PhotoToken).isempty():\n        #We have a token, but it might not be valid\n        #Check the token. If there was an error, then delete the token from the database\n        try:\n            flickr.auth_checkToken() \n        except flickrapi.FlickrError:\n            db(db.PhotoToken.id > 0).delete()\n    if db(db.PhotoToken).isempty():                 #We don\'t have the token yet, or it was deleted because it wasn\'t valid\n        if request.vars.frob:                       #If the frob is in the request (coming back from being authenticated by flickr)\n            db.PhotoToken[0] = {"token" : flickr.get_token(request.vars.frob)}    #Insert a new row into the database with the new token\n        else:\n            url = flickr.web_login_url(\'write\')     #Get the url to go to in order to authenticate\n            br = mechanize.Browser()\n            # Browser options\n            br.set_handle_equiv(True)\n            br.set_handle_gzip(True)\n            br.set_handle_redirect(True)\n            br.set_handle_referer(True)\n            br.set_handle_robots(False)\n\n            # Cookie Jar\n            cj = cookielib.LWPCookieJar()\n            br.set_cookiejar(cj)\n    #Returns all the non-archived projects the specified user is associated with (the parameter passed in is a user object)\n\n\n            # Follows refresh 0 but not hangs on refresh > 0\n            br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n            r = br.open(url)\n            br.select_form("login_form")\n            br.form["login"]="alyssealyssetest"\n            br.form["passwd"]="finholt1"\n            br.find_control(".persistent").items[0].selected=True\n            br.submit()      \n\n    thing =flickr.sign({\n        "api_key":"f8525c74b1f8dcd19791a39cbd947dd0",\n        "photo_id":"8655391465",\n        "auth_token":"72157632878384274-4abc077968f36490"  \n\n    })  \n                            #Redirect to that website\n            \n            \n#Do all the set-up/initializing that is necessary for using the site (calling the above functions)   \nuser = getUser()                            #Get the current user of the site\nprojects = getProjectsForUser(user)         #Get the projects that the user is associated with\nmyProfileForm = getProfileFormForUser(user) #Get the form for the "My Profile" tab\nsetUpFlickrStuff()                          #Make sure all the flickr stuff is good to go (make sure we\'re authenticated)\n\n\n#Called when a new photoForm is submitted (called from showform when the photoForm is accepted)\ndef uploadPhotoToFlickr(photoForm):\n    #Get the info from the submitted photo form\n    photoWeb2pyId = photoForm.vars.id\n    projNum = photoForm.vars.projectNum\n    title = photoForm.vars.title\n    descr = photoForm.vars.description\n    name = "applications/SeniorProject/uploads/" + photoForm.vars.photo\n    \n    #Upload the photo to flickr and get the id of the photo in order to construct the url of the photo\n    idElement = flickr.upload(filename=name, title=title, description=descr)\n    id = idElement.find(\'photoid\').text\n    flickrUrl =  "http://www.flickr.com/photos/"+USER_ID+"/"+str(id)+"/"  \n\n    #Delete the corresponding row in our database (because we don\'t want to store the actual photo no our server)\n    db(db.Photos.id == photoWeb2pyId).delete()\n    \n    #Create a new row in our database with all the same info as the deleted row, but without the photo file\n    db.Photos.insert(projectNum=projNum, flickrURL=flickrUrl, title=title, description=descr)\n\n#Returns a dictionary used by the view default/index.html (which is the home screen)\n@auth.requires_login()\ndef index():\n    #response.flash = "Welcome " + auth.user.first_name + "!"    #Welcome the user to the site\n    response.flash = "Erik Smellz"\n    projectNums = []                                            #Get the project numbers of all the projects the user is associated with\n    for project in projects:\n        projectNums.append(project.projNum) \n    \n    #Get all the newsfeed entries for the user\'s projects, ordering by time created (most recent entry listed first)\n    entries = db(db.NewsFeed.projectNum.belongs(projectNums)).select(orderby=~db.NewsFeed.created_on)\n    \n    if entries == None or len(entries) == 0:                    #If there aren\'t any entries, set entries to None (this is checked in the View)\n        entries = None\n    elif len(entries) > 20:\n        entries = entries[0:20]                                 #Only display the first 20 newsfeed entries on the homescreen\n    \n    return dict(projects=projects,\n                myProfileForm=myProfileForm,\n                header=header,\n                footer=footer,\n                css=css,\n                entries=entries)\n\n#Created by web2py\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth(), header=header, footer=footer, css=css)\n\n#Created by web2py\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n#Created by web2py\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n#Created by web2py\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud(), css=css, footer=footer)\n\n#This is called when an admin clicks "Create User". It returns a dictionary used by the view default/regiser.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef register():\n    form = SQLFORM(db.auth_user)                                            #Create a form with the fields for a user\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.first_name) + \' created as user\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a user\'\n       \n    if form.validate():                                                     #Add the new user with membership in the General group (rather than Admin)\n        admin_user = auth.user\n        auth.get_or_create_user(form.vars)\n        auth.add_membership(auth.id_group(role="General"),auth.user_id)\n        auth.user = admin_user\n        redirect(URL(\'default\',\'register\'))                                 #Redirect to the same screen so the admin can create more users if needed\n        \n    return dict(form=form, header=header, footer=footer, css=css)\n\n#This is called when an admin clicks "User Permissions". It returns a dictionary used by the view default/changepermissions.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef changepermissions():\n     #Get all the users in alphabetical order, except the current user (don\'t want a user to change his own permissions)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)     \n     #Represent the user\'s id as a dropdown with the values of Admin or General, with the current value as the user\'s current group membership\n     db.auth_user.id.represent = lambda id: SELECT(getUserRole(id), XML(getOtherRoles(id)), _name=\'%i\'%id) \n     #Create a table with all the users and their current memberships\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Change Permission","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\'))\n \n     if table.accepts(request.vars): \n        for item in request.vars.keys():               #For each user selected..\n            if item.isdigit():\n                if not auth.has_membership(user_id=int(item), role=request.vars[item]):\n                    if auth.has_membership(user_id=int(item), role=getUserRole(int(item))): #in case they are in their individual user group. We should only delete them from the group we are in if they are switching from General to Admin or vice versa.\n                        auth.del_membership(auth.id_group(role=getUserRole(int(item))),int(item))\n                    auth.add_membership(auth.id_group(role=request.vars[item]),int(item)) #Add the user\'s membership\n                    \n        session.flash = \'Permissions changed\'\n        redirect(URL(\'default\',\'changepermissions\'))    #Redirect to the same screen so the admin can see the current permission level of every user\n        \n     elif table.errors:\n         session.flash = \'An error has occured\'\n     else:\n         session.flash = \'Modify user permissions\'\n     \n     return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Add Users to Projects". It returns a dictionary used by the view default/addtoproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef addtoproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)        #Get all the users of the site (in alphabetical order)\n    #Represent the user\'s id as checkboxes of possible projects for the user to be added to\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getAllProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Add To","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\')) \n    \n    if table.accepts(request.vars):\n        for userid in request.vars.keys():           #For each user selected..\n            if userid.isdigit():\n                projectList = db(db.auth_user.id == int(userid)).select().first().projects\n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projectList.append(int(item))\n                else:\n                    projectList.append(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projectList)\n        redirect(URL(\'default\',\'addtoproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete Users from Projects". It returns a dictionary used by the view default/deletefromproject.html\n@auth.requires_membership("Admin")\n@auth.requires_login()\ndef deletefromproject():\n    rows = db(db.auth_user.id > 0).select(orderby=db.auth_user.last_name)    #Get all the users of the site (in alphabetical order)\n    #Represents the user\'s id as checkboxes of all the user\'s associated projects\n    db.auth_user.id.represent = lambda id: DIV(\'\', XML(getUsersProjectsHtml(id)), _name=\'%i\'%id) \n    #Create a table of the information\n    table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove From","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}),INPUT(_type=\'submit\')) \n   \n    if table.accepts(request.vars): \n        for userid in request.vars.keys():                                    #For each user selected..\n            if userid.isdigit():\n                user = db(db.auth_user.id ==int(userid)).select().first()\n                projects = user.projects\n                \n                if type(request.vars[userid]) is list:\n                    for item in request.vars[userid]:\n                        projects.remove(int(item))\n                else:\n                    projects.remove(int(request.vars[userid]))\n                db(db.auth_user.id ==int(userid)).update(projects=projects)\n        redirect(URL(\'default\',\'deletefromproject\'))\n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Delete User". It returns a dictionary used by the view default/deleteusers.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef deleteusers():\n     #Get all the users on the site in alphabetical order, except the current user (don\'t want someone to delete himself)\n     rows = db(db.auth_user.id != auth.user.id).select(orderby=db.auth_user.last_name)  \n     db.auth_user.id.represent = lambda id: DIV(id, INPUT (_type=\'checkbox\',_name=\'%i\'%id)) #Create a checkbox for each user\n     #Create a table of the information\n     table = FORM(SQLTABLE(rows, columns=["auth_user.id",\'auth_user.last_name\',\'auth_user.first_name\',\'auth_user.email\'], headers={"auth_user.id":"Remove User","auth_user.first_name":"First Name","auth_user.last_name":"Last Name","auth_user.email":"Email"}), INPUT(_type=\'submit\'))\n     \n     if table.process().accepted:\n       response.flash = str(request.vars.first_name) + \' deleted as user\'\n     elif table.errors:\n       response.flash = \'Form has errors\'\n     else:\n       response.flash = \'Select users to delete\'\n     \n     if table.accepts(request.vars): \n        for item in request.vars.keys():                     #For each user selected..\n            if item.isdigit():\n                db(db.auth_user.id == int(item)).delete()    #Delete the user that was selected\n                \n        session.flash = \'User deleted\'\n        redirect(URL(\'default\',\'deleteusers\'))               #Redirect back to the same screen\n\n     return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Add Project". It returns a dictionary used by the view default/createproject.html \n@auth.requires_login()    \n@auth.requires_membership(\'Admin\')\ndef createproject():\n    #Create a form for inserting a new project into the database\n    form = SQLFORM(db.Project, labels={\'projNum\':\'Project Number\', \'openDate\':\'Open Date\', \'closedDate\':\'Closed Date\'})\n    \n    if form.process().accepted:\n       response.flash = str(request.vars.name) + \' has been created\'\n    elif form.errors:\n       response.flash = \'Form has errors\'\n    else:\n       response.flash = \'Please create a project\'\n       \n    return dict(form=form, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "Manage Projects". It returns a dictionary used by the view default/manageprojects.html\n@auth.requires_login()   \n@auth.requires_membership(\'Admin\')\ndef manageprojects():\n    table = None\n    rows = db(db.Project.archived == False).select() #Get all the non-archived projects\n    \n    if len(rows) == 0:\n        table = "There are currently no non-archived projects"\n        \n    else:   #There is at least one on-going project\n        db.Project.id.represent = lambda id: DIV(id, INPUT(_type=\'checkbox\',_name=\'%i\'%id)) #Represent the project id as a checkbox\n        #Create a table of all the non-archived projects, each with a checkbox for the option to archive\n        table = FORM(SQLTABLE(rows, columns=["Project.id","Project.name","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.id":"Archive","Project.name":"Project Name","Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}), INPUT(_type=\'submit\'))\n        \n        table["_onsubmit"] = "return confirm(\'Are you sure you want to archive this project?\');"\n        \n        if table.process().accepted:\n           response.flash = str(request.vars.name) + \' has been archived\'\n        elif table.errors:\n           response.flash = \'Form has errors\'\n        else:\n           response.flash = \'Select a project to archive\'\n        \n        if table.accepts(request.vars):\n            for pID in request.vars.keys():                             #For each project that we want to archive..\n                if pID.isdigit():\n                    db(db.Project.id == int(pID)).update(archived=True) #Set archived=True for the project and update the database\n                    \n            redirect(URL(\'default\',\'manageprojects\'))                   #Redirect to the same screen\n            \n    return dict(table=table, footer=footer, header=header,css=css)\n\n#This is called when an admin clicks "Archived Projects". It returns a dictionary used by the view default/archiveprojects.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef archiveprojects():\n    table = None\n    rows = db(db.Project.archived == True).select()                #Get all the archived projects\n    \n    if len(rows) == 0:\n        table = "There are no projects that have been achived."\n        \n    else:                                                          #There is at least one archived project\n        #This column contains the option to view a project when "View" is clicked. It opens a new tab to display the selected project                                                      \n        extracolumn = [{\'label\':\'View Archived Project\', #label of the entirecolumn\n                        \'class\': \'\', #class name of the header\n                        \'width\': \'\', #width in pixels or %\n                        \'content\': lambda row, rc: A("View", _href=URL(\'default\',\'viewArchive\', args=row.id), _target=\'new\'), #what goes in each row\n                        \'selected\': False #aggregate class selected to this column\n                       }]\n        #Create a table of the archived projects, with the rightmost column containing the extracolumn\n        table = SQLTABLE(rows, columns=["Project.name","Project.owner","Project.projNum",\'Project.openDate\',"Project.closedDate"], headers={"Project.name":"Project Name", "Project.owner":"Owner", "Project.openDate":"Open Date", "Project.closedDate":"Closed Date", "Project.projNum":"Project #"}, extracolumns=extracolumn)\n    \n    return dict(table=table, footer=footer, header=header, css=css)\n\n#This is called when an admin clicks "View" on the Archived Projects screen. It returns a dictionary used by the view default/viewArchive.html    \n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef viewArchive():\n    #Get the archived project that the user wants to view (the "archivedprojects" method puts the project id in args)\n    project = db(db.Project.id == request.args(0)).select().first()  \n    return dict(project=project, header=header_archived, css=css)\n\n#This is called when a user clicks on "News Feed" for a project in the sidebar. It returns a dictionary used by the view default/newsfeed.html\n@auth.requires_login()\ndef newsfeed():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Create an SQLFORM for the user to make a new status update\n    form = SQLFORM(db.NewsFeed, labels={\'description\':\'New Status Update\'}, fields=[\'description\'])\n    form.vars.projectNum = request.vars.projectNum                        #Initialize the project number to be the current project\'s number\n    form.vars.type = "human"                                              #Initialize the type to be" human"\n    form.vars.created_on = datetime.today()                               #Initialize the time created to be the current date and time\n    form.vars.creator = auth.user.first_name + " " + auth.user.last_name  #Initiaize the creator to be the current user\n    \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Status created successfully\')\n        elif form.errors:\n            response.flash = \'Form has errors\'\n                \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on) \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None\n        \n    return dict(form=form, entries=entries, fullTable=True, project=project, projects=projects, myProfileForm=myProfileForm, header=header, footer=footer, css=css)\n\n#This is called when a user clicks on "News Feed" on an archived project\'s sidebar. It returns a dictionary used by the view default/newsfeedarchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\')\ndef newsfeedarchived():\n    project = db(db.Project.projNum == request.vars.projectNum).select().first() #Get the current project\n    \n    #Get all the newsfeed entries, in order, with the most recent entry first\n    entries = db(db.NewsFeed.projectNum == request.vars.projectNum).select(orderby=~db.NewsFeed.created_on)   \n    if entries == None or len(entries) == 0:                                     #If there are no entries, set entries to None\n        entries = None   \n        \n    return dict(entries=entries, fullTable=True, project=project, header=header_archived, css=css)  \n\n#This is called when a user clicks on any of the tabs (to upload/generate a new document). It returns a dictionary used by the view default/showform.html\n@auth.requires_login() \ndef showform():\n    \n    displayForm = request.vars.displayForm                                       #Get the type of form we want to display\n    form = None                                                                  #The SQLFORM that we will display\n    projNum = request.vars.projectNum\n    if type(projNum) is list:\n        projNum = projNum[-1]\n    import tkMessageBox\n    tkMessageBox.showinfo(title="Greetings", message=str(projNum)) \n\n    if displayForm == "CCD":\n        #Create a form with all the CCD fields\n        form = SQLFORM(db.CCD, labels={\'ccdNum\':\'CCD #\',\'projectNum\': "Project #"}) \n        rows = db(db.CCD.projectNum == str(projNum)).select()    #Get all the CCD\'s for the current project\n        form.vars.ccdNum = len(rows) + 1               #Initialize the form\'s CCD number to be one more than the current number of CCDs               \n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "RFI":\n        #Create a dropdown of all the users\' names for the Request Referred To field\n        db.RFI.reqRefTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a form with the RFI fields specified by the fields parameter\n        form = SQLFORM(db.RFI, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\'}, fields=[\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'sheetName\', \'grids\', \'specSection\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\'])\n        \n        currentProj = db(db.Project.projNum == str(projNum)).select().first()\n        rows = db(db.RFI.projectNum == str(projNum)).select()    #Get all the RFI\'s for the current project       \n        form.vars.rfiNum = len(rows) + 1               #Initialize the form\'s RFI number to be one more than the current number of RFIs\n        form.vars.requestBy = auth.user.first_name + " " + auth.user.last_name #Initialize the form\'s RequestBy field to be the current user\n        form.vars.statusFlag = "Outstanding"           #Set the status flag (this field isn\'t displayed on the screen)\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number \n        form.vars.projectName = currentProj.name       #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n                \n    elif displayForm == "Submittal":\n        #Create a dropdown for the submittal type\n        db.Submittal.subType.requires = IS_IN_SET([\'Samples\',\'Shop Drawing\',\'Product Data\'])\n        #Create a dropdown of all the users\' names for the Assigned To field\n        db.Submittal.assignedTo.requires = IS_IN_DB(db, \'auth_user.id\', \'%(first_name)s\'+\' \'+\'%(last_name)s\')\n        #Create a dropdown for the status flag\n        db.Submittal.statusFlag.requires = IS_IN_SET([\'Approved\',\'Resubmit\',\'Approved with Comments\',\'Submitted for Review\'])\n        #Create a form with all the submittal fields\n        form = SQLFORM(db.Submittal, labels={\'statusFlag\':\'Status Flag\', \'projectNum\':\'Project Number\', \'subType\':\'Submittal Type\', \'sectNum\':\'Section Number\',\'assignedTo\':\'Assigned to\'}) \n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "ProposalRequest":  \n        #Create a form with the Proposal Request fields specified by the fields parameter   \n        form = SQLFORM(db.ProposalRequest, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[ \'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\'])\n        \n        currentProj = db(db.Project.projNum == str(projNum)).select().first()\n        rows = db(db.ProposalRequest.projectNum == str(projNum)).select() #Get all the ProposalRequests for the current project\n        form.vars.reqNum = len(rows) + 1               #Initialize the request number to be one more than the current number of proposal requests\n        form.vars.statusFlag = "Open"                  #Set the status flag (this field isn\'t displayed on the screen)       \n        form.vars.creator = auth.user.id               #Initialize the creator to be the current user\'s id (this field also isn\'t displayed)\n        form.vars.projectNum = projNum              #Initialize the form\'s project number to be the current project\'s number\n        form.vars.projectName = currentProj.name   #Set the form\'s project name to be the current project\'s name (not displayed)\n        form.vars.owner = currentProj.owner            #Set the form\'s project owner to be the current project\'s owner (not displayed)\n        \n    elif displayForm == "Proposal":\n        propReqs = db(db.ProposalRequest.projectNum == str(projNum)).select()\n        propNumList = []\n        for propReq in propReqs:\n            propNumList.append(propReq.reqNum)                   #Get all the Proposal Request numbers for the project\n        db.Proposal.propReqRef.requires = IS_IN_SET(propNumList) #Create a dropdown for the Proposal Request Reference #\n        #Create a form with all the Proposal fields \n        form = SQLFORM(db.Proposal, labels={\'propNum\':\'Proposal #\', \'propReqRef\':\'Proposal Request Reference #\', \'projectNum\':\'Project Number\', \'propDate\':\'Proposal Date\'})\n        \n        rows = db(db.Proposal.projectNum == str(projNum)).select() #Get all the Proposals for the current project\n        form.vars.propNum = len(rows) + 1              #Initialize the proposal number to be one more than the current number of proposals\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "MeetingMinutes":\n        #Create a form with all the MeetingMinutes fields\n        form = SQLFORM(db.MeetingMinutes, labels={\'projectNum\':\'Project Number\',\'meetDate\':\'Meeting Date\'})\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    elif displayForm == "Photo": \n        #Create a form with the Photo fields specified by the fields parameter                     \n        form = SQLFORM(db.Photos, labels={\'projectNum\':\'Project Number\', \'title\':\'Title\', \'description\':\'Description\', \'photo\':\'Photo\'}, fields = [\'projectNum\',\'title\',\'description\',\'photo\'])\n        form.vars.projectNum = projNum #Initialize the form\'s project number to be the current project\'s number\n        \n    if form != None:\n        if form.process().accepted:\n            response.flash = T(\'Form accepted\')\n            if displayForm == "Photo":    #If the form submitted is a photo form, we need to upload it to flickr and delete the photo from our database\n                uploadPhotoToFlickr(form)\n            elif displayForm == "RFI":    #If the form submitted is an RFI form, we need to put the name of person the RFI is referred to instead of the id\n                reqUser = db(db.auth_user.id == form.vars.reqRefTo).select().first()\n                row = db(db.RFI.id == form.vars.id).select().first()\n                row.update_record(reqRefTo = reqUser.first_name + " " + reqUser.last_name)\n            elif displayForm == "Submittal": #If the form submitted is a Submittal, we need to put the name of person it is assigned to instead of the id\n                assignTo = db(db.auth_user.id == form.vars.assignedTo).select().first()\n                row = db(db.Submittal.id == form.vars.id).select().first()\n                row.update_record(assignedTo= assignTo.first_name + " " + assignTo.last_name)\n            \n            #Now create a new newsfeed update noting the new submission\n            if displayForm == "MeetingMinutes":\n                displayForm = "Plan for World Domination"\n            description = "A new " + displayForm + " has been added."\n            db.NewsFeed.insert(projectNum=form.vars.projectNum, type="document", created_on=datetime.today(), description=description, creator=auth.user.first_name + " " + auth.user.last_name)\n            db.commit()\n            redirect(URL("default","showform" vars={"displayForm":request.vars.displayForm,"projectNum":projNum}))\n        elif form.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(displayForm=displayForm,\n                form=form,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                footer=footer,\n                header=header,\n                css=css,\n                projNum=projNum)\n\n#This is called when a user clicks on a categry in an archived project\'s sidebar. It returns a dictionary used by the view default/formtablearchived.html\n@auth.requires_login()\n@auth.requires_membership(\'Admin\') \ndef formtablearchived():\n    formType = request.vars.formType                                              #Get the type of table to display\n    project =  db(db.Project.projNum == request.vars.projectNum).select().first() #Get the archived project that is currently being viewed\n    table = None                                                                  #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                              #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()     #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]           #Set the CCD\'s file URL\n        #Create a table of the CCDs, displaying the values given by the columns parameter\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'],headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"},upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()     #Get all the RFIs for the current project\n        #Represent the RFI number as a link to view the RFI\n        db.RFI.rfiNum.represent = lambda rfiNum: A(str(rfiNum), _href=URL("default","create_odt",args=[int(rfiNum)]),_target="_blank")\n        #Create a table of the RFIs\n        table = SQLTABLE(rows, _width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseDate"], \n            headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To","RFI.responseDate":"Response Date"})\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select() #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]   #Set the Submittal\'s file URL\n        #Create a table of the Submittals \n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.subType","Submittal.sectNum","Submittal.submittal"], \n            headers={"Submittal.assignedTo":"Assigned To","Submittal.subType":"Type","Submittal.sectNum":"Section Number",\n            "Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.sentTo","ProposalRequest.propDate"],\n            headers={"ProposalRequest.reqNum":"Request Number","ProposalRequest.amendNum":"Amendment Number",\n            "ProposalRequest.sentTo":"Sent To","ProposalRequest.propDate":"Proposal Request Date"})\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()  #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]             #Set the Proposal\'s file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"], \n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select() #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the Meeting Minute\'s file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"], \n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()         #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There were no documents uploaded for this project section."\n        fullTable = False\n\n    return dict(formType=formType,\n                project=project,\n                table=table,\n                header=header_archived,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on a category for a project in the sidebar. It returns a dictionary used by the view default/formtable.html\n@auth.requires_login()\ndef formtable():\n    formType = request.vars.formType                                                     #Get the type of table to display        \n    table = None                                                                         #The SQLTABLE we will be displaying - set depending on the formType\n    fullTable = True                                                                     #Keeps track if there are entries for the category or not\n    \n    if formType == "CCD":\n        rows = db(db.CCD.projectNum == str(request.vars.projectNum)).select()            #Get all the CCDs for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                  #Set the CCD file\'s URL\n        #myextracolumns = [{\'label\': \'CCD Thumbnail(for testing)\',\'class\':\'\',\'selected\':False, \'width\':\'\', \n        #    \'content\': lambda row, rc: IMG(_width="40",_height="40",_src=URL(\'default\',\'download\',args=row.file))}]\n        #Create a table of the CCDs\n        table = SQLTABLE(rows,columns=["CCD.ccdNum",\'CCD.file\'], headers={"CCD.ccdNum":"CCD #","CCD.file":"CCD File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "RFI":\n        rows = db(db.RFI.projectNum == str(request.vars.projectNum)).select()            #Get all the RFIs for the current project\n        #Create an extra column. If the user is the one who is supposed to reply to the RFI, then have a link in the column for the user to do so\n        extracolumn = [{\'label\':\'Reply to RFI\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Reply", _href=URL(\'default\',\'replyRFI\',args=row.id)) if auth.user.first_name +" " +\n                     auth.user.last_name == row.reqRefTo else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the RFIs, adding the extra "Reply to RFI" column on the far right\n        table = SQLTABLE(rows,_width="800px", columns=["RFI.rfiNum","RFI.dateSent","RFI.reqRefTo","RFI.responseBy","RFI.responseDate",\n            "RFI.statusFlag"], headers={"RFI.rfiNum":"RFI #","RFI.dateSent":"Date Sent","RFI.reqRefTo":"Request Referred To",\n            "RFI.responseDate":"Response Date","RFI.responseBy":"Need Response By","RFI.statusFlag":"Status Flag"}, extracolumns=extracolumn)\n    \n    elif formType == "Submittal":\n        rows = db(db.Submittal.projectNum == str(request.vars.projectNum)).select()       #Get all the Submittals for the current project\n        for row in rows:\n            row.submittal = str(URL(\'default\',\'download\',args=row.submittal))[1:]         #Set the Submittals\' file URL\n        #Create a table of the Submittals\n        table = SQLTABLE(rows, columns=["Submittal.assignedTo","Submittal.statusFlag","Submittal.subType","Submittal.sectNum","Submittal.submittal"],\n            headers={"Submittal.assignedTo":"Assigned To","Submittal.statusFlag":"Status Flag","Submittal.subType":"Type",\n            "Submittal.sectNum":"Section Number","Submittal.submittal":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "ProposalRequest":\n        rows = db(db.ProposalRequest.projectNum == str(request.vars.projectNum)).select() #Get all the Proposal Requests for the current project\n        #Create an extra column. If the user is the creator of the request, include a link with the option to change the status of the document \n        extracolumn = [{\'label\':\'Change Status\',\n                \'class\': \'\', #class name of the header\n                \'width\': \'\', #width in pixels or %\n                \'content\':lambda row, rc: A("Change", _href=URL(\'default\',\'changePropReq\',args=row.id)) if auth.user.id == row.creator else A(" "),\n                \'selected\': False #aggregate class selected to this column\n                }]\n        #Create a table of the Proposal Requests\n        table = SQLTABLE(rows, columns=["ProposalRequest.reqNum","ProposalRequest.amendNum","ProposalRequest.statusFlag",\n            "ProposalRequest.sentTo","ProposalRequest.propDate"], headers={"ProposalRequest.reqNum":"Request Number",\n            "ProposalRequest.amendNum":"Amendment Number","ProposalRequest.sentTo":"Sent To","ProposalRequest.statusFlag":"Status Flag",\n            "ProposalRequest.propDate":"Proposal Request Date"}, extracolumns=extracolumn)\n    \n    elif formType == "Proposal":\n        rows = db(db.Proposal.projectNum == str(request.vars.projectNum)).select()        #Get all the Proposals for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Proposals\' file URL\n        #Create a table of the Proposals\n        table = SQLTABLE(rows, columns=["Proposal.propNum","Proposal.propReqRef","Proposal.propDate","Proposal.file"],\n            headers={"Proposal.propNum":"Proposal Number","Proposal.propReqRef":"Proposal Request Reference Number",\n            "Proposal.propDate":"Proposal Date","Proposal.file":"File Submitted"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "MeetingMinutes":\n        rows = db(db.MeetingMinutes.projectNum == str(request.vars.projectNum)).select()  #Get all the Meeting Minutes for the current project\n        for row in rows:\n            row.file = str(URL(\'default\',\'download\',args=row.file))[1:]                   #Set the Meeting Minutes\' file URL\n        #Create a table of the Meeting Minutes\n        table = SQLTABLE(rows, columns=["MeetingMinutes.meetDate","MeetingMinutes.file"],\n            headers={"MeetingMinutes.meetDate":"Meeting Date","MeetingMinutes.file":"Submitted File"}, upload="http://127.0.0.1:8000")\n    \n    elif formType == "Photo":    \n        rows = db(db.Photos.projectNum == str(request.vars.projectNum)).select()          #Get all the Photos for the current project\n        #Make the flickrURL a link to open the photo in flickr with a new tab\n        db.Photos.flickrURL.represent = lambda flickrURL: A("View Photo", _href=flickrURL, _target="_blank")\n        #Create a table of the Photos\' information\n        table = SQLTABLE(rows, columns=["Photos.title","Photos.description","Photos.flickrURL"], \n            headers={"Photos.title":"Title", "Photos.description":"Description","Photos.flickrURL":"Photo"})\n\n    if len(rows)==0:\n        table = "There are no documents uploaded for this project section yet."\n        fullTable = False\n\n    return dict(formType=formType,\n                myProfileForm=myProfileForm,\n                projects=projects,\n                table= table,\n                footer=footer,\n                header=header,\n                css=css,\n                fullTable=fullTable)\n\n#This is called when a user clicks on "Reply to RFI" when on the RFI\'s formtable view. It returns a dictionary used by the view default/replyRFI.html\n@auth.requires_login()\ndef replyRFI():\n    id = request.args(0) #the id of the RFI\n    db.RFI.statusFlag.requires = IS_IN_SET([\'Outstanding\',\'Closed\']) #Make a dropdown for the status flag\n    \n    #Create the SQLFORM, filling in all the previously submitted information\n    replyRfiForm = SQLFORM(db.RFI, id, showid=False, labels={\'rfiNum\':\'RFI #\',\'projectNum\':"Project #", \'requestBy\':\'Request by\', \'dateSent\':\'Date Sent\', \'reqRefTo\':\'Request Referred to\', \'drawingNum\':\'Drawing #\', \'detailNum\':\'Detail #\', \'specSection\':\'Spec Section #\', \'sheetName\':\'Sheet Name\', \'grids\':\'Grids\', \'sectionPage\':\'Section Page #\', \'description\':\'Description\', \'suggestion\':\'Contractor\\\'s Suggestion\', \'responseBy\':\'Need Response By\', \'reply\':\'Reply\', \'responseDate\':\'Response Date\', \'statusFlag\':\'Status Flag\'}, fields = [\'rfiNum\',\'projectNum\',\'requestBy\', \'dateSent\', \'reqRefTo\', \'drawingNum\', \'detailNum\', \'specSection\', \'sheetName\', \'grids\', \'sectionPage\', \'description\', \'suggestion\', \'responseBy\', \'reply\', \'responseDate\', \'statusFlag\'], _id="replyForm")\n    \n    if replyRfiForm != None:\n        if replyRfiForm.process().accepted:\n            row = db(db.RFI.id == id).select().first() #Get the RFI we\'re replying to\n            \n            #Update the RFI\'s reply and response date (but don\'t save any of the other fields -- want to keep the other fields read-only for this)\n            row.update_record(reply=str(replyRfiForm.vars.reply), responseDate=str(replyRfiForm.vars.responseDate))     \n            db.commit()   \n            \n            session.flash = T(\'RFI Reply Accepted\')  \n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'RFI\', projectNum=str(replyRfiForm.vars.projectNum))))  #Redirect to the RFI table                    \n        \n        elif replyRfiForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(replyRfiForm=replyRfiForm, css=css, header=header, footer=footer)\n\n#This is called when a user clicks on "Change Status" when on the Proposal Request\'s formtable view. It returns a dictionary used by the view default/changePropReq.html\n@auth.requires_login()\ndef changePropReq():\n    id = request.args(0)  #The id of the Proposal Request\n    db.ProposalRequest.statusFlag.requires = IS_IN_SET([\'Open\',\'Closed\'])          #Make a dropdown for the status flag  \n    #Create the SQLFORM, filling in all the previously submitted information\n    changePropReqForm = SQLFORM(db.ProposalRequest, id, showid=False, labels={\'reqNum\':\'Request #\', \'amendNum\':\'Amendment #\', \'statusFlag\':\'Status\', \'projectNum\':\'Project #\', \'subject\':\'Subject\', \'propDate\':\'Proposal Date\', \'sentTo\':\'Sent to\', \'cc\':\'CC\', \'description\':\'Description\'}, fields =[\'reqNum\',\'amendNum\',\'projectNum\',\'subject\',\'propDate\',\'sentTo\',\'cc\',\'description\',\'statusFlag\'], _id="changePropReqForm")\n        \n    if changePropReqForm != None:\n        if changePropReqForm.process().accepted:\n            row = db(db.ProposalRequest.id == id).select().first()                 #Get the current Proposal Request\n            row.update_record(statusFlag = str(changePropReqForm.vars.statusFlag)) #Update the Proposal Request with the new status flag      \n            db.commit()   \n            session.flash = T(\'Status Change Accepted\')  \n            #Redirect to the Proposal Request table\n            redirect(URL(\'default\', \'formtable\', vars=dict(formType=\'ProposalRequest\', projectNum=str(changePropReqForm.vars.projectNum))))                      \n        elif changePropReqForm.errors:\n            response.flash = \'Form has errors\'\n        else:\n            response.flash = \'Please fill out the form\'\n            \n    return dict(changePropReqForm=changePropReqForm, css=css, header=header, footer=footer)  \n\ndef viewPhoto():\n    br = mechanize.Browser()\n    # Browser options\n    br.set_handle_equiv(True)\n    br.set_handle_gzip(True)\n    br.set_handle_redirect(True)\n    br.set_handle_referer(True)\n    br.set_handle_robots(False)\n\n    # Follows refresh 0 but not hangs on refresh > 0\n    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)\n    r = br.open(request.vars["url"])\n    br.select_form("login_form")\n    br.form["passwd"]="finholt1"\n    import tkMessageBox\n    #tkMessageBox.showinfo(title="Greetings", message=str(br.form))\n    r = br.submit()\n    br.open(request.vars["url"])\n\n\n    \n    redirect(request.vars["url"])        \n\n#This returns a string of the opposite of the user\'s role (either Admin or General)\ndef getOtherRoles(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "General"\n    else:\n        return "Admin"\n\n#This returns a string of the user\'s role (either Admin or General)     \ndef getUserRole(id):\n    if auth.has_membership(user_id=id, role="Admin"):\n        return "Admin"\n    else:\n        return "General"\n\n#This is called by create_odt to get a dictionay of RFI data given the RFI number\ndef get_data(row_id):\n    import MySQLdb\n\n    db = MySQLdb.connect(host="10.24.6.23", user="seniorproj", passwd="web2py2012", db="finholt")\n    cur = db.cursor()\n\n    # Getting the rows from the database\n\n    cur.execute("SELECT * FROM RFI WHERE rfiNum = %s;",(row_id))\n    columns = cur.description\n    row = cur.fetchall()\n\n    dict = {}\n\n    for i in range(len(columns)):\n        dict[columns[i][0]] = row[0][i]\n\n    return dict\n\n#This creates the RFI document for viewing in the browser. It returns a dictionary used by the view default/create_odt.html\ndef create_odt():\n    import subprocess\n    import os\n    import time\n    appy = local_import(\'appy.pod.renderer\')\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'result.odt\')\n    subprocess.Popen("rm " + phpscript, shell=True)\n\n    # giving the program enough time to delete the old result.odt\n    time.sleep(1)\n \n    dictionary = get_data(request.args[0])\n\n    appyDict = {}\n    appyDict[\'rfiNumber\'] = dictionary[\'rfiNum\']\n\n    # Need to add database places for these and then add the dictionary\n    appyDict[\'project\'] = dictionary[\'projectName\']\n    appyDict[\'owner\'] = dictionary[\'owner\']\n\n    appyDict[\'requestBy\'] = dictionary[\'requestBy\']\n\n    dtSent = dictionary[\'dateSent\']\n    if dtSent != None:\n        appyDict[\'DateSent\'] = "%s/%s/%s" % (dtSent.month,dtSent.day,dtSent.year)\n    else:\n        appyDict[\'DateSent\'] = "None"\n\n    appyDict[\'requestReferredTo\'] = dictionary[\'reqRefTo\']\n\n    dtRec = dictionary[\'dateRec\']\n    if dtRec != None:\n        appyDict[\'DateReceived\'] = "%s/%s/%s" % (dtRec.month,dtRec.day,dtRec.year)\n    else:\n        appyDict[\'DateReceived\'] = "None"\n\n    appyDict[\'drawingNum\'] = dictionary[\'drawingNum\']\n\n    appyDict[\'detailNum\'] = dictionary[\'detailNum\']\n\n    appyDict[\'specNum\'] = dictionary[\'specSection\']\n    appyDict[\'sheetName\'] = dictionary[\'sheetName\']\n\n    appyDict[\'grids\'] = dictionary[\'grids\']\n    appyDict[\'sectionPage\'] = dictionary[\'sectionPage\']\n\n    appyDict[\'rfiDescription\'] = dictionary[\'description\']\n\n    appyDict[\'contractorSuggestion\'] = dictionary[\'suggestion\']\n\n    appyDict[\'reply\'] = dictionary[\'reply\']\n\n    appyDict[\'responseBy\'] = dictionary[\'responseBy\']\n\n    dtResp = dictionary[\'responseDate\']\n    if dtResp != None:\n        appyDict[\'responseDate\'] = "%s/%s/%s" % (dtResp.month,dtResp.day,dtResp.year)\n    else:\n        appyDict[\'responseDate\']\n\n    myfile = os.path.join(request.folder, \'static\',\'php\', \'rfiTemplate.odt\')\n    newfile = os.path.join(request.folder, \'static\',\'php\', \'result.odt\')\n    \n    renderer = appy.Renderer(myfile, appyDict, newfile)\n    renderer.run()\n\n    phpscript = os.path.join(request.folder, \'static\', \'php\', \'rfi.php\')\n    proc = subprocess.Popen("php " + phpscript, shell=True, stdout=subprocess.PIPE)\n    resp = proc.stdout.read()\n\n    return dict(html=HTML(\'\',XML(resp)))\n\n#Returns the html needed for the checkboxes on the addtoproject screen \ndef getAllProjectsHtml(id):\n    html=\'\'\n    projects = db(db.Project.archived == False).select()  #Get all the current non-archived projects\n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n\n    for row in projects:                                  #Find all the projects that the user is not already associated with\n        if user.projects != None:\n            if row.projNum not in user.projects:\n                html +=  \'<input value="\'+str(row.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.projNum)+"</br>"\n        else:\n            html +=  \'<input value="\'+str(row.id)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(row.id)+"</br>"\n    \n    if html ==\'\':                                         #The user is already associated with all the projects\n        html = "<p>In all projects</p>"\n        \n    return html \n\n#Returns the html needed for the checkboxes on the deletefromproject screen\ndef getUsersProjectsHtml(id):\n    html = \'\'    \n    user = db(db.auth_user.id == id).select().first()     #Get the user given the user\'s id\n    \n    if user.projects != None and len(user.projects) >= 1: #Make a checkbox for all the projects that the user is associatewith\n        for projId in user.projects:\n            project = db((db.Project.archived == False) & (db.Project.projNum == projId)).select().first()\n            html +=  \'<input value="\'+str(project.projNum)+\'" type="checkbox" name="\'+str(user.id)+\'"/>\'+str(project.projNum)+"</br>"\n    else:\n        html = "<p>Not on any projects</p>"\n        \n    return html\n\nresponse._vars=response._caller(showform)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S'\'            redirect(URL("default","showform" va...request.vars.displayForm,"projectNum":projNum}))\\n\''
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p37
sS'lineno'
p38
S'573'
p39
sS'msg'
p40
S"'invalid syntax'"
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S'(\'invalid syntax\', (\'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py\', 573, 50, \'            redirect(URL("default","showform" va...request.vars.displayForm,"projectNum":projNum}))\\n\'))'
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'50'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S'invalid syntax (default.py, line 573)'
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'SeniorProject'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
sbasbasbasbag69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g79
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
g94
g95
ssg83
g159
sg76
(lp166
S'body'
p167
asbag69
(g90
g71
NtRp168
(dp169
g74
(dp170
g101
g102
ssg83
g159
sg76
(lp171
S':'
asbag69
(g90
g71
NtRp172
(dp173
g74
(dp174
sg83
g159
sg76
(lp175
g69
(g70
g71
NtRp176
(dp177
g74
(dp178
g82
I5
ssg83
g172
sg76
(lp179
S'<cStringIO.StringO object at 0x10c8b9880>'
p180
asbasbasbag69
(g85
g71
NtRp181
(dp182
g74
(dp183
sg83
g79
sg76
(lp184
g69
(g90
g71
NtRp185
(dp186
g74
(dp187
g94
g95
ssg83
g181
sg76
(lp188
S'client'
p189
asbag69
(g90
g71
NtRp190
(dp191
g74
(dp192
g101
g102
ssg83
g181
sg76
(lp193
S':'
asbag69
(g90
g71
NtRp194
(dp195
g74
(dp196
sg83
g181
sg76
(lp197
g69
(g70
g71
NtRp198
(dp199
g74
(dp200
g82
I5
ssg83
g194
sg76
(lp201
S'127.0.0.1'
p202
asbasbasbag69
(g85
g71
NtRp203
(dp204
g74
(dp205
sg83
g79
sg76
(lp206
g69
(g90
g71
NtRp207
(dp208
g74
(dp209
g94
g95
ssg83
g203
sg76
(lp210
S'controller'
p211
asbag69
(g90
g71
NtRp212
(dp213
g74
(dp214
g101
g102
ssg83
g203
sg76
(lp215
S':'
asbag69
(g90
g71
NtRp216
(dp217
g74
(dp218
sg83
g203
sg76
(lp219
g69
(g70
g71
NtRp220
(dp221
g74
(dp222
g82
I5
ssg83
g216
sg76
(lp223
S'default'
p224
asbasbasbag69
(g85
g71
NtRp225
(dp226
g74
(dp227
sg83
g79
sg76
(lp228
g69
(g90
g71
NtRp229
(dp230
g74
(dp231
g94
g95
ssg83
g225
sg76
(lp232
S'cookies'
p233
asbag69
(g90
g71
NtRp234
(dp235
g74
(dp236
g101
g102
ssg83
g225
sg76
(lp237
S':'
asbag69
(g90
g71
NtRp238
(dp239
g74
(dp240
sg83
g225
sg76
(lp241
g69
(g70
g71
NtRp242
(dp243
g74
(dp244
g82
I5
ssg83
g238
sg76
(lp245
g69
(g78
g71
NtRp246
(dp247
g74
(dp248
g82
I4
ssg83
Nsg76
(lp249
g69
(g85
g71
NtRp250
(dp251
g74
(dp252
sg83
g246
sg76
(lp253
g69
(g90
g71
NtRp254
(dp255
g74
(dp256
g94
g95
ssg83
g250
sg76
(lp257
S'session_id_admin'
p258
asbag69
(g90
g71
NtRp259
(dp260
g74
(dp261
g101
g102
ssg83
g250
sg76
(lp262
S':'
asbag69
(g90
g71
NtRp263
(dp264
g74
(dp265
sg83
g250
sg76
(lp266
g69
(g70
g71
NtRp267
(dp268
g74
(dp269
g82
I4
ssg83
g263
sg76
(lp270
g69
(g78
g71
NtRp271
(dp272
g74
(dp273
g82
I3
ssg83
Nsg76
(lp274
g69
(g85
g71
NtRp275
(dp276
g74
(dp277
sg83
g271
sg76
(lp278
g69
(g90
g71
NtRp279
(dp280
g74
(dp281
g94
g95
ssg83
g275
sg76
(lp282
S'comment'
p283
asbag69
(g90
g71
NtRp284
(dp285
g74
(dp286
g101
g102
ssg83
g275
sg76
(lp287
S':'
asbag69
(g90
g71
NtRp288
(dp289
g74
(dp290
sg83
g275
sg76
(lp291
g69
(g70
g71
NtRp292
(dp293
g74
(dp294
g82
I3
ssg83
g288
sg76
(lp295
S''
asbasbasbag69
(g85
g71
NtRp296
(dp297
g74
(dp298
sg83
g271
sg76
(lp299
g69
(g90
g71
NtRp300
(dp301
g74
(dp302
g94
g95
ssg83
g296
sg76
(lp303
S'domain'
p304
asbag69
(g90
g71
NtRp305
(dp306
g74
(dp307
g101
g102
ssg83
g296
sg76
(lp308
S':'
asbag69
(g90
g71
NtRp309
(dp310
g74
(dp311
sg83
g296
sg76
(lp312
g69
(g70
g71
NtRp313
(dp314
g74
(dp315
g82
I3
ssg83
g309
sg76
(lp316
S''
asbasbasbag69
(g85
g71
NtRp317
(dp318
g74
(dp319
sg83
g271
sg76
(lp320
g69
(g90
g71
NtRp321
(dp322
g74
(dp323
g94
g95
ssg83
g317
sg76
(lp324
S'expires'
p325
asbag69
(g90
g71
NtRp326
(dp327
g74
(dp328
g101
g102
ssg83
g317
sg76
(lp329
S':'
asbag69
(g90
g71
NtRp330
(dp331
g74
(dp332
sg83
g317
sg76
(lp333
g69
(g70
g71
NtRp334
(dp335
g74
(dp336
g82
I3
ssg83
g330
sg76
(lp337
S''
asbasbasbag69
(g85
g71
NtRp338
(dp339
g74
(dp340
sg83
g271
sg76
(lp341
g69
(g90
g71
NtRp342
(dp343
g74
(dp344
g94
g95
ssg83
g338
sg76
(lp345
S'httponly'
p346
asbag69
(g90
g71
NtRp347
(dp348
g74
(dp349
g101
g102
ssg83
g338
sg76
(lp350
S':'
asbag69
(g90
g71
NtRp351
(dp352
g74
(dp353
sg83
g338
sg76
(lp354
g69
(g70
g71
NtRp355
(dp356
g74
(dp357
g82
I3
ssg83
g351
sg76
(lp358
S''
asbasbasbag69
(g85
g71
NtRp359
(dp360
g74
(dp361
sg83
g271
sg76
(lp362
g69
(g90
g71
NtRp363
(dp364
g74
(dp365
g94
g95
ssg83
g359
sg76
(lp366
S'max-age'
p367
asbag69
(g90
g71
NtRp368
(dp369
g74
(dp370
g101
g102
ssg83
g359
sg76
(lp371
S':'
asbag69
(g90
g71
NtRp372
(dp373
g74
(dp374
sg83
g359
sg76
(lp375
g69
(g70
g71
NtRp376
(dp377
g74
(dp378
g82
I3
ssg83
g372
sg76
(lp379
S''
asbasbasbag69
(g85
g71
NtRp380
(dp381
g74
(dp382
sg83
g271
sg76
(lp383
g69
(g90
g71
NtRp384
(dp385
g74
(dp386
g94
g95
ssg83
g380
sg76
(lp387
S'path'
p388
asbag69
(g90
g71
NtRp389
(dp390
g74
(dp391
g101
g102
ssg83
g380
sg76
(lp392
S':'
asbag69
(g90
g71
NtRp393
(dp394
g74
(dp395
sg83
g380
sg76
(lp396
g69
(g70
g71
NtRp397
(dp398
g74
(dp399
g82
I3
ssg83
g393
sg76
(lp400
S''
asbasbasbag69
(g85
g71
NtRp401
(dp402
g74
(dp403
sg83
g271
sg76
(lp404
g69
(g90
g71
NtRp405
(dp406
g74
(dp407
g94
g95
ssg83
g401
sg76
(lp408
S'secure'
p409
asbag69
(g90
g71
NtRp410
(dp411
g74
(dp412
g101
g102
ssg83
g401
sg76
(lp413
S':'
asbag69
(g90
g71
NtRp414
(dp415
g74
(dp416
sg83
g401
sg76
(lp417
g69
(g70
g71
NtRp418
(dp419
g74
(dp420
g82
I3
ssg83
g414
sg76
(lp421
S''
asbasbasbag69
(g85
g71
NtRp422
(dp423
g74
(dp424
sg83
g271
sg76
(lp425
g69
(g90
g71
NtRp426
(dp427
g74
(dp428
g94
g95
ssg83
g422
sg76
(lp429
S'version'
p430
asbag69
(g90
g71
NtRp431
(dp432
g74
(dp433
g101
g102
ssg83
g422
sg76
(lp434
S':'
asbag69
(g90
g71
NtRp435
(dp436
g74
(dp437
sg83
g422
sg76
(lp438
g69
(g70
g71
NtRp439
(dp440
g74
(dp441
g82
I3
ssg83
g435
sg76
(lp442
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp443
(dp444
g74
(dp445
sg83
g246
sg76
(lp446
g69
(g90
g71
NtRp447
(dp448
g74
(dp449
g94
g95
ssg83
g443
sg76
(lp450
S'session_id_seniorproject'
p451
asbag69
(g90
g71
NtRp452
(dp453
g74
(dp454
g101
g102
ssg83
g443
sg76
(lp455
S':'
asbag69
(g90
g71
NtRp456
(dp457
g74
(dp458
sg83
g443
sg76
(lp459
g69
(g70
g71
NtRp460
(dp461
g74
(dp462
g82
I4
ssg83
g456
sg76
(lp463
g69
(g78
g71
NtRp464
(dp465
g74
(dp466
g82
I3
ssg83
Nsg76
(lp467
g69
(g85
g71
NtRp468
(dp469
g74
(dp470
sg83
g464
sg76
(lp471
g69
(g90
g71
NtRp472
(dp473
g74
(dp474
g94
g95
ssg83
g468
sg76
(lp475
g283
asbag69
(g90
g71
NtRp476
(dp477
g74
(dp478
g101
g102
ssg83
g468
sg76
(lp479
S':'
asbag69
(g90
g71
NtRp480
(dp481
g74
(dp482
sg83
g468
sg76
(lp483
g69
(g70
g71
NtRp484
(dp485
g74
(dp486
g82
I3
ssg83
g480
sg76
(lp487
S''
asbasbasbag69
(g85
g71
NtRp488
(dp489
g74
(dp490
sg83
g464
sg76
(lp491
g69
(g90
g71
NtRp492
(dp493
g74
(dp494
g94
g95
ssg83
g488
sg76
(lp495
g304
asbag69
(g90
g71
NtRp496
(dp497
g74
(dp498
g101
g102
ssg83
g488
sg76
(lp499
S':'
asbag69
(g90
g71
NtRp500
(dp501
g74
(dp502
sg83
g488
sg76
(lp503
g69
(g70
g71
NtRp504
(dp505
g74
(dp506
g82
I3
ssg83
g500
sg76
(lp507
S''
asbasbasbag69
(g85
g71
NtRp508
(dp509
g74
(dp510
sg83
g464
sg76
(lp511
g69
(g90
g71
NtRp512
(dp513
g74
(dp514
g94
g95
ssg83
g508
sg76
(lp515
g325
asbag69
(g90
g71
NtRp516
(dp517
g74
(dp518
g101
g102
ssg83
g508
sg76
(lp519
S':'
asbag69
(g90
g71
NtRp520
(dp521
g74
(dp522
sg83
g508
sg76
(lp523
g69
(g70
g71
NtRp524
(dp525
g74
(dp526
g82
I3
ssg83
g520
sg76
(lp527
S''
asbasbasbag69
(g85
g71
NtRp528
(dp529
g74
(dp530
sg83
g464
sg76
(lp531
g69
(g90
g71
NtRp532
(dp533
g74
(dp534
g94
g95
ssg83
g528
sg76
(lp535
g346
asbag69
(g90
g71
NtRp536
(dp537
g74
(dp538
g101
g102
ssg83
g528
sg76
(lp539
S':'
asbag69
(g90
g71
NtRp540
(dp541
g74
(dp542
sg83
g528
sg76
(lp543
g69
(g70
g71
NtRp544
(dp545
g74
(dp546
g82
I3
ssg83
g540
sg76
(lp547
S''
asbasbasbag69
(g85
g71
NtRp548
(dp549
g74
(dp550
sg83
g464
sg76
(lp551
g69
(g90
g71
NtRp552
(dp553
g74
(dp554
g94
g95
ssg83
g548
sg76
(lp555
g367
asbag69
(g90
g71
NtRp556
(dp557
g74
(dp558
g101
g102
ssg83
g548
sg76
(lp559
S':'
asbag69
(g90
g71
NtRp560
(dp561
g74
(dp562
sg83
g548
sg76
(lp563
g69
(g70
g71
NtRp564
(dp565
g74
(dp566
g82
I3
ssg83
g560
sg76
(lp567
S''
asbasbasbag69
(g85
g71
NtRp568
(dp569
g74
(dp570
sg83
g464
sg76
(lp571
g69
(g90
g71
NtRp572
(dp573
g74
(dp574
g94
g95
ssg83
g568
sg76
(lp575
g388
asbag69
(g90
g71
NtRp576
(dp577
g74
(dp578
g101
g102
ssg83
g568
sg76
(lp579
S':'
asbag69
(g90
g71
NtRp580
(dp581
g74
(dp582
sg83
g568
sg76
(lp583
g69
(g70
g71
NtRp584
(dp585
g74
(dp586
g82
I3
ssg83
g580
sg76
(lp587
S''
asbasbasbag69
(g85
g71
NtRp588
(dp589
g74
(dp590
sg83
g464
sg76
(lp591
g69
(g90
g71
NtRp592
(dp593
g74
(dp594
g94
g95
ssg83
g588
sg76
(lp595
g409
asbag69
(g90
g71
NtRp596
(dp597
g74
(dp598
g101
g102
ssg83
g588
sg76
(lp599
S':'
asbag69
(g90
g71
NtRp600
(dp601
g74
(dp602
sg83
g588
sg76
(lp603
g69
(g70
g71
NtRp604
(dp605
g74
(dp606
g82
I3
ssg83
g600
sg76
(lp607
S''
asbasbasbag69
(g85
g71
NtRp608
(dp609
g74
(dp610
sg83
g464
sg76
(lp611
g69
(g90
g71
NtRp612
(dp613
g74
(dp614
g94
g95
ssg83
g608
sg76
(lp615
g430
asbag69
(g90
g71
NtRp616
(dp617
g74
(dp618
g101
g102
ssg83
g608
sg76
(lp619
S':'
asbag69
(g90
g71
NtRp620
(dp621
g74
(dp622
sg83
g608
sg76
(lp623
g69
(g70
g71
NtRp624
(dp625
g74
(dp626
g82
I3
ssg83
g620
sg76
(lp627
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp628
(dp629
g74
(dp630
sg83
g246
sg76
(lp631
g69
(g90
g71
NtRp632
(dp633
g74
(dp634
g94
g95
ssg83
g628
sg76
(lp635
S'session_id_welcome'
p636
asbag69
(g90
g71
NtRp637
(dp638
g74
(dp639
g101
g102
ssg83
g628
sg76
(lp640
S':'
asbag69
(g90
g71
NtRp641
(dp642
g74
(dp643
sg83
g628
sg76
(lp644
g69
(g70
g71
NtRp645
(dp646
g74
(dp647
g82
I4
ssg83
g641
sg76
(lp648
g69
(g78
g71
NtRp649
(dp650
g74
(dp651
g82
I3
ssg83
Nsg76
(lp652
g69
(g85
g71
NtRp653
(dp654
g74
(dp655
sg83
g649
sg76
(lp656
g69
(g90
g71
NtRp657
(dp658
g74
(dp659
g94
g95
ssg83
g653
sg76
(lp660
g283
asbag69
(g90
g71
NtRp661
(dp662
g74
(dp663
g101
g102
ssg83
g653
sg76
(lp664
S':'
asbag69
(g90
g71
NtRp665
(dp666
g74
(dp667
sg83
g653
sg76
(lp668
g69
(g70
g71
NtRp669
(dp670
g74
(dp671
g82
I3
ssg83
g665
sg76
(lp672
S''
asbasbasbag69
(g85
g71
NtRp673
(dp674
g74
(dp675
sg83
g649
sg76
(lp676
g69
(g90
g71
NtRp677
(dp678
g74
(dp679
g94
g95
ssg83
g673
sg76
(lp680
g304
asbag69
(g90
g71
NtRp681
(dp682
g74
(dp683
g101
g102
ssg83
g673
sg76
(lp684
S':'
asbag69
(g90
g71
NtRp685
(dp686
g74
(dp687
sg83
g673
sg76
(lp688
g69
(g70
g71
NtRp689
(dp690
g74
(dp691
g82
I3
ssg83
g685
sg76
(lp692
S''
asbasbasbag69
(g85
g71
NtRp693
(dp694
g74
(dp695
sg83
g649
sg76
(lp696
g69
(g90
g71
NtRp697
(dp698
g74
(dp699
g94
g95
ssg83
g693
sg76
(lp700
g325
asbag69
(g90
g71
NtRp701
(dp702
g74
(dp703
g101
g102
ssg83
g693
sg76
(lp704
S':'
asbag69
(g90
g71
NtRp705
(dp706
g74
(dp707
sg83
g693
sg76
(lp708
g69
(g70
g71
NtRp709
(dp710
g74
(dp711
g82
I3
ssg83
g705
sg76
(lp712
S''
asbasbasbag69
(g85
g71
NtRp713
(dp714
g74
(dp715
sg83
g649
sg76
(lp716
g69
(g90
g71
NtRp717
(dp718
g74
(dp719
g94
g95
ssg83
g713
sg76
(lp720
g346
asbag69
(g90
g71
NtRp721
(dp722
g74
(dp723
g101
g102
ssg83
g713
sg76
(lp724
S':'
asbag69
(g90
g71
NtRp725
(dp726
g74
(dp727
sg83
g713
sg76
(lp728
g69
(g70
g71
NtRp729
(dp730
g74
(dp731
g82
I3
ssg83
g725
sg76
(lp732
S''
asbasbasbag69
(g85
g71
NtRp733
(dp734
g74
(dp735
sg83
g649
sg76
(lp736
g69
(g90
g71
NtRp737
(dp738
g74
(dp739
g94
g95
ssg83
g733
sg76
(lp740
g367
asbag69
(g90
g71
NtRp741
(dp742
g74
(dp743
g101
g102
ssg83
g733
sg76
(lp744
S':'
asbag69
(g90
g71
NtRp745
(dp746
g74
(dp747
sg83
g733
sg76
(lp748
g69
(g70
g71
NtRp749
(dp750
g74
(dp751
g82
I3
ssg83
g745
sg76
(lp752
S''
asbasbasbag69
(g85
g71
NtRp753
(dp754
g74
(dp755
sg83
g649
sg76
(lp756
g69
(g90
g71
NtRp757
(dp758
g74
(dp759
g94
g95
ssg83
g753
sg76
(lp760
g388
asbag69
(g90
g71
NtRp761
(dp762
g74
(dp763
g101
g102
ssg83
g753
sg76
(lp764
S':'
asbag69
(g90
g71
NtRp765
(dp766
g74
(dp767
sg83
g753
sg76
(lp768
g69
(g70
g71
NtRp769
(dp770
g74
(dp771
g82
I3
ssg83
g765
sg76
(lp772
S''
asbasbasbag69
(g85
g71
NtRp773
(dp774
g74
(dp775
sg83
g649
sg76
(lp776
g69
(g90
g71
NtRp777
(dp778
g74
(dp779
g94
g95
ssg83
g773
sg76
(lp780
g409
asbag69
(g90
g71
NtRp781
(dp782
g74
(dp783
g101
g102
ssg83
g773
sg76
(lp784
S':'
asbag69
(g90
g71
NtRp785
(dp786
g74
(dp787
sg83
g773
sg76
(lp788
g69
(g70
g71
NtRp789
(dp790
g74
(dp791
g82
I3
ssg83
g785
sg76
(lp792
S''
asbasbasbag69
(g85
g71
NtRp793
(dp794
g74
(dp795
sg83
g649
sg76
(lp796
g69
(g90
g71
NtRp797
(dp798
g74
(dp799
g94
g95
ssg83
g793
sg76
(lp800
g430
asbag69
(g90
g71
NtRp801
(dp802
g74
(dp803
g101
g102
ssg83
g793
sg76
(lp804
S':'
asbag69
(g90
g71
NtRp805
(dp806
g74
(dp807
sg83
g793
sg76
(lp808
g69
(g70
g71
NtRp809
(dp810
g74
(dp811
g82
I3
ssg83
g805
sg76
(lp812
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp813
(dp814
g74
(dp815
sg83
g79
sg76
(lp816
g69
(g90
g71
NtRp817
(dp818
g74
(dp819
g94
g95
ssg83
g813
sg76
(lp820
S'env'
p821
asbag69
(g90
g71
NtRp822
(dp823
g74
(dp824
g101
g102
ssg83
g813
sg76
(lp825
S':'
asbag69
(g90
g71
NtRp826
(dp827
g74
(dp828
sg83
g813
sg76
(lp829
g69
(g70
g71
NtRp830
(dp831
g74
(dp832
g82
I5
ssg83
g826
sg76
(lp833
g69
(g78
g71
NtRp834
(dp835
g74
(dp836
g82
I4
ssg83
Nsg76
(lp837
g69
(g85
g71
NtRp838
(dp839
g74
(dp840
sg83
g834
sg76
(lp841
g69
(g90
g71
NtRp842
(dp843
g74
(dp844
g94
g95
ssg83
g838
sg76
(lp845
S'app_folders'
p846
asbag69
(g90
g71
NtRp847
(dp848
g74
(dp849
g101
g102
ssg83
g838
sg76
(lp850
S':'
asbag69
(g90
g71
NtRp851
(dp852
g74
(dp853
sg83
g838
sg76
(lp854
g69
(g70
g71
NtRp855
(dp856
g74
(dp857
g82
I4
ssg83
g851
sg76
(lp858
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p859
asbasbasbag69
(g85
g71
NtRp860
(dp861
g74
(dp862
sg83
g834
sg76
(lp863
g69
(g90
g71
NtRp864
(dp865
g74
(dp866
g94
g95
ssg83
g860
sg76
(lp867
S'applications_parent'
p868
asbag69
(g90
g71
NtRp869
(dp870
g74
(dp871
g101
g102
ssg83
g860
sg76
(lp872
S':'
asbag69
(g90
g71
NtRp873
(dp874
g74
(dp875
sg83
g860
sg76
(lp876
g69
(g70
g71
NtRp877
(dp878
g74
(dp879
g82
I4
ssg83
g873
sg76
(lp880
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p881
asbasbasbag69
(g85
g71
NtRp882
(dp883
g74
(dp884
sg83
g834
sg76
(lp885
g69
(g90
g71
NtRp886
(dp887
g74
(dp888
g94
g95
ssg83
g882
sg76
(lp889
S'cmd_args'
p890
asbag69
(g90
g71
NtRp891
(dp892
g74
(dp893
g101
g102
ssg83
g882
sg76
(lp894
S':'
asbag69
(g90
g71
NtRp895
(dp896
g74
(dp897
sg83
g882
sg76
(lp898
g69
(g70
g71
NtRp899
(dp900
g74
(dp901
g82
I4
ssg83
g895
sg76
(lp902
g69
(g78
g71
NtRp903
(dp904
g74
(dp905
g82
I3
ssg83
Nsg76
(lp906
sbasbasbasbag69
(g85
g71
NtRp907
(dp908
g74
(dp909
sg83
g834
sg76
(lp910
g69
(g90
g71
NtRp911
(dp912
g74
(dp913
g94
g95
ssg83
g907
sg76
(lp914
S'cmd_options'
p915
asbag69
(g90
g71
NtRp916
(dp917
g74
(dp918
g101
g102
ssg83
g907
sg76
(lp919
S':'
asbag69
(g90
g71
NtRp920
(dp921
g74
(dp922
sg83
g907
sg76
(lp923
g69
(g70
g71
NtRp924
(dp925
g74
(dp926
g82
I4
ssg83
g920
sg76
(lp927
S"<Values at 0x1019a7440: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p928
asbasbasbag69
(g85
g71
NtRp929
(dp930
g74
(dp931
sg83
g834
sg76
(lp932
g69
(g90
g71
NtRp933
(dp934
g74
(dp935
g94
g95
ssg83
g929
sg76
(lp936
S'db_sessions'
p937
asbag69
(g90
g71
NtRp938
(dp939
g74
(dp940
g101
g102
ssg83
g929
sg76
(lp941
S':'
asbag69
(g90
g71
NtRp942
(dp943
g74
(dp944
sg83
g929
sg76
(lp945
g69
(g70
g71
NtRp946
(dp947
g74
(dp948
g82
I4
ssg83
g942
sg76
(lp949
S'set([])'
p950
asbasbasbag69
(g85
g71
NtRp951
(dp952
g74
(dp953
sg83
g834
sg76
(lp954
g69
(g90
g71
NtRp955
(dp956
g74
(dp957
g94
g95
ssg83
g951
sg76
(lp958
S'debugging'
p959
asbag69
(g90
g71
NtRp960
(dp961
g74
(dp962
g101
g102
ssg83
g951
sg76
(lp963
S':'
asbag69
(g90
g71
NtRp964
(dp965
g74
(dp966
sg83
g951
sg76
(lp967
g69
(g70
g71
NtRp968
(dp969
g74
(dp970
g82
I4
ssg83
g964
sg76
(lp971
g112
asbasbasbag69
(g85
g71
NtRp972
(dp973
g74
(dp974
sg83
g834
sg76
(lp975
g69
(g90
g71
NtRp976
(dp977
g74
(dp978
g94
g95
ssg83
g972
sg76
(lp979
S'gluon_parent'
p980
asbag69
(g90
g71
NtRp981
(dp982
g74
(dp983
g101
g102
ssg83
g972
sg76
(lp984
S':'
asbag69
(g90
g71
NtRp985
(dp986
g74
(dp987
sg83
g972
sg76
(lp988
g69
(g70
g71
NtRp989
(dp990
g74
(dp991
g82
I4
ssg83
g985
sg76
(lp992
S'/Users/hainna01/Desktop/SeniorProject/web2py'
p993
asbasbasbag69
(g85
g71
NtRp994
(dp995
g74
(dp996
sg83
g834
sg76
(lp997
g69
(g90
g71
NtRp998
(dp999
g74
(dp1000
g94
g95
ssg83
g994
sg76
(lp1001
S'http_accept'
p1002
asbag69
(g90
g71
NtRp1003
(dp1004
g74
(dp1005
g101
g102
ssg83
g994
sg76
(lp1006
S':'
asbag69
(g90
g71
NtRp1007
(dp1008
g74
(dp1009
sg83
g994
sg76
(lp1010
g69
(g70
g71
NtRp1011
(dp1012
g74
(dp1013
g82
I4
ssg83
g1007
sg76
(lp1014
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1015
asbasbasbag69
(g85
g71
NtRp1016
(dp1017
g74
(dp1018
sg83
g834
sg76
(lp1019
g69
(g90
g71
NtRp1020
(dp1021
g74
(dp1022
g94
g95
ssg83
g1016
sg76
(lp1023
S'http_accept_charset'
p1024
asbag69
(g90
g71
NtRp1025
(dp1026
g74
(dp1027
g101
g102
ssg83
g1016
sg76
(lp1028
S':'
asbag69
(g90
g71
NtRp1029
(dp1030
g74
(dp1031
sg83
g1016
sg76
(lp1032
g69
(g70
g71
NtRp1033
(dp1034
g74
(dp1035
g82
I4
ssg83
g1029
sg76
(lp1036
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1037
asbasbasbag69
(g85
g71
NtRp1038
(dp1039
g74
(dp1040
sg83
g834
sg76
(lp1041
g69
(g90
g71
NtRp1042
(dp1043
g74
(dp1044
g94
g95
ssg83
g1038
sg76
(lp1045
S'http_accept_encoding'
p1046
asbag69
(g90
g71
NtRp1047
(dp1048
g74
(dp1049
g101
g102
ssg83
g1038
sg76
(lp1050
S':'
asbag69
(g90
g71
NtRp1051
(dp1052
g74
(dp1053
sg83
g1038
sg76
(lp1054
g69
(g70
g71
NtRp1055
(dp1056
g74
(dp1057
g82
I4
ssg83
g1051
sg76
(lp1058
S'gzip,deflate,sdch'
p1059
asbasbasbag69
(g85
g71
NtRp1060
(dp1061
g74
(dp1062
sg83
g834
sg76
(lp1063
g69
(g90
g71
NtRp1064
(dp1065
g74
(dp1066
g94
g95
ssg83
g1060
sg76
(lp1067
S'http_accept_language'
p1068
asbag69
(g90
g71
NtRp1069
(dp1070
g74
(dp1071
g101
g102
ssg83
g1060
sg76
(lp1072
S':'
asbag69
(g90
g71
NtRp1073
(dp1074
g74
(dp1075
sg83
g1060
sg76
(lp1076
g69
(g70
g71
NtRp1077
(dp1078
g74
(dp1079
g82
I4
ssg83
g1073
sg76
(lp1080
S'en-US,en;q=0.8'
p1081
asbasbasbag69
(g85
g71
NtRp1082
(dp1083
g74
(dp1084
sg83
g834
sg76
(lp1085
g69
(g90
g71
NtRp1086
(dp1087
g74
(dp1088
g94
g95
ssg83
g1082
sg76
(lp1089
S'http_connection'
p1090
asbag69
(g90
g71
NtRp1091
(dp1092
g74
(dp1093
g101
g102
ssg83
g1082
sg76
(lp1094
S':'
asbag69
(g90
g71
NtRp1095
(dp1096
g74
(dp1097
sg83
g1082
sg76
(lp1098
g69
(g70
g71
NtRp1099
(dp1100
g74
(dp1101
g82
I4
ssg83
g1095
sg76
(lp1102
S'keep-alive'
p1103
asbasbasbag69
(g85
g71
NtRp1104
(dp1105
g74
(dp1106
sg83
g834
sg76
(lp1107
g69
(g90
g71
NtRp1108
(dp1109
g74
(dp1110
g94
g95
ssg83
g1104
sg76
(lp1111
S'http_cookie'
p1112
asbag69
(g90
g71
NtRp1113
(dp1114
g74
(dp1115
g101
g102
ssg83
g1104
sg76
(lp1116
S':'
asbag69
(g90
g71
NtRp1117
(dp1118
g74
(dp1119
sg83
g1104
sg76
(lp1120
g69
(g70
g71
NtRp1121
(dp1122
g74
(dp1123
g82
I4
ssg83
g1117
sg76
(lp1124
S'session_id_welcome=127.0.0.1-06963b13-5292-4f12-a45f-8facc0240d3e; session_id_admin=127.0.0.1-9a7f619c-556f-488f-ab9a-5a25f7a5da28; session_id_seniorproject=127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p1125
asbasbasbag69
(g85
g71
NtRp1126
(dp1127
g74
(dp1128
sg83
g834
sg76
(lp1129
g69
(g90
g71
NtRp1130
(dp1131
g74
(dp1132
g94
g95
ssg83
g1126
sg76
(lp1133
S'http_host'
p1134
asbag69
(g90
g71
NtRp1135
(dp1136
g74
(dp1137
g101
g102
ssg83
g1126
sg76
(lp1138
S':'
asbag69
(g90
g71
NtRp1139
(dp1140
g74
(dp1141
sg83
g1126
sg76
(lp1142
g69
(g70
g71
NtRp1143
(dp1144
g74
(dp1145
g82
I4
ssg83
g1139
sg76
(lp1146
S'127.0.0.1:8000'
p1147
asbasbasbag69
(g85
g71
NtRp1148
(dp1149
g74
(dp1150
sg83
g834
sg76
(lp1151
g69
(g90
g71
NtRp1152
(dp1153
g74
(dp1154
g94
g95
ssg83
g1148
sg76
(lp1155
S'http_referer'
p1156
asbag69
(g90
g71
NtRp1157
(dp1158
g74
(dp1159
g101
g102
ssg83
g1148
sg76
(lp1160
S':'
asbag69
(g90
g71
NtRp1161
(dp1162
g74
(dp1163
sg83
g1148
sg76
(lp1164
g69
(g70
g71
NtRp1165
(dp1166
g74
(dp1167
g82
I4
ssg83
g1161
sg76
(lp1168
S'http://127.0.0.1:8000/SeniorProject/default/showform?displayForm=Submittal&projectNum=12'
p1169
asbasbasbag69
(g85
g71
NtRp1170
(dp1171
g74
(dp1172
sg83
g834
sg76
(lp1173
g69
(g90
g71
NtRp1174
(dp1175
g74
(dp1176
g94
g95
ssg83
g1170
sg76
(lp1177
S'http_user_agent'
p1178
asbag69
(g90
g71
NtRp1179
(dp1180
g74
(dp1181
g101
g102
ssg83
g1170
sg76
(lp1182
S':'
asbag69
(g90
g71
NtRp1183
(dp1184
g74
(dp1185
sg83
g1170
sg76
(lp1186
g69
(g70
g71
NtRp1187
(dp1188
g74
(dp1189
g82
I4
ssg83
g1183
sg76
(lp1190
S'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31'
p1191
asbasbasbag69
(g85
g71
NtRp1192
(dp1193
g74
(dp1194
sg83
g834
sg76
(lp1195
g69
(g90
g71
NtRp1196
(dp1197
g74
(dp1198
g94
g95
ssg83
g1192
sg76
(lp1199
S'is_jython'
p1200
asbag69
(g90
g71
NtRp1201
(dp1202
g74
(dp1203
g101
g102
ssg83
g1192
sg76
(lp1204
S':'
asbag69
(g90
g71
NtRp1205
(dp1206
g74
(dp1207
sg83
g1192
sg76
(lp1208
g69
(g70
g71
NtRp1209
(dp1210
g74
(dp1211
g82
I4
ssg83
g1205
sg76
(lp1212
g112
asbasbasbag69
(g85
g71
NtRp1213
(dp1214
g74
(dp1215
sg83
g834
sg76
(lp1216
g69
(g90
g71
NtRp1217
(dp1218
g74
(dp1219
g94
g95
ssg83
g1213
sg76
(lp1220
S'is_pypy'
p1221
asbag69
(g90
g71
NtRp1222
(dp1223
g74
(dp1224
g101
g102
ssg83
g1213
sg76
(lp1225
S':'
asbag69
(g90
g71
NtRp1226
(dp1227
g74
(dp1228
sg83
g1213
sg76
(lp1229
g69
(g70
g71
NtRp1230
(dp1231
g74
(dp1232
g82
I4
ssg83
g1226
sg76
(lp1233
g112
asbasbasbag69
(g85
g71
NtRp1234
(dp1235
g74
(dp1236
sg83
g834
sg76
(lp1237
g69
(g90
g71
NtRp1238
(dp1239
g74
(dp1240
g94
g95
ssg83
g1234
sg76
(lp1241
S'path_info'
p1242
asbag69
(g90
g71
NtRp1243
(dp1244
g74
(dp1245
g101
g102
ssg83
g1234
sg76
(lp1246
S':'
asbag69
(g90
g71
NtRp1247
(dp1248
g74
(dp1249
sg83
g1234
sg76
(lp1250
g69
(g70
g71
NtRp1251
(dp1252
g74
(dp1253
g82
I4
ssg83
g1247
sg76
(lp1254
S'/SeniorProject/default/showform'
p1255
asbasbasbag69
(g85
g71
NtRp1256
(dp1257
g74
(dp1258
sg83
g834
sg76
(lp1259
g69
(g90
g71
NtRp1260
(dp1261
g74
(dp1262
g94
g95
ssg83
g1256
sg76
(lp1263
S'query_string'
p1264
asbag69
(g90
g71
NtRp1265
(dp1266
g74
(dp1267
g101
g102
ssg83
g1256
sg76
(lp1268
S':'
asbag69
(g90
g71
NtRp1269
(dp1270
g74
(dp1271
sg83
g1256
sg76
(lp1272
g69
(g70
g71
NtRp1273
(dp1274
g74
(dp1275
g82
I4
ssg83
g1269
sg76
(lp1276
S'displayForm=RFI&projectNum=12'
p1277
asbasbasbag69
(g85
g71
NtRp1278
(dp1279
g74
(dp1280
sg83
g834
sg76
(lp1281
g69
(g90
g71
NtRp1282
(dp1283
g74
(dp1284
g94
g95
ssg83
g1278
sg76
(lp1285
S'remote_addr'
p1286
asbag69
(g90
g71
NtRp1287
(dp1288
g74
(dp1289
g101
g102
ssg83
g1278
sg76
(lp1290
S':'
asbag69
(g90
g71
NtRp1291
(dp1292
g74
(dp1293
sg83
g1278
sg76
(lp1294
g69
(g70
g71
NtRp1295
(dp1296
g74
(dp1297
g82
I4
ssg83
g1291
sg76
(lp1298
g202
asbasbasbag69
(g85
g71
NtRp1299
(dp1300
g74
(dp1301
sg83
g834
sg76
(lp1302
g69
(g90
g71
NtRp1303
(dp1304
g74
(dp1305
g94
g95
ssg83
g1299
sg76
(lp1306
S'remote_port'
p1307
asbag69
(g90
g71
NtRp1308
(dp1309
g74
(dp1310
g101
g102
ssg83
g1299
sg76
(lp1311
S':'
asbag69
(g90
g71
NtRp1312
(dp1313
g74
(dp1314
sg83
g1299
sg76
(lp1315
g69
(g70
g71
NtRp1316
(dp1317
g74
(dp1318
g82
I4
ssg83
g1312
sg76
(lp1319
S'51731'
p1320
asbasbasbag69
(g85
g71
NtRp1321
(dp1322
g74
(dp1323
sg83
g834
sg76
(lp1324
g69
(g90
g71
NtRp1325
(dp1326
g74
(dp1327
g94
g95
ssg83
g1321
sg76
(lp1328
S'request_method'
p1329
asbag69
(g90
g71
NtRp1330
(dp1331
g74
(dp1332
g101
g102
ssg83
g1321
sg76
(lp1333
S':'
asbag69
(g90
g71
NtRp1334
(dp1335
g74
(dp1336
sg83
g1321
sg76
(lp1337
g69
(g70
g71
NtRp1338
(dp1339
g74
(dp1340
g82
I4
ssg83
g1334
sg76
(lp1341
S'GET'
p1342
asbasbasbag69
(g85
g71
NtRp1343
(dp1344
g74
(dp1345
sg83
g834
sg76
(lp1346
g69
(g90
g71
NtRp1347
(dp1348
g74
(dp1349
g94
g95
ssg83
g1343
sg76
(lp1350
S'script_name'
p1351
asbag69
(g90
g71
NtRp1352
(dp1353
g74
(dp1354
g101
g102
ssg83
g1343
sg76
(lp1355
S':'
asbag69
(g90
g71
NtRp1356
(dp1357
g74
(dp1358
sg83
g1343
sg76
(lp1359
g69
(g70
g71
NtRp1360
(dp1361
g74
(dp1362
g82
I4
ssg83
g1356
sg76
(lp1363
S''
asbasbasbag69
(g85
g71
NtRp1364
(dp1365
g74
(dp1366
sg83
g834
sg76
(lp1367
g69
(g90
g71
NtRp1368
(dp1369
g74
(dp1370
g94
g95
ssg83
g1364
sg76
(lp1371
S'server_name'
p1372
asbag69
(g90
g71
NtRp1373
(dp1374
g74
(dp1375
g101
g102
ssg83
g1364
sg76
(lp1376
S':'
asbag69
(g90
g71
NtRp1377
(dp1378
g74
(dp1379
sg83
g1364
sg76
(lp1380
g69
(g70
g71
NtRp1381
(dp1382
g74
(dp1383
g82
I4
ssg83
g1377
sg76
(lp1384
S'Nathans-MacBook-Pro-2.local'
p1385
asbasbasbag69
(g85
g71
NtRp1386
(dp1387
g74
(dp1388
sg83
g834
sg76
(lp1389
g69
(g90
g71
NtRp1390
(dp1391
g74
(dp1392
g94
g95
ssg83
g1386
sg76
(lp1393
S'server_port'
p1394
asbag69
(g90
g71
NtRp1395
(dp1396
g74
(dp1397
g101
g102
ssg83
g1386
sg76
(lp1398
S':'
asbag69
(g90
g71
NtRp1399
(dp1400
g74
(dp1401
sg83
g1386
sg76
(lp1402
g69
(g70
g71
NtRp1403
(dp1404
g74
(dp1405
g82
I4
ssg83
g1399
sg76
(lp1406
S'8000'
p1407
asbasbasbag69
(g85
g71
NtRp1408
(dp1409
g74
(dp1410
sg83
g834
sg76
(lp1411
g69
(g90
g71
NtRp1412
(dp1413
g74
(dp1414
g94
g95
ssg83
g1408
sg76
(lp1415
S'server_protocol'
p1416
asbag69
(g90
g71
NtRp1417
(dp1418
g74
(dp1419
g101
g102
ssg83
g1408
sg76
(lp1420
S':'
asbag69
(g90
g71
NtRp1421
(dp1422
g74
(dp1423
sg83
g1408
sg76
(lp1424
g69
(g70
g71
NtRp1425
(dp1426
g74
(dp1427
g82
I4
ssg83
g1421
sg76
(lp1428
S'HTTP/1.1'
p1429
asbasbasbag69
(g85
g71
NtRp1430
(dp1431
g74
(dp1432
sg83
g834
sg76
(lp1433
g69
(g90
g71
NtRp1434
(dp1435
g74
(dp1436
g94
g95
ssg83
g1430
sg76
(lp1437
S'server_software'
p1438
asbag69
(g90
g71
NtRp1439
(dp1440
g74
(dp1441
g101
g102
ssg83
g1430
sg76
(lp1442
S':'
asbag69
(g90
g71
NtRp1443
(dp1444
g74
(dp1445
sg83
g1430
sg76
(lp1446
g69
(g70
g71
NtRp1447
(dp1448
g74
(dp1449
g82
I4
ssg83
g1443
sg76
(lp1450
S'Rocket 1.2.4'
p1451
asbasbasbag69
(g85
g71
NtRp1452
(dp1453
g74
(dp1454
sg83
g834
sg76
(lp1455
g69
(g90
g71
NtRp1456
(dp1457
g74
(dp1458
g94
g95
ssg83
g1452
sg76
(lp1459
S'web2py_crontype'
p1460
asbag69
(g90
g71
NtRp1461
(dp1462
g74
(dp1463
g101
g102
ssg83
g1452
sg76
(lp1464
S':'
asbag69
(g90
g71
NtRp1465
(dp1466
g74
(dp1467
sg83
g1452
sg76
(lp1468
g69
(g70
g71
NtRp1469
(dp1470
g74
(dp1471
g82
I4
ssg83
g1465
sg76
(lp1472
S'hard'
p1473
asbasbasbag69
(g85
g71
NtRp1474
(dp1475
g74
(dp1476
sg83
g834
sg76
(lp1477
g69
(g90
g71
NtRp1478
(dp1479
g74
(dp1480
g94
g95
ssg83
g1474
sg76
(lp1481
S'web2py_path'
p1482
asbag69
(g90
g71
NtRp1483
(dp1484
g74
(dp1485
g101
g102
ssg83
g1474
sg76
(lp1486
S':'
asbag69
(g90
g71
NtRp1487
(dp1488
g74
(dp1489
sg83
g1474
sg76
(lp1490
g69
(g70
g71
NtRp1491
(dp1492
g74
(dp1493
g82
I4
ssg83
g1487
sg76
(lp1494
g881
asbasbasbag69
(g85
g71
NtRp1495
(dp1496
g74
(dp1497
sg83
g834
sg76
(lp1498
g69
(g90
g71
NtRp1499
(dp1500
g74
(dp1501
g94
g95
ssg83
g1495
sg76
(lp1502
S'web2py_version'
p1503
asbag69
(g90
g71
NtRp1504
(dp1505
g74
(dp1506
g101
g102
ssg83
g1495
sg76
(lp1507
S':'
asbag69
(g90
g71
NtRp1508
(dp1509
g74
(dp1510
sg83
g1495
sg76
(lp1511
g69
(g70
g71
NtRp1512
(dp1513
g74
(dp1514
g82
I4
ssg83
g1508
sg76
(lp1515
g69
(g78
g71
NtRp1516
(dp1517
g74
(dp1518
g82
I3
ssg83
Nsg76
(lp1519
g69
(g85
g71
NtRp1520
(dp1521
g74
(dp1522
sg83
g1516
sg76
(lp1523
g69
(g90
g71
NtRp1524
(dp1525
g74
(dp1526
sg83
g1520
sg76
(lp1527
g69
(g70
g71
NtRp1528
(dp1529
g74
(dp1530
g82
I3
ssg83
g1524
sg76
(lp1531
S'1'
asbasbasbag69
(g85
g71
NtRp1532
(dp1533
g74
(dp1534
sg83
g1516
sg76
(lp1535
g69
(g90
g71
NtRp1536
(dp1537
g74
(dp1538
sg83
g1532
sg76
(lp1539
g69
(g70
g71
NtRp1540
(dp1541
g74
(dp1542
g82
I3
ssg83
g1536
sg76
(lp1543
S'99'
p1544
asbasbasbag69
(g85
g71
NtRp1545
(dp1546
g74
(dp1547
sg83
g1516
sg76
(lp1548
g69
(g90
g71
NtRp1549
(dp1550
g74
(dp1551
sg83
g1545
sg76
(lp1552
g69
(g70
g71
NtRp1553
(dp1554
g74
(dp1555
g82
I3
ssg83
g1549
sg76
(lp1556
S'7'
asbasbasbag69
(g85
g71
NtRp1557
(dp1558
g74
(dp1559
sg83
g1516
sg76
(lp1560
g69
(g90
g71
NtRp1561
(dp1562
g74
(dp1563
sg83
g1557
sg76
(lp1564
g69
(g70
g71
NtRp1565
(dp1566
g74
(dp1567
g82
I3
ssg83
g1561
sg76
(lp1568
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p1569
asbasbasbag69
(g85
g71
NtRp1570
(dp1571
g74
(dp1572
sg83
g1516
sg76
(lp1573
g69
(g90
g71
NtRp1574
(dp1575
g74
(dp1576
sg83
g1570
sg76
(lp1577
g69
(g70
g71
NtRp1578
(dp1579
g74
(dp1580
g82
I3
ssg83
g1574
sg76
(lp1581
S'stable'
p1582
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1583
(dp1584
g74
(dp1585
sg83
g834
sg76
(lp1586
g69
(g90
g71
NtRp1587
(dp1588
g74
(dp1589
g94
g95
ssg83
g1583
sg76
(lp1590
S'wsgi_errors'
p1591
asbag69
(g90
g71
NtRp1592
(dp1593
g74
(dp1594
g101
g102
ssg83
g1583
sg76
(lp1595
S':'
asbag69
(g90
g71
NtRp1596
(dp1597
g74
(dp1598
sg83
g1583
sg76
(lp1599
g69
(g70
g71
NtRp1600
(dp1601
g74
(dp1602
g82
I4
ssg83
g1596
sg76
(lp1603
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p1604
asbasbasbag69
(g85
g71
NtRp1605
(dp1606
g74
(dp1607
sg83
g834
sg76
(lp1608
g69
(g90
g71
NtRp1609
(dp1610
g74
(dp1611
g94
g95
ssg83
g1605
sg76
(lp1612
S'wsgi_file_wrapper'
p1613
asbag69
(g90
g71
NtRp1614
(dp1615
g74
(dp1616
g101
g102
ssg83
g1605
sg76
(lp1617
S':'
asbag69
(g90
g71
NtRp1618
(dp1619
g74
(dp1620
sg83
g1605
sg76
(lp1621
g69
(g70
g71
NtRp1622
(dp1623
g74
(dp1624
g82
I4
ssg83
g1618
sg76
(lp1625
S'<class wsgiref.util.FileWrapper at 0x1018c6120>'
p1626
asbasbasbag69
(g85
g71
NtRp1627
(dp1628
g74
(dp1629
sg83
g834
sg76
(lp1630
g69
(g90
g71
NtRp1631
(dp1632
g74
(dp1633
g94
g95
ssg83
g1627
sg76
(lp1634
S'wsgi_input'
p1635
asbag69
(g90
g71
NtRp1636
(dp1637
g74
(dp1638
g101
g102
ssg83
g1627
sg76
(lp1639
S':'
asbag69
(g90
g71
NtRp1640
(dp1641
g74
(dp1642
sg83
g1627
sg76
(lp1643
g69
(g70
g71
NtRp1644
(dp1645
g74
(dp1646
g82
I4
ssg83
g1640
sg76
(lp1647
S'<socket._fileobject object at 0x10b31f1d0>'
p1648
asbasbasbag69
(g85
g71
NtRp1649
(dp1650
g74
(dp1651
sg83
g834
sg76
(lp1652
g69
(g90
g71
NtRp1653
(dp1654
g74
(dp1655
g94
g95
ssg83
g1649
sg76
(lp1656
S'wsgi_multiprocess'
p1657
asbag69
(g90
g71
NtRp1658
(dp1659
g74
(dp1660
g101
g102
ssg83
g1649
sg76
(lp1661
S':'
asbag69
(g90
g71
NtRp1662
(dp1663
g74
(dp1664
sg83
g1649
sg76
(lp1665
g69
(g70
g71
NtRp1666
(dp1667
g74
(dp1668
g82
I4
ssg83
g1662
sg76
(lp1669
g112
asbasbasbag69
(g85
g71
NtRp1670
(dp1671
g74
(dp1672
sg83
g834
sg76
(lp1673
g69
(g90
g71
NtRp1674
(dp1675
g74
(dp1676
g94
g95
ssg83
g1670
sg76
(lp1677
S'wsgi_multithread'
p1678
asbag69
(g90
g71
NtRp1679
(dp1680
g74
(dp1681
g101
g102
ssg83
g1670
sg76
(lp1682
S':'
asbag69
(g90
g71
NtRp1683
(dp1684
g74
(dp1685
sg83
g1670
sg76
(lp1686
g69
(g70
g71
NtRp1687
(dp1688
g74
(dp1689
g82
I4
ssg83
g1683
sg76
(lp1690
S'True'
p1691
asbasbasbag69
(g85
g71
NtRp1692
(dp1693
g74
(dp1694
sg83
g834
sg76
(lp1695
g69
(g90
g71
NtRp1696
(dp1697
g74
(dp1698
g94
g95
ssg83
g1692
sg76
(lp1699
S'wsgi_run_once'
p1700
asbag69
(g90
g71
NtRp1701
(dp1702
g74
(dp1703
g101
g102
ssg83
g1692
sg76
(lp1704
S':'
asbag69
(g90
g71
NtRp1705
(dp1706
g74
(dp1707
sg83
g1692
sg76
(lp1708
g69
(g70
g71
NtRp1709
(dp1710
g74
(dp1711
g82
I4
ssg83
g1705
sg76
(lp1712
g112
asbasbasbag69
(g85
g71
NtRp1713
(dp1714
g74
(dp1715
sg83
g834
sg76
(lp1716
g69
(g90
g71
NtRp1717
(dp1718
g74
(dp1719
g94
g95
ssg83
g1713
sg76
(lp1720
S'wsgi_url_scheme'
p1721
asbag69
(g90
g71
NtRp1722
(dp1723
g74
(dp1724
g101
g102
ssg83
g1713
sg76
(lp1725
S':'
asbag69
(g90
g71
NtRp1726
(dp1727
g74
(dp1728
sg83
g1713
sg76
(lp1729
g69
(g70
g71
NtRp1730
(dp1731
g74
(dp1732
g82
I4
ssg83
g1726
sg76
(lp1733
S'http'
p1734
asbasbasbag69
(g85
g71
NtRp1735
(dp1736
g74
(dp1737
sg83
g834
sg76
(lp1738
g69
(g90
g71
NtRp1739
(dp1740
g74
(dp1741
g94
g95
ssg83
g1735
sg76
(lp1742
S'wsgi_version'
p1743
asbag69
(g90
g71
NtRp1744
(dp1745
g74
(dp1746
g101
g102
ssg83
g1735
sg76
(lp1747
S':'
asbag69
(g90
g71
NtRp1748
(dp1749
g74
(dp1750
sg83
g1735
sg76
(lp1751
g69
(g70
g71
NtRp1752
(dp1753
g74
(dp1754
g82
I4
ssg83
g1748
sg76
(lp1755
g69
(g78
g71
NtRp1756
(dp1757
g74
(dp1758
g82
I3
ssg83
Nsg76
(lp1759
g69
(g85
g71
NtRp1760
(dp1761
g74
(dp1762
sg83
g1756
sg76
(lp1763
g69
(g90
g71
NtRp1764
(dp1765
g74
(dp1766
sg83
g1760
sg76
(lp1767
g69
(g70
g71
NtRp1768
(dp1769
g74
(dp1770
g82
I3
ssg83
g1764
sg76
(lp1771
S'1'
asbasbasbag69
(g85
g71
NtRp1772
(dp1773
g74
(dp1774
sg83
g1756
sg76
(lp1775
g69
(g90
g71
NtRp1776
(dp1777
g74
(dp1778
sg83
g1772
sg76
(lp1779
g69
(g70
g71
NtRp1780
(dp1781
g74
(dp1782
g82
I3
ssg83
g1776
sg76
(lp1783
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1784
(dp1785
g74
(dp1786
sg83
g79
sg76
(lp1787
g69
(g90
g71
NtRp1788
(dp1789
g74
(dp1790
g94
g95
ssg83
g1784
sg76
(lp1791
S'extension'
p1792
asbag69
(g90
g71
NtRp1793
(dp1794
g74
(dp1795
g101
g102
ssg83
g1784
sg76
(lp1796
S':'
asbag69
(g90
g71
NtRp1797
(dp1798
g74
(dp1799
sg83
g1784
sg76
(lp1800
g69
(g70
g71
NtRp1801
(dp1802
g74
(dp1803
g82
I5
ssg83
g1797
sg76
(lp1804
S'html'
p1805
asbasbasbag69
(g85
g71
NtRp1806
(dp1807
g74
(dp1808
sg83
g79
sg76
(lp1809
g69
(g90
g71
NtRp1810
(dp1811
g74
(dp1812
g94
g95
ssg83
g1806
sg76
(lp1813
S'folder'
p1814
asbag69
(g90
g71
NtRp1815
(dp1816
g74
(dp1817
g101
g102
ssg83
g1806
sg76
(lp1818
S':'
asbag69
(g90
g71
NtRp1819
(dp1820
g74
(dp1821
sg83
g1806
sg76
(lp1822
g69
(g70
g71
NtRp1823
(dp1824
g74
(dp1825
g82
I5
ssg83
g1819
sg76
(lp1826
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/'
p1827
asbasbasbag69
(g85
g71
NtRp1828
(dp1829
g74
(dp1830
sg83
g79
sg76
(lp1831
g69
(g90
g71
NtRp1832
(dp1833
g74
(dp1834
g94
g95
ssg83
g1828
sg76
(lp1835
S'function'
p1836
asbag69
(g90
g71
NtRp1837
(dp1838
g74
(dp1839
g101
g102
ssg83
g1828
sg76
(lp1840
S':'
asbag69
(g90
g71
NtRp1841
(dp1842
g74
(dp1843
sg83
g1828
sg76
(lp1844
g69
(g70
g71
NtRp1845
(dp1846
g74
(dp1847
g82
I5
ssg83
g1841
sg76
(lp1848
S'showform'
p1849
asbasbasbag69
(g85
g71
NtRp1850
(dp1851
g74
(dp1852
sg83
g79
sg76
(lp1853
g69
(g90
g71
NtRp1854
(dp1855
g74
(dp1856
g94
g95
ssg83
g1850
sg76
(lp1857
S'get_vars'
p1858
asbag69
(g90
g71
NtRp1859
(dp1860
g74
(dp1861
g101
g102
ssg83
g1850
sg76
(lp1862
S':'
asbag69
(g90
g71
NtRp1863
(dp1864
g74
(dp1865
sg83
g1850
sg76
(lp1866
g69
(g70
g71
NtRp1867
(dp1868
g74
(dp1869
g82
I5
ssg83
g1863
sg76
(lp1870
g69
(g78
g71
NtRp1871
(dp1872
g74
(dp1873
g82
I4
ssg83
Nsg76
(lp1874
g69
(g85
g71
NtRp1875
(dp1876
g74
(dp1877
sg83
g1871
sg76
(lp1878
g69
(g90
g71
NtRp1879
(dp1880
g74
(dp1881
g94
g95
ssg83
g1875
sg76
(lp1882
S'displayForm'
p1883
asbag69
(g90
g71
NtRp1884
(dp1885
g74
(dp1886
g101
g102
ssg83
g1875
sg76
(lp1887
S':'
asbag69
(g90
g71
NtRp1888
(dp1889
g74
(dp1890
sg83
g1875
sg76
(lp1891
g69
(g70
g71
NtRp1892
(dp1893
g74
(dp1894
g82
I4
ssg83
g1888
sg76
(lp1895
S'RFI'
p1896
asbasbasbag69
(g85
g71
NtRp1897
(dp1898
g74
(dp1899
sg83
g1871
sg76
(lp1900
g69
(g90
g71
NtRp1901
(dp1902
g74
(dp1903
g94
g95
ssg83
g1897
sg76
(lp1904
S'projectNum'
p1905
asbag69
(g90
g71
NtRp1906
(dp1907
g74
(dp1908
g101
g102
ssg83
g1897
sg76
(lp1909
S':'
asbag69
(g90
g71
NtRp1910
(dp1911
g74
(dp1912
sg83
g1897
sg76
(lp1913
g69
(g70
g71
NtRp1914
(dp1915
g74
(dp1916
g82
I4
ssg83
g1910
sg76
(lp1917
S'12'
p1918
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1919
(dp1920
g74
(dp1921
sg83
g79
sg76
(lp1922
g69
(g90
g71
NtRp1923
(dp1924
g74
(dp1925
g94
g95
ssg83
g1919
sg76
(lp1926
S'global_settings'
p1927
asbag69
(g90
g71
NtRp1928
(dp1929
g74
(dp1930
g101
g102
ssg83
g1919
sg76
(lp1931
S':'
asbag69
(g90
g71
NtRp1932
(dp1933
g74
(dp1934
sg83
g1919
sg76
(lp1935
g69
(g70
g71
NtRp1936
(dp1937
g74
(dp1938
g82
I5
ssg83
g1932
sg76
(lp1939
g69
(g78
g71
NtRp1940
(dp1941
g74
(dp1942
g82
I4
ssg83
Nsg76
(lp1943
g69
(g85
g71
NtRp1944
(dp1945
g74
(dp1946
sg83
g1940
sg76
(lp1947
g69
(g90
g71
NtRp1948
(dp1949
g74
(dp1950
g94
g95
ssg83
g1944
sg76
(lp1951
g846
asbag69
(g90
g71
NtRp1952
(dp1953
g74
(dp1954
g101
g102
ssg83
g1944
sg76
(lp1955
S':'
asbag69
(g90
g71
NtRp1956
(dp1957
g74
(dp1958
sg83
g1944
sg76
(lp1959
g69
(g70
g71
NtRp1960
(dp1961
g74
(dp1962
g82
I4
ssg83
g1956
sg76
(lp1963
S"set(['/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/admin/', '/Users/hainna01/Desktop/SeniorProject/web2py/applications/welcome/'])"
p1964
asbasbasbag69
(g85
g71
NtRp1965
(dp1966
g74
(dp1967
sg83
g1940
sg76
(lp1968
g69
(g90
g71
NtRp1969
(dp1970
g74
(dp1971
g94
g95
ssg83
g1965
sg76
(lp1972
g868
asbag69
(g90
g71
NtRp1973
(dp1974
g74
(dp1975
g101
g102
ssg83
g1965
sg76
(lp1976
S':'
asbag69
(g90
g71
NtRp1977
(dp1978
g74
(dp1979
sg83
g1965
sg76
(lp1980
g69
(g70
g71
NtRp1981
(dp1982
g74
(dp1983
g82
I4
ssg83
g1977
sg76
(lp1984
g881
asbasbasbag69
(g85
g71
NtRp1985
(dp1986
g74
(dp1987
sg83
g1940
sg76
(lp1988
g69
(g90
g71
NtRp1989
(dp1990
g74
(dp1991
g94
g95
ssg83
g1985
sg76
(lp1992
g890
asbag69
(g90
g71
NtRp1993
(dp1994
g74
(dp1995
g101
g102
ssg83
g1985
sg76
(lp1996
S':'
asbag69
(g90
g71
NtRp1997
(dp1998
g74
(dp1999
sg83
g1985
sg76
(lp2000
g69
(g70
g71
NtRp2001
(dp2002
g74
(dp2003
g82
I4
ssg83
g1997
sg76
(lp2004
g69
(g78
g71
NtRp2005
(dp2006
g74
(dp2007
g82
I3
ssg83
Nsg76
(lp2008
sbasbasbasbag69
(g85
g71
NtRp2009
(dp2010
g74
(dp2011
sg83
g1940
sg76
(lp2012
g69
(g90
g71
NtRp2013
(dp2014
g74
(dp2015
g94
g95
ssg83
g2009
sg76
(lp2016
g915
asbag69
(g90
g71
NtRp2017
(dp2018
g74
(dp2019
g101
g102
ssg83
g2009
sg76
(lp2020
S':'
asbag69
(g90
g71
NtRp2021
(dp2022
g74
(dp2023
sg83
g2009
sg76
(lp2024
g69
(g70
g71
NtRp2025
(dp2026
g74
(dp2027
g82
I4
ssg83
g2021
sg76
(lp2028
S"<Values at 0x1019a7440: {'verbose': False, 'ip': '127.0.0.1', 'shutdown_timeout': 5, 'taskbar': False, 'nocron': False, 'pid_filename': 'httpserver.pid', 'maxthreads': None, 'softcron': False, 'server_name': 'Nathans-MacBook-Pro-2.local', 'bpython': False, 'nogui': False, 'port': 8000, 'extcron': False, 'debuglevel': 30, 'test': None, 'folder': '/Users/hainna01/Desktop/SeniorProject/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'password': '<ask>', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2029
asbasbasbag69
(g85
g71
NtRp2030
(dp2031
g74
(dp2032
sg83
g1940
sg76
(lp2033
g69
(g90
g71
NtRp2034
(dp2035
g74
(dp2036
g94
g95
ssg83
g2030
sg76
(lp2037
g937
asbag69
(g90
g71
NtRp2038
(dp2039
g74
(dp2040
g101
g102
ssg83
g2030
sg76
(lp2041
S':'
asbag69
(g90
g71
NtRp2042
(dp2043
g74
(dp2044
sg83
g2030
sg76
(lp2045
g69
(g70
g71
NtRp2046
(dp2047
g74
(dp2048
g82
I4
ssg83
g2042
sg76
(lp2049
S'set([])'
p2050
asbasbasbag69
(g85
g71
NtRp2051
(dp2052
g74
(dp2053
sg83
g1940
sg76
(lp2054
g69
(g90
g71
NtRp2055
(dp2056
g74
(dp2057
g94
g95
ssg83
g2051
sg76
(lp2058
g959
asbag69
(g90
g71
NtRp2059
(dp2060
g74
(dp2061
g101
g102
ssg83
g2051
sg76
(lp2062
S':'
asbag69
(g90
g71
NtRp2063
(dp2064
g74
(dp2065
sg83
g2051
sg76
(lp2066
g69
(g70
g71
NtRp2067
(dp2068
g74
(dp2069
g82
I4
ssg83
g2063
sg76
(lp2070
g112
asbasbasbag69
(g85
g71
NtRp2071
(dp2072
g74
(dp2073
sg83
g1940
sg76
(lp2074
g69
(g90
g71
NtRp2075
(dp2076
g74
(dp2077
g94
g95
ssg83
g2071
sg76
(lp2078
g980
asbag69
(g90
g71
NtRp2079
(dp2080
g74
(dp2081
g101
g102
ssg83
g2071
sg76
(lp2082
S':'
asbag69
(g90
g71
NtRp2083
(dp2084
g74
(dp2085
sg83
g2071
sg76
(lp2086
g69
(g70
g71
NtRp2087
(dp2088
g74
(dp2089
g82
I4
ssg83
g2083
sg76
(lp2090
g993
asbasbasbag69
(g85
g71
NtRp2091
(dp2092
g74
(dp2093
sg83
g1940
sg76
(lp2094
g69
(g90
g71
NtRp2095
(dp2096
g74
(dp2097
g94
g95
ssg83
g2091
sg76
(lp2098
g1200
asbag69
(g90
g71
NtRp2099
(dp2100
g74
(dp2101
g101
g102
ssg83
g2091
sg76
(lp2102
S':'
asbag69
(g90
g71
NtRp2103
(dp2104
g74
(dp2105
sg83
g2091
sg76
(lp2106
g69
(g70
g71
NtRp2107
(dp2108
g74
(dp2109
g82
I4
ssg83
g2103
sg76
(lp2110
g112
asbasbasbag69
(g85
g71
NtRp2111
(dp2112
g74
(dp2113
sg83
g1940
sg76
(lp2114
g69
(g90
g71
NtRp2115
(dp2116
g74
(dp2117
g94
g95
ssg83
g2111
sg76
(lp2118
g1221
asbag69
(g90
g71
NtRp2119
(dp2120
g74
(dp2121
g101
g102
ssg83
g2111
sg76
(lp2122
S':'
asbag69
(g90
g71
NtRp2123
(dp2124
g74
(dp2125
sg83
g2111
sg76
(lp2126
g69
(g70
g71
NtRp2127
(dp2128
g74
(dp2129
g82
I4
ssg83
g2123
sg76
(lp2130
g112
asbasbasbag69
(g85
g71
NtRp2131
(dp2132
g74
(dp2133
sg83
g1940
sg76
(lp2134
g69
(g90
g71
NtRp2135
(dp2136
g74
(dp2137
g94
g95
ssg83
g2131
sg76
(lp2138
g1460
asbag69
(g90
g71
NtRp2139
(dp2140
g74
(dp2141
g101
g102
ssg83
g2131
sg76
(lp2142
S':'
asbag69
(g90
g71
NtRp2143
(dp2144
g74
(dp2145
sg83
g2131
sg76
(lp2146
g69
(g70
g71
NtRp2147
(dp2148
g74
(dp2149
g82
I4
ssg83
g2143
sg76
(lp2150
g1473
asbasbasbag69
(g85
g71
NtRp2151
(dp2152
g74
(dp2153
sg83
g1940
sg76
(lp2154
g69
(g90
g71
NtRp2155
(dp2156
g74
(dp2157
g94
g95
ssg83
g2151
sg76
(lp2158
g1503
asbag69
(g90
g71
NtRp2159
(dp2160
g74
(dp2161
g101
g102
ssg83
g2151
sg76
(lp2162
S':'
asbag69
(g90
g71
NtRp2163
(dp2164
g74
(dp2165
sg83
g2151
sg76
(lp2166
g69
(g70
g71
NtRp2167
(dp2168
g74
(dp2169
g82
I4
ssg83
g2163
sg76
(lp2170
g69
(g78
g71
NtRp2171
(dp2172
g74
(dp2173
g82
I3
ssg83
Nsg76
(lp2174
g69
(g85
g71
NtRp2175
(dp2176
g74
(dp2177
sg83
g2171
sg76
(lp2178
g69
(g90
g71
NtRp2179
(dp2180
g74
(dp2181
sg83
g2175
sg76
(lp2182
g69
(g70
g71
NtRp2183
(dp2184
g74
(dp2185
g82
I3
ssg83
g2179
sg76
(lp2186
S'1'
asbasbasbag69
(g85
g71
NtRp2187
(dp2188
g74
(dp2189
sg83
g2171
sg76
(lp2190
g69
(g90
g71
NtRp2191
(dp2192
g74
(dp2193
sg83
g2187
sg76
(lp2194
g69
(g70
g71
NtRp2195
(dp2196
g74
(dp2197
g82
I3
ssg83
g2191
sg76
(lp2198
S'99'
p2199
asbasbasbag69
(g85
g71
NtRp2200
(dp2201
g74
(dp2202
sg83
g2171
sg76
(lp2203
g69
(g90
g71
NtRp2204
(dp2205
g74
(dp2206
sg83
g2200
sg76
(lp2207
g69
(g70
g71
NtRp2208
(dp2209
g74
(dp2210
g82
I3
ssg83
g2204
sg76
(lp2211
S'7'
asbasbasbag69
(g85
g71
NtRp2212
(dp2213
g74
(dp2214
sg83
g2171
sg76
(lp2215
g69
(g90
g71
NtRp2216
(dp2217
g74
(dp2218
sg83
g2212
sg76
(lp2219
g69
(g70
g71
NtRp2220
(dp2221
g74
(dp2222
g82
I3
ssg83
g2216
sg76
(lp2223
S'datetime.datetime(2012, 3, 4, 22, 12, 8)'
p2224
asbasbasbag69
(g85
g71
NtRp2225
(dp2226
g74
(dp2227
sg83
g2171
sg76
(lp2228
g69
(g90
g71
NtRp2229
(dp2230
g74
(dp2231
sg83
g2225
sg76
(lp2232
g69
(g70
g71
NtRp2233
(dp2234
g74
(dp2235
g82
I3
ssg83
g2229
sg76
(lp2236
g1582
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2237
(dp2238
g74
(dp2239
sg83
g79
sg76
(lp2240
g69
(g90
g71
NtRp2241
(dp2242
g74
(dp2243
g94
g95
ssg83
g2237
sg76
(lp2244
S'is_https'
p2245
asbag69
(g90
g71
NtRp2246
(dp2247
g74
(dp2248
g101
g102
ssg83
g2237
sg76
(lp2249
S':'
asbag69
(g90
g71
NtRp2250
(dp2251
g74
(dp2252
sg83
g2237
sg76
(lp2253
g69
(g70
g71
NtRp2254
(dp2255
g74
(dp2256
g82
I5
ssg83
g2250
sg76
(lp2257
g112
asbasbasbag69
(g85
g71
NtRp2258
(dp2259
g74
(dp2260
sg83
g79
sg76
(lp2261
g69
(g90
g71
NtRp2262
(dp2263
g74
(dp2264
g94
g95
ssg83
g2258
sg76
(lp2265
S'is_local'
p2266
asbag69
(g90
g71
NtRp2267
(dp2268
g74
(dp2269
g101
g102
ssg83
g2258
sg76
(lp2270
S':'
asbag69
(g90
g71
NtRp2271
(dp2272
g74
(dp2273
sg83
g2258
sg76
(lp2274
g69
(g70
g71
NtRp2275
(dp2276
g74
(dp2277
g82
I5
ssg83
g2271
sg76
(lp2278
g1691
asbasbasbag69
(g85
g71
NtRp2279
(dp2280
g74
(dp2281
sg83
g79
sg76
(lp2282
g69
(g90
g71
NtRp2283
(dp2284
g74
(dp2285
g94
g95
ssg83
g2279
sg76
(lp2286
S'is_restful'
p2287
asbag69
(g90
g71
NtRp2288
(dp2289
g74
(dp2290
g101
g102
ssg83
g2279
sg76
(lp2291
S':'
asbag69
(g90
g71
NtRp2292
(dp2293
g74
(dp2294
sg83
g2279
sg76
(lp2295
g69
(g70
g71
NtRp2296
(dp2297
g74
(dp2298
g82
I5
ssg83
g2292
sg76
(lp2299
g112
asbasbasbag69
(g85
g71
NtRp2300
(dp2301
g74
(dp2302
sg83
g79
sg76
(lp2303
g69
(g90
g71
NtRp2304
(dp2305
g74
(dp2306
g94
g95
ssg83
g2300
sg76
(lp2307
S'now'
p2308
asbag69
(g90
g71
NtRp2309
(dp2310
g74
(dp2311
g101
g102
ssg83
g2300
sg76
(lp2312
S':'
asbag69
(g90
g71
NtRp2313
(dp2314
g74
(dp2315
sg83
g2300
sg76
(lp2316
g69
(g70
g71
NtRp2317
(dp2318
g74
(dp2319
g82
I5
ssg83
g2313
sg76
(lp2320
S'datetime.datetime(2013, 4, 18, 13, 10, 51, 777794)'
p2321
asbasbasbag69
(g85
g71
NtRp2322
(dp2323
g74
(dp2324
sg83
g79
sg76
(lp2325
g69
(g90
g71
NtRp2326
(dp2327
g74
(dp2328
g94
g95
ssg83
g2322
sg76
(lp2329
S'post_vars'
p2330
asbag69
(g90
g71
NtRp2331
(dp2332
g74
(dp2333
g101
g102
ssg83
g2322
sg76
(lp2334
S':'
asbag69
(g90
g71
NtRp2335
(dp2336
g74
(dp2337
sg83
g2322
sg76
(lp2338
g69
(g70
g71
NtRp2339
(dp2340
g74
(dp2341
g82
I5
ssg83
g2335
sg76
(lp2342
g69
(g78
g71
NtRp2343
(dp2344
g74
(dp2345
g82
I4
ssg83
Nsg76
(lp2346
sbasbasbasbag69
(g85
g71
NtRp2347
(dp2348
g74
(dp2349
sg83
g79
sg76
(lp2350
g69
(g90
g71
NtRp2351
(dp2352
g74
(dp2353
g94
g95
ssg83
g2347
sg76
(lp2354
S'url'
p2355
asbag69
(g90
g71
NtRp2356
(dp2357
g74
(dp2358
g101
g102
ssg83
g2347
sg76
(lp2359
S':'
asbag69
(g90
g71
NtRp2360
(dp2361
g74
(dp2362
sg83
g2347
sg76
(lp2363
g69
(g70
g71
NtRp2364
(dp2365
g74
(dp2366
g82
I5
ssg83
g2360
sg76
(lp2367
S'/SeniorProject/default/showform'
p2368
asbasbasbag69
(g85
g71
NtRp2369
(dp2370
g74
(dp2371
sg83
g79
sg76
(lp2372
g69
(g90
g71
NtRp2373
(dp2374
g74
(dp2375
g94
g95
ssg83
g2369
sg76
(lp2376
S'utcnow'
p2377
asbag69
(g90
g71
NtRp2378
(dp2379
g74
(dp2380
g101
g102
ssg83
g2369
sg76
(lp2381
S':'
asbag69
(g90
g71
NtRp2382
(dp2383
g74
(dp2384
sg83
g2369
sg76
(lp2385
g69
(g70
g71
NtRp2386
(dp2387
g74
(dp2388
g82
I5
ssg83
g2382
sg76
(lp2389
S'datetime.datetime(2013, 4, 18, 18, 10, 51, 777817)'
p2390
asbasbasbag69
(g85
g71
NtRp2391
(dp2392
g74
(dp2393
sg83
g79
sg76
(lp2394
g69
(g90
g71
NtRp2395
(dp2396
g74
(dp2397
g94
g95
ssg83
g2391
sg76
(lp2398
S'uuid'
p2399
asbag69
(g90
g71
NtRp2400
(dp2401
g74
(dp2402
g101
g102
ssg83
g2391
sg76
(lp2403
S':'
asbag69
(g90
g71
NtRp2404
(dp2405
g74
(dp2406
sg83
g2391
sg76
(lp2407
g69
(g70
g71
NtRp2408
(dp2409
g74
(dp2410
g82
I5
ssg83
g2404
sg76
(lp2411
S'SeniorProject/127.0.0.1.2013-04-18.13-10-51.4036b8d3-11b2-4e36-833b-c9b0b11ae782'
p2412
asbasbasbag69
(g85
g71
NtRp2413
(dp2414
g74
(dp2415
sg83
g79
sg76
(lp2416
g69
(g90
g71
NtRp2417
(dp2418
g74
(dp2419
g94
g95
ssg83
g2413
sg76
(lp2420
S'vars'
p2421
asbag69
(g90
g71
NtRp2422
(dp2423
g74
(dp2424
g101
g102
ssg83
g2413
sg76
(lp2425
S':'
asbag69
(g90
g71
NtRp2426
(dp2427
g74
(dp2428
sg83
g2413
sg76
(lp2429
g69
(g70
g71
NtRp2430
(dp2431
g74
(dp2432
g82
I5
ssg83
g2426
sg76
(lp2433
g69
(g78
g71
NtRp2434
(dp2435
g74
(dp2436
g82
I4
ssg83
Nsg76
(lp2437
g69
(g85
g71
NtRp2438
(dp2439
g74
(dp2440
sg83
g2434
sg76
(lp2441
g69
(g90
g71
NtRp2442
(dp2443
g74
(dp2444
g94
g95
ssg83
g2438
sg76
(lp2445
g1883
asbag69
(g90
g71
NtRp2446
(dp2447
g74
(dp2448
g101
g102
ssg83
g2438
sg76
(lp2449
S':'
asbag69
(g90
g71
NtRp2450
(dp2451
g74
(dp2452
sg83
g2438
sg76
(lp2453
g69
(g70
g71
NtRp2454
(dp2455
g74
(dp2456
g82
I4
ssg83
g2450
sg76
(lp2457
g1896
asbasbasbag69
(g85
g71
NtRp2458
(dp2459
g74
(dp2460
sg83
g2434
sg76
(lp2461
g69
(g90
g71
NtRp2462
(dp2463
g74
(dp2464
g94
g95
ssg83
g2458
sg76
(lp2465
g1905
asbag69
(g90
g71
NtRp2466
(dp2467
g74
(dp2468
g101
g102
ssg83
g2458
sg76
(lp2469
S':'
asbag69
(g90
g71
NtRp2470
(dp2471
g74
(dp2472
sg83
g2458
sg76
(lp2473
g69
(g70
g71
NtRp2474
(dp2475
g74
(dp2476
g82
I4
ssg83
g2470
sg76
(lp2477
g1918
asbasbasbasbasbasbasbag69
(g85
g71
NtRp2478
(dp2479
g74
(dp2480
sg83
g79
sg76
(lp2481
g69
(g90
g71
NtRp2482
(dp2483
g74
(dp2484
g94
g95
ssg83
g2478
sg76
(lp2485
S'wsgi'
p2486
asbag69
(g90
g71
NtRp2487
(dp2488
g74
(dp2489
g101
g102
ssg83
g2478
sg76
(lp2490
S':'
asbag69
(g90
g71
NtRp2491
(dp2492
g74
(dp2493
sg83
g2478
sg76
(lp2494
g69
(g70
g71
NtRp2495
(dp2496
g74
(dp2497
g82
I5
ssg83
g2491
sg76
(lp2498
g69
(g78
g71
NtRp2499
(dp2500
g74
(dp2501
g82
I4
ssg83
Nsg76
(lp2502
g69
(g85
g71
NtRp2503
(dp2504
g74
(dp2505
sg83
g2499
sg76
(lp2506
g69
(g90
g71
NtRp2507
(dp2508
g74
(dp2509
g94
g95
ssg83
g2503
sg76
(lp2510
S'environ'
p2511
asbag69
(g90
g71
NtRp2512
(dp2513
g74
(dp2514
g101
g102
ssg83
g2503
sg76
(lp2515
S':'
asbag69
(g90
g71
NtRp2516
(dp2517
g74
(dp2518
sg83
g2503
sg76
(lp2519
g69
(g70
g71
NtRp2520
(dp2521
g74
(dp2522
g82
I4
ssg83
g2516
sg76
(lp2523
g69
(g78
g71
NtRp2524
(dp2525
g74
(dp2526
g82
I3
ssg83
Nsg76
(lp2527
g69
(g85
g71
NtRp2528
(dp2529
g74
(dp2530
sg83
g2524
sg76
(lp2531
g69
(g90
g71
NtRp2532
(dp2533
g74
(dp2534
g94
g95
ssg83
g2528
sg76
(lp2535
S'HTTP_ACCEPT'
p2536
asbag69
(g90
g71
NtRp2537
(dp2538
g74
(dp2539
g101
g102
ssg83
g2528
sg76
(lp2540
S':'
asbag69
(g90
g71
NtRp2541
(dp2542
g74
(dp2543
sg83
g2528
sg76
(lp2544
g69
(g70
g71
NtRp2545
(dp2546
g74
(dp2547
g82
I3
ssg83
g2541
sg76
(lp2548
g1015
asbasbasbag69
(g85
g71
NtRp2549
(dp2550
g74
(dp2551
sg83
g2524
sg76
(lp2552
g69
(g90
g71
NtRp2553
(dp2554
g74
(dp2555
g94
g95
ssg83
g2549
sg76
(lp2556
S'HTTP_ACCEPT_CHARSET'
p2557
asbag69
(g90
g71
NtRp2558
(dp2559
g74
(dp2560
g101
g102
ssg83
g2549
sg76
(lp2561
S':'
asbag69
(g90
g71
NtRp2562
(dp2563
g74
(dp2564
sg83
g2549
sg76
(lp2565
g69
(g70
g71
NtRp2566
(dp2567
g74
(dp2568
g82
I3
ssg83
g2562
sg76
(lp2569
g1037
asbasbasbag69
(g85
g71
NtRp2570
(dp2571
g74
(dp2572
sg83
g2524
sg76
(lp2573
g69
(g90
g71
NtRp2574
(dp2575
g74
(dp2576
g94
g95
ssg83
g2570
sg76
(lp2577
S'HTTP_ACCEPT_ENCODING'
p2578
asbag69
(g90
g71
NtRp2579
(dp2580
g74
(dp2581
g101
g102
ssg83
g2570
sg76
(lp2582
S':'
asbag69
(g90
g71
NtRp2583
(dp2584
g74
(dp2585
sg83
g2570
sg76
(lp2586
g69
(g70
g71
NtRp2587
(dp2588
g74
(dp2589
g82
I3
ssg83
g2583
sg76
(lp2590
g1059
asbasbasbag69
(g85
g71
NtRp2591
(dp2592
g74
(dp2593
sg83
g2524
sg76
(lp2594
g69
(g90
g71
NtRp2595
(dp2596
g74
(dp2597
g94
g95
ssg83
g2591
sg76
(lp2598
S'HTTP_ACCEPT_LANGUAGE'
p2599
asbag69
(g90
g71
NtRp2600
(dp2601
g74
(dp2602
g101
g102
ssg83
g2591
sg76
(lp2603
S':'
asbag69
(g90
g71
NtRp2604
(dp2605
g74
(dp2606
sg83
g2591
sg76
(lp2607
g69
(g70
g71
NtRp2608
(dp2609
g74
(dp2610
g82
I3
ssg83
g2604
sg76
(lp2611
g1081
asbasbasbag69
(g85
g71
NtRp2612
(dp2613
g74
(dp2614
sg83
g2524
sg76
(lp2615
g69
(g90
g71
NtRp2616
(dp2617
g74
(dp2618
g94
g95
ssg83
g2612
sg76
(lp2619
S'HTTP_CONNECTION'
p2620
asbag69
(g90
g71
NtRp2621
(dp2622
g74
(dp2623
g101
g102
ssg83
g2612
sg76
(lp2624
S':'
asbag69
(g90
g71
NtRp2625
(dp2626
g74
(dp2627
sg83
g2612
sg76
(lp2628
g69
(g70
g71
NtRp2629
(dp2630
g74
(dp2631
g82
I3
ssg83
g2625
sg76
(lp2632
g1103
asbasbasbag69
(g85
g71
NtRp2633
(dp2634
g74
(dp2635
sg83
g2524
sg76
(lp2636
g69
(g90
g71
NtRp2637
(dp2638
g74
(dp2639
g94
g95
ssg83
g2633
sg76
(lp2640
S'HTTP_COOKIE'
p2641
asbag69
(g90
g71
NtRp2642
(dp2643
g74
(dp2644
g101
g102
ssg83
g2633
sg76
(lp2645
S':'
asbag69
(g90
g71
NtRp2646
(dp2647
g74
(dp2648
sg83
g2633
sg76
(lp2649
g69
(g70
g71
NtRp2650
(dp2651
g74
(dp2652
g82
I3
ssg83
g2646
sg76
(lp2653
g1125
asbasbasbag69
(g85
g71
NtRp2654
(dp2655
g74
(dp2656
sg83
g2524
sg76
(lp2657
g69
(g90
g71
NtRp2658
(dp2659
g74
(dp2660
g94
g95
ssg83
g2654
sg76
(lp2661
S'HTTP_HOST'
p2662
asbag69
(g90
g71
NtRp2663
(dp2664
g74
(dp2665
g101
g102
ssg83
g2654
sg76
(lp2666
S':'
asbag69
(g90
g71
NtRp2667
(dp2668
g74
(dp2669
sg83
g2654
sg76
(lp2670
g69
(g70
g71
NtRp2671
(dp2672
g74
(dp2673
g82
I3
ssg83
g2667
sg76
(lp2674
g1147
asbasbasbag69
(g85
g71
NtRp2675
(dp2676
g74
(dp2677
sg83
g2524
sg76
(lp2678
g69
(g90
g71
NtRp2679
(dp2680
g74
(dp2681
g94
g95
ssg83
g2675
sg76
(lp2682
S'HTTP_REFERER'
p2683
asbag69
(g90
g71
NtRp2684
(dp2685
g74
(dp2686
g101
g102
ssg83
g2675
sg76
(lp2687
S':'
asbag69
(g90
g71
NtRp2688
(dp2689
g74
(dp2690
sg83
g2675
sg76
(lp2691
g69
(g70
g71
NtRp2692
(dp2693
g74
(dp2694
g82
I3
ssg83
g2688
sg76
(lp2695
g1169
asbasbasbag69
(g85
g71
NtRp2696
(dp2697
g74
(dp2698
sg83
g2524
sg76
(lp2699
g69
(g90
g71
NtRp2700
(dp2701
g74
(dp2702
g94
g95
ssg83
g2696
sg76
(lp2703
S'HTTP_USER_AGENT'
p2704
asbag69
(g90
g71
NtRp2705
(dp2706
g74
(dp2707
g101
g102
ssg83
g2696
sg76
(lp2708
S':'
asbag69
(g90
g71
NtRp2709
(dp2710
g74
(dp2711
sg83
g2696
sg76
(lp2712
g69
(g70
g71
NtRp2713
(dp2714
g74
(dp2715
g82
I3
ssg83
g2709
sg76
(lp2716
g1191
asbasbasbag69
(g85
g71
NtRp2717
(dp2718
g74
(dp2719
sg83
g2524
sg76
(lp2720
g69
(g90
g71
NtRp2721
(dp2722
g74
(dp2723
g94
g95
ssg83
g2717
sg76
(lp2724
S'PATH_INFO'
p2725
asbag69
(g90
g71
NtRp2726
(dp2727
g74
(dp2728
g101
g102
ssg83
g2717
sg76
(lp2729
S':'
asbag69
(g90
g71
NtRp2730
(dp2731
g74
(dp2732
sg83
g2717
sg76
(lp2733
g69
(g70
g71
NtRp2734
(dp2735
g74
(dp2736
g82
I3
ssg83
g2730
sg76
(lp2737
g1255
asbasbasbag69
(g85
g71
NtRp2738
(dp2739
g74
(dp2740
sg83
g2524
sg76
(lp2741
g69
(g90
g71
NtRp2742
(dp2743
g74
(dp2744
g94
g95
ssg83
g2738
sg76
(lp2745
S'QUERY_STRING'
p2746
asbag69
(g90
g71
NtRp2747
(dp2748
g74
(dp2749
g101
g102
ssg83
g2738
sg76
(lp2750
S':'
asbag69
(g90
g71
NtRp2751
(dp2752
g74
(dp2753
sg83
g2738
sg76
(lp2754
g69
(g70
g71
NtRp2755
(dp2756
g74
(dp2757
g82
I3
ssg83
g2751
sg76
(lp2758
g1277
asbasbasbag69
(g85
g71
NtRp2759
(dp2760
g74
(dp2761
sg83
g2524
sg76
(lp2762
g69
(g90
g71
NtRp2763
(dp2764
g74
(dp2765
g94
g95
ssg83
g2759
sg76
(lp2766
S'REMOTE_ADDR'
p2767
asbag69
(g90
g71
NtRp2768
(dp2769
g74
(dp2770
g101
g102
ssg83
g2759
sg76
(lp2771
S':'
asbag69
(g90
g71
NtRp2772
(dp2773
g74
(dp2774
sg83
g2759
sg76
(lp2775
g69
(g70
g71
NtRp2776
(dp2777
g74
(dp2778
g82
I3
ssg83
g2772
sg76
(lp2779
g202
asbasbasbag69
(g85
g71
NtRp2780
(dp2781
g74
(dp2782
sg83
g2524
sg76
(lp2783
g69
(g90
g71
NtRp2784
(dp2785
g74
(dp2786
g94
g95
ssg83
g2780
sg76
(lp2787
S'REMOTE_PORT'
p2788
asbag69
(g90
g71
NtRp2789
(dp2790
g74
(dp2791
g101
g102
ssg83
g2780
sg76
(lp2792
S':'
asbag69
(g90
g71
NtRp2793
(dp2794
g74
(dp2795
sg83
g2780
sg76
(lp2796
g69
(g70
g71
NtRp2797
(dp2798
g74
(dp2799
g82
I3
ssg83
g2793
sg76
(lp2800
g1320
asbasbasbag69
(g85
g71
NtRp2801
(dp2802
g74
(dp2803
sg83
g2524
sg76
(lp2804
g69
(g90
g71
NtRp2805
(dp2806
g74
(dp2807
g94
g95
ssg83
g2801
sg76
(lp2808
S'REQUEST_METHOD'
p2809
asbag69
(g90
g71
NtRp2810
(dp2811
g74
(dp2812
g101
g102
ssg83
g2801
sg76
(lp2813
S':'
asbag69
(g90
g71
NtRp2814
(dp2815
g74
(dp2816
sg83
g2801
sg76
(lp2817
g69
(g70
g71
NtRp2818
(dp2819
g74
(dp2820
g82
I3
ssg83
g2814
sg76
(lp2821
g1342
asbasbasbag69
(g85
g71
NtRp2822
(dp2823
g74
(dp2824
sg83
g2524
sg76
(lp2825
g69
(g90
g71
NtRp2826
(dp2827
g74
(dp2828
g94
g95
ssg83
g2822
sg76
(lp2829
S'SCRIPT_NAME'
p2830
asbag69
(g90
g71
NtRp2831
(dp2832
g74
(dp2833
g101
g102
ssg83
g2822
sg76
(lp2834
S':'
asbag69
(g90
g71
NtRp2835
(dp2836
g74
(dp2837
sg83
g2822
sg76
(lp2838
g69
(g70
g71
NtRp2839
(dp2840
g74
(dp2841
g82
I3
ssg83
g2835
sg76
(lp2842
S''
asbasbasbag69
(g85
g71
NtRp2843
(dp2844
g74
(dp2845
sg83
g2524
sg76
(lp2846
g69
(g90
g71
NtRp2847
(dp2848
g74
(dp2849
g94
g95
ssg83
g2843
sg76
(lp2850
S'SERVER_NAME'
p2851
asbag69
(g90
g71
NtRp2852
(dp2853
g74
(dp2854
g101
g102
ssg83
g2843
sg76
(lp2855
S':'
asbag69
(g90
g71
NtRp2856
(dp2857
g74
(dp2858
sg83
g2843
sg76
(lp2859
g69
(g70
g71
NtRp2860
(dp2861
g74
(dp2862
g82
I3
ssg83
g2856
sg76
(lp2863
g1385
asbasbasbag69
(g85
g71
NtRp2864
(dp2865
g74
(dp2866
sg83
g2524
sg76
(lp2867
g69
(g90
g71
NtRp2868
(dp2869
g74
(dp2870
g94
g95
ssg83
g2864
sg76
(lp2871
S'SERVER_PORT'
p2872
asbag69
(g90
g71
NtRp2873
(dp2874
g74
(dp2875
g101
g102
ssg83
g2864
sg76
(lp2876
S':'
asbag69
(g90
g71
NtRp2877
(dp2878
g74
(dp2879
sg83
g2864
sg76
(lp2880
g69
(g70
g71
NtRp2881
(dp2882
g74
(dp2883
g82
I3
ssg83
g2877
sg76
(lp2884
g1407
asbasbasbag69
(g85
g71
NtRp2885
(dp2886
g74
(dp2887
sg83
g2524
sg76
(lp2888
g69
(g90
g71
NtRp2889
(dp2890
g74
(dp2891
g94
g95
ssg83
g2885
sg76
(lp2892
S'SERVER_PROTOCOL'
p2893
asbag69
(g90
g71
NtRp2894
(dp2895
g74
(dp2896
g101
g102
ssg83
g2885
sg76
(lp2897
S':'
asbag69
(g90
g71
NtRp2898
(dp2899
g74
(dp2900
sg83
g2885
sg76
(lp2901
g69
(g70
g71
NtRp2902
(dp2903
g74
(dp2904
g82
I3
ssg83
g2898
sg76
(lp2905
g1429
asbasbasbag69
(g85
g71
NtRp2906
(dp2907
g74
(dp2908
sg83
g2524
sg76
(lp2909
g69
(g90
g71
NtRp2910
(dp2911
g74
(dp2912
g94
g95
ssg83
g2906
sg76
(lp2913
S'SERVER_SOFTWARE'
p2914
asbag69
(g90
g71
NtRp2915
(dp2916
g74
(dp2917
g101
g102
ssg83
g2906
sg76
(lp2918
S':'
asbag69
(g90
g71
NtRp2919
(dp2920
g74
(dp2921
sg83
g2906
sg76
(lp2922
g69
(g70
g71
NtRp2923
(dp2924
g74
(dp2925
g82
I3
ssg83
g2919
sg76
(lp2926
g1451
asbasbasbag69
(g85
g71
NtRp2927
(dp2928
g74
(dp2929
sg83
g2524
sg76
(lp2930
g69
(g90
g71
NtRp2931
(dp2932
g74
(dp2933
g94
g95
ssg83
g2927
sg76
(lp2934
S'wsgi.errors'
p2935
asbag69
(g90
g71
NtRp2936
(dp2937
g74
(dp2938
g101
g102
ssg83
g2927
sg76
(lp2939
S':'
asbag69
(g90
g71
NtRp2940
(dp2941
g74
(dp2942
sg83
g2927
sg76
(lp2943
g69
(g70
g71
NtRp2944
(dp2945
g74
(dp2946
g82
I3
ssg83
g2940
sg76
(lp2947
S"<open file '<stderr>', mode 'w' at 0x100282270>"
p2948
asbasbasbag69
(g85
g71
NtRp2949
(dp2950
g74
(dp2951
sg83
g2524
sg76
(lp2952
g69
(g90
g71
NtRp2953
(dp2954
g74
(dp2955
g94
g95
ssg83
g2949
sg76
(lp2956
S'wsgi.file_wrapper'
p2957
asbag69
(g90
g71
NtRp2958
(dp2959
g74
(dp2960
g101
g102
ssg83
g2949
sg76
(lp2961
S':'
asbag69
(g90
g71
NtRp2962
(dp2963
g74
(dp2964
sg83
g2949
sg76
(lp2965
g69
(g70
g71
NtRp2966
(dp2967
g74
(dp2968
g82
I3
ssg83
g2962
sg76
(lp2969
S'<class wsgiref.util.FileWrapper at 0x1018c6120>'
p2970
asbasbasbag69
(g85
g71
NtRp2971
(dp2972
g74
(dp2973
sg83
g2524
sg76
(lp2974
g69
(g90
g71
NtRp2975
(dp2976
g74
(dp2977
g94
g95
ssg83
g2971
sg76
(lp2978
S'wsgi.input'
p2979
asbag69
(g90
g71
NtRp2980
(dp2981
g74
(dp2982
g101
g102
ssg83
g2971
sg76
(lp2983
S':'
asbag69
(g90
g71
NtRp2984
(dp2985
g74
(dp2986
sg83
g2971
sg76
(lp2987
g69
(g70
g71
NtRp2988
(dp2989
g74
(dp2990
g82
I3
ssg83
g2984
sg76
(lp2991
S'<cStringIO.StringO object at 0x10c8b9880>'
p2992
asbasbasbag69
(g85
g71
NtRp2993
(dp2994
g74
(dp2995
sg83
g2524
sg76
(lp2996
g69
(g90
g71
NtRp2997
(dp2998
g74
(dp2999
g94
g95
ssg83
g2993
sg76
(lp3000
S'wsgi.multiprocess'
p3001
asbag69
(g90
g71
NtRp3002
(dp3003
g74
(dp3004
g101
g102
ssg83
g2993
sg76
(lp3005
S':'
asbag69
(g90
g71
NtRp3006
(dp3007
g74
(dp3008
sg83
g2993
sg76
(lp3009
g69
(g70
g71
NtRp3010
(dp3011
g74
(dp3012
g82
I3
ssg83
g3006
sg76
(lp3013
g112
asbasbasbag69
(g85
g71
NtRp3014
(dp3015
g74
(dp3016
sg83
g2524
sg76
(lp3017
g69
(g90
g71
NtRp3018
(dp3019
g74
(dp3020
g94
g95
ssg83
g3014
sg76
(lp3021
S'wsgi.multithread'
p3022
asbag69
(g90
g71
NtRp3023
(dp3024
g74
(dp3025
g101
g102
ssg83
g3014
sg76
(lp3026
S':'
asbag69
(g90
g71
NtRp3027
(dp3028
g74
(dp3029
sg83
g3014
sg76
(lp3030
g69
(g70
g71
NtRp3031
(dp3032
g74
(dp3033
g82
I3
ssg83
g3027
sg76
(lp3034
g1691
asbasbasbag69
(g85
g71
NtRp3035
(dp3036
g74
(dp3037
sg83
g2524
sg76
(lp3038
g69
(g90
g71
NtRp3039
(dp3040
g74
(dp3041
g94
g95
ssg83
g3035
sg76
(lp3042
S'wsgi.run_once'
p3043
asbag69
(g90
g71
NtRp3044
(dp3045
g74
(dp3046
g101
g102
ssg83
g3035
sg76
(lp3047
S':'
asbag69
(g90
g71
NtRp3048
(dp3049
g74
(dp3050
sg83
g3035
sg76
(lp3051
g69
(g70
g71
NtRp3052
(dp3053
g74
(dp3054
g82
I3
ssg83
g3048
sg76
(lp3055
g112
asbasbasbag69
(g85
g71
NtRp3056
(dp3057
g74
(dp3058
sg83
g2524
sg76
(lp3059
g69
(g90
g71
NtRp3060
(dp3061
g74
(dp3062
g94
g95
ssg83
g3056
sg76
(lp3063
S'wsgi.url_scheme'
p3064
asbag69
(g90
g71
NtRp3065
(dp3066
g74
(dp3067
g101
g102
ssg83
g3056
sg76
(lp3068
S':'
asbag69
(g90
g71
NtRp3069
(dp3070
g74
(dp3071
sg83
g3056
sg76
(lp3072
g69
(g70
g71
NtRp3073
(dp3074
g74
(dp3075
g82
I3
ssg83
g3069
sg76
(lp3076
g1734
asbasbasbag69
(g85
g71
NtRp3077
(dp3078
g74
(dp3079
sg83
g2524
sg76
(lp3080
g69
(g90
g71
NtRp3081
(dp3082
g74
(dp3083
g94
g95
ssg83
g3077
sg76
(lp3084
S'wsgi.version'
p3085
asbag69
(g90
g71
NtRp3086
(dp3087
g74
(dp3088
g101
g102
ssg83
g3077
sg76
(lp3089
S':'
asbag69
(g90
g71
NtRp3090
(dp3091
g74
(dp3092
sg83
g3077
sg76
(lp3093
g69
(g70
g71
NtRp3094
(dp3095
g74
(dp3096
g82
I3
ssg83
g3090
sg76
(lp3097
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3098
(lp3099
(dp3100
S'file'
p3101
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3102
sS'dump'
p3103
(dp3104
S'code'
p3105
S"'# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n'"
p3106
sS'layer'
p3107
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3108
sS'global compile2'
p3109
S'<function compile2>'
p3110
sS'ccode'
p3111
S'undefined'
p3112
ssS'lnum'
p3113
I204
sS'lines'
p3114
(dp3115
I199
S"    environment['__name__'] = '__restricted__'"
p3116
sI200
S'    try:'
p3117
sI201
S'        if type(code) == types.CodeType:'
p3118
sI202
S'            ccode = code'
p3119
sI203
S'        else:'
p3120
sI204
S'            ccode = compile2(code,layer)'
p3121
sI205
S'        exec ccode in environment'
p3122
sI206
S'    except HTTP:'
p3123
sI207
S'        raise'
p3124
sI208
S'    except RestrictedError:'
p3125
ssS'call'
p3126
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3127
sS'func'
p3128
S'restricted'
p3129
sa(dp3130
g3101
S'/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py'
p3131
sg3103
(dp3132
S'builtincompile'
p3133
S'<built-in function compile>'
p3134
sS'code'
p3135
S"'# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n'"
p3136
sS'code.rstrip'
p3137
S'<built-in method rstrip of str object>'
p3138
sS').replace'
p3139
g3112
sS'layer'
p3140
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p3141
ssg3113
I189
sg3114
(dp3142
I192
S'    """'
p3143
sI193
S'    runs code in environment and returns the output. if an exception occurs'
p3144
sI184
S''
sI185
S'def compile2(code,layer):'
p3145
sI186
S'    """'
p3146
sI187
S"    The +'\\n' is necessary else compile fails when code ends in a comment."
p3147
sI188
S'    """'
p3148
sI189
S"    return compile(code.rstrip().replace('\\r\\n','\\n')+'\\n', layer, 'exec')"
p3149
sI190
S''
sI191
S"def restricted(code, environment=None, layer='Unknown'):"
p3150
ssg3126
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n', layer='/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py')"
p3151
sg3128
S'compile2'
p3152
sasS'pyver'
p3153
S'Python 2.7.2: /Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python'
p3154
sS'session'
p3155
g69
(g70
g71
NtRp3156
(dp3157
g74
(dp3158
sg76
(lp3159
g69
(g78
g71
NtRp3160
(dp3161
g74
(dp3162
g82
I5
ssg83
Nsg76
(lp3163
g69
(g85
g71
NtRp3164
(dp3165
g74
(dp3166
sg83
g3160
sg76
(lp3167
g69
(g90
g71
NtRp3168
(dp3169
g74
(dp3170
g94
g95
ssg83
g3164
sg76
(lp3171
S'auth'
p3172
asbag69
(g90
g71
NtRp3173
(dp3174
g74
(dp3175
g101
g102
ssg83
g3164
sg76
(lp3176
S':'
asbag69
(g90
g71
NtRp3177
(dp3178
g74
(dp3179
sg83
g3164
sg76
(lp3180
g69
(g70
g71
NtRp3181
(dp3182
g74
(dp3183
g82
I5
ssg83
g3177
sg76
(lp3184
g69
(g78
g71
NtRp3185
(dp3186
g74
(dp3187
g82
I4
ssg83
Nsg76
(lp3188
g69
(g85
g71
NtRp3189
(dp3190
g74
(dp3191
sg83
g3185
sg76
(lp3192
g69
(g90
g71
NtRp3193
(dp3194
g74
(dp3195
g94
g95
ssg83
g3189
sg76
(lp3196
S'expiration'
p3197
asbag69
(g90
g71
NtRp3198
(dp3199
g74
(dp3200
g101
g102
ssg83
g3189
sg76
(lp3201
S':'
asbag69
(g90
g71
NtRp3202
(dp3203
g74
(dp3204
sg83
g3189
sg76
(lp3205
g69
(g70
g71
NtRp3206
(dp3207
g74
(dp3208
g82
I4
ssg83
g3202
sg76
(lp3209
S'3600'
p3210
asbasbasbag69
(g85
g71
NtRp3211
(dp3212
g74
(dp3213
sg83
g3185
sg76
(lp3214
g69
(g90
g71
NtRp3215
(dp3216
g74
(dp3217
g94
g95
ssg83
g3211
sg76
(lp3218
S'hmac_key'
p3219
asbag69
(g90
g71
NtRp3220
(dp3221
g74
(dp3222
g101
g102
ssg83
g3211
sg76
(lp3223
S':'
asbag69
(g90
g71
NtRp3224
(dp3225
g74
(dp3226
sg83
g3211
sg76
(lp3227
g69
(g70
g71
NtRp3228
(dp3229
g74
(dp3230
g82
I4
ssg83
g3224
sg76
(lp3231
S'8283127a-f7e0-4b3a-a237-254d6b628a96'
p3232
asbasbasbag69
(g85
g71
NtRp3233
(dp3234
g74
(dp3235
sg83
g3185
sg76
(lp3236
g69
(g90
g71
NtRp3237
(dp3238
g74
(dp3239
g94
g95
ssg83
g3233
sg76
(lp3240
S'last_visit'
p3241
asbag69
(g90
g71
NtRp3242
(dp3243
g74
(dp3244
g101
g102
ssg83
g3233
sg76
(lp3245
S':'
asbag69
(g90
g71
NtRp3246
(dp3247
g74
(dp3248
sg83
g3233
sg76
(lp3249
g69
(g70
g71
NtRp3250
(dp3251
g74
(dp3252
g82
I4
ssg83
g3246
sg76
(lp3253
S'datetime.datetime(2013, 4, 18, 13, 10, 51, 777794)'
p3254
asbasbasbag69
(g85
g71
NtRp3255
(dp3256
g74
(dp3257
sg83
g3185
sg76
(lp3258
g69
(g90
g71
NtRp3259
(dp3260
g74
(dp3261
g94
g95
ssg83
g3255
sg76
(lp3262
S'remember'
p3263
asbag69
(g90
g71
NtRp3264
(dp3265
g74
(dp3266
g101
g102
ssg83
g3255
sg76
(lp3267
S':'
asbag69
(g90
g71
NtRp3268
(dp3269
g74
(dp3270
sg83
g3255
sg76
(lp3271
g69
(g70
g71
NtRp3272
(dp3273
g74
(dp3274
g82
I4
ssg83
g3268
sg76
(lp3275
g112
asbasbasbag69
(g85
g71
NtRp3276
(dp3277
g74
(dp3278
sg83
g3185
sg76
(lp3279
g69
(g90
g71
NtRp3280
(dp3281
g74
(dp3282
g94
g95
ssg83
g3276
sg76
(lp3283
S'user'
p3284
asbag69
(g90
g71
NtRp3285
(dp3286
g74
(dp3287
g101
g102
ssg83
g3276
sg76
(lp3288
S':'
asbag69
(g90
g71
NtRp3289
(dp3290
g74
(dp3291
sg83
g3276
sg76
(lp3292
g69
(g70
g71
NtRp3293
(dp3294
g74
(dp3295
g82
I4
ssg83
g3289
sg76
(lp3296
g69
(g78
g71
NtRp3297
(dp3298
g74
(dp3299
g82
I3
ssg83
Nsg76
(lp3300
g69
(g85
g71
NtRp3301
(dp3302
g74
(dp3303
sg83
g3297
sg76
(lp3304
g69
(g90
g71
NtRp3305
(dp3306
g74
(dp3307
g94
g95
ssg83
g3301
sg76
(lp3308
S'email'
p3309
asbag69
(g90
g71
NtRp3310
(dp3311
g74
(dp3312
g101
g102
ssg83
g3301
sg76
(lp3313
S':'
asbag69
(g90
g71
NtRp3314
(dp3315
g74
(dp3316
sg83
g3301
sg76
(lp3317
g69
(g70
g71
NtRp3318
(dp3319
g74
(dp3320
g82
I3
ssg83
g3314
sg76
(lp3321
S'hainna01@luther.edu'
p3322
asbasbasbag69
(g85
g71
NtRp3323
(dp3324
g74
(dp3325
sg83
g3297
sg76
(lp3326
g69
(g90
g71
NtRp3327
(dp3328
g74
(dp3329
g94
g95
ssg83
g3323
sg76
(lp3330
S'first_name'
p3331
asbag69
(g90
g71
NtRp3332
(dp3333
g74
(dp3334
g101
g102
ssg83
g3323
sg76
(lp3335
S':'
asbag69
(g90
g71
NtRp3336
(dp3337
g74
(dp3338
sg83
g3323
sg76
(lp3339
g69
(g70
g71
NtRp3340
(dp3341
g74
(dp3342
g82
I3
ssg83
g3336
sg76
(lp3343
S'Nathan'
p3344
asbasbasbag69
(g85
g71
NtRp3345
(dp3346
g74
(dp3347
sg83
g3297
sg76
(lp3348
g69
(g90
g71
NtRp3349
(dp3350
g74
(dp3351
g94
g95
ssg83
g3345
sg76
(lp3352
S'id'
p3353
asbag69
(g90
g71
NtRp3354
(dp3355
g74
(dp3356
g101
g102
ssg83
g3345
sg76
(lp3357
S':'
asbag69
(g90
g71
NtRp3358
(dp3359
g74
(dp3360
sg83
g3345
sg76
(lp3361
g69
(g70
g71
NtRp3362
(dp3363
g74
(dp3364
g82
I3
ssg83
g3358
sg76
(lp3365
S'1'
asbasbasbag69
(g85
g71
NtRp3366
(dp3367
g74
(dp3368
sg83
g3297
sg76
(lp3369
g69
(g90
g71
NtRp3370
(dp3371
g74
(dp3372
g94
g95
ssg83
g3366
sg76
(lp3373
S'last_name'
p3374
asbag69
(g90
g71
NtRp3375
(dp3376
g74
(dp3377
g101
g102
ssg83
g3366
sg76
(lp3378
S':'
asbag69
(g90
g71
NtRp3379
(dp3380
g74
(dp3381
sg83
g3366
sg76
(lp3382
g69
(g70
g71
NtRp3383
(dp3384
g74
(dp3385
g82
I3
ssg83
g3379
sg76
(lp3386
S'Haines'
p3387
asbasbasbag69
(g85
g71
NtRp3388
(dp3389
g74
(dp3390
sg83
g3297
sg76
(lp3391
g69
(g90
g71
NtRp3392
(dp3393
g74
(dp3394
g94
g95
ssg83
g3388
sg76
(lp3395
S'password'
p3396
asbag69
(g90
g71
NtRp3397
(dp3398
g74
(dp3399
g101
g102
ssg83
g3388
sg76
(lp3400
S':'
asbag69
(g90
g71
NtRp3401
(dp3402
g74
(dp3403
sg83
g3388
sg76
(lp3404
g69
(g70
g71
NtRp3405
(dp3406
g74
(dp3407
g82
I3
ssg83
g3401
sg76
(lp3408
S'fe1e96030dadc5f9d0d88de7261b31f4'
p3409
asbasbasbag69
(g85
g71
NtRp3410
(dp3411
g74
(dp3412
sg83
g3297
sg76
(lp3413
g69
(g90
g71
NtRp3414
(dp3415
g74
(dp3416
g94
g95
ssg83
g3410
sg76
(lp3417
S'phone'
p3418
asbag69
(g90
g71
NtRp3419
(dp3420
g74
(dp3421
g101
g102
ssg83
g3410
sg76
(lp3422
S':'
asbag69
(g90
g71
NtRp3423
(dp3424
g74
(dp3425
sg83
g3410
sg76
(lp3426
g69
(g70
g71
NtRp3427
(dp3428
g74
(dp3429
g82
I3
ssg83
g3423
sg76
(lp3430
S'786767676767'
p3431
asbasbasbag69
(g85
g71
NtRp3432
(dp3433
g74
(dp3434
sg83
g3297
sg76
(lp3435
g69
(g90
g71
NtRp3436
(dp3437
g74
(dp3438
g94
g95
ssg83
g3432
sg76
(lp3439
S'projects'
p3440
asbag69
(g90
g71
NtRp3441
(dp3442
g74
(dp3443
g101
g102
ssg83
g3432
sg76
(lp3444
S':'
asbag69
(g90
g71
NtRp3445
(dp3446
g74
(dp3447
sg83
g3432
sg76
(lp3448
g69
(g70
g71
NtRp3449
(dp3450
g74
(dp3451
g82
I3
ssg83
g3445
sg76
(lp3452
g69
(g78
g71
NtRp3453
(dp3454
g74
(dp3455
g82
I2
ssg83
Nsg76
(lp3456
sbasbasbasbag69
(g85
g71
NtRp3457
(dp3458
g74
(dp3459
sg83
g3297
sg76
(lp3460
g69
(g90
g71
NtRp3461
(dp3462
g74
(dp3463
g94
g95
ssg83
g3457
sg76
(lp3464
S'registration_id'
p3465
asbag69
(g90
g71
NtRp3466
(dp3467
g74
(dp3468
g101
g102
ssg83
g3457
sg76
(lp3469
S':'
asbag69
(g90
g71
NtRp3470
(dp3471
g74
(dp3472
sg83
g3457
sg76
(lp3473
g69
(g70
g71
NtRp3474
(dp3475
g74
(dp3476
g82
I3
ssg83
g3470
sg76
(lp3477
S''
asbasbasbag69
(g85
g71
NtRp3478
(dp3479
g74
(dp3480
sg83
g3297
sg76
(lp3481
g69
(g90
g71
NtRp3482
(dp3483
g74
(dp3484
g94
g95
ssg83
g3478
sg76
(lp3485
S'registration_key'
p3486
asbag69
(g90
g71
NtRp3487
(dp3488
g74
(dp3489
g101
g102
ssg83
g3478
sg76
(lp3490
S':'
asbag69
(g90
g71
NtRp3491
(dp3492
g74
(dp3493
sg83
g3478
sg76
(lp3494
g69
(g70
g71
NtRp3495
(dp3496
g74
(dp3497
g82
I3
ssg83
g3491
sg76
(lp3498
S''
asbasbasbag69
(g85
g71
NtRp3499
(dp3500
g74
(dp3501
sg83
g3297
sg76
(lp3502
g69
(g90
g71
NtRp3503
(dp3504
g74
(dp3505
g94
g95
ssg83
g3499
sg76
(lp3506
S'reset_password_key'
p3507
asbag69
(g90
g71
NtRp3508
(dp3509
g74
(dp3510
g101
g102
ssg83
g3499
sg76
(lp3511
S':'
asbag69
(g90
g71
NtRp3512
(dp3513
g74
(dp3514
sg83
g3499
sg76
(lp3515
g69
(g70
g71
NtRp3516
(dp3517
g74
(dp3518
g82
I3
ssg83
g3512
sg76
(lp3519
S''
asbasbasbag69
(g85
g71
NtRp3520
(dp3521
g74
(dp3522
sg83
g3297
sg76
(lp3523
g69
(g90
g71
NtRp3524
(dp3525
g74
(dp3526
g94
g95
ssg83
g3520
sg76
(lp3527
S'role'
p3528
asbag69
(g90
g71
NtRp3529
(dp3530
g74
(dp3531
g101
g102
ssg83
g3520
sg76
(lp3532
S':'
asbag69
(g90
g71
NtRp3533
(dp3534
g74
(dp3535
sg83
g3520
sg76
(lp3536
g69
(g70
g71
NtRp3537
(dp3538
g74
(dp3539
g82
I3
ssg83
g3533
sg76
(lp3540
S'asdfasdf'
p3541
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3542
(dp3543
g74
(dp3544
sg83
g3185
sg76
(lp3545
g69
(g90
g71
NtRp3546
(dp3547
g74
(dp3548
g94
g95
ssg83
g3542
sg76
(lp3549
S'user_groups'
p3550
asbag69
(g90
g71
NtRp3551
(dp3552
g74
(dp3553
g101
g102
ssg83
g3542
sg76
(lp3554
S':'
asbag69
(g90
g71
NtRp3555
(dp3556
g74
(dp3557
sg83
g3542
sg76
(lp3558
g69
(g70
g71
NtRp3559
(dp3560
g74
(dp3561
g82
I4
ssg83
g3555
sg76
(lp3562
g69
(g78
g71
NtRp3563
(dp3564
g74
(dp3565
g82
I3
ssg83
Nsg76
(lp3566
g69
(g85
g71
NtRp3567
(dp3568
g74
(dp3569
sg83
g3563
sg76
(lp3570
g69
(g90
g71
NtRp3571
(dp3572
g74
(dp3573
g94
g95
ssg83
g3567
sg76
(lp3574
S'2'
asbag69
(g90
g71
NtRp3575
(dp3576
g74
(dp3577
g101
g102
ssg83
g3567
sg76
(lp3578
S':'
asbag69
(g90
g71
NtRp3579
(dp3580
g74
(dp3581
sg83
g3567
sg76
(lp3582
g69
(g70
g71
NtRp3583
(dp3584
g74
(dp3585
g82
I3
ssg83
g3579
sg76
(lp3586
S'Admin'
p3587
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3588
(dp3589
g74
(dp3590
sg83
g3160
sg76
(lp3591
g69
(g90
g71
NtRp3592
(dp3593
g74
(dp3594
g94
g95
ssg83
g3588
sg76
(lp3595
S'last_query'
p3596
asbag69
(g90
g71
NtRp3597
(dp3598
g74
(dp3599
g101
g102
ssg83
g3588
sg76
(lp3600
S':'
asbag69
(g90
g71
NtRp3601
(dp3602
g74
(dp3603
sg83
g3588
sg76
(lp3604
g69
(g70
g71
NtRp3605
(dp3606
g74
(dp3607
g82
I5
ssg83
g3601
sg76
(lp3608
S'db.auth_membership.id>0'
p3609
asbasbasbasbasbsS'etype'
p3610
S"<type 'exceptions.SyntaxError'>"
p3611
sS'date'
p3612
S'Thu Apr 18 13:10:51 2013'
p3613
sS'response'
p3614
g69
(g70
g71
NtRp3615
(dp3616
g74
(dp3617
sg76
(lp3618
g69
(g78
g71
NtRp3619
(dp3620
g74
(dp3621
g82
I5
ssg83
Nsg76
(lp3622
g69
(g85
g71
NtRp3623
(dp3624
g74
(dp3625
sg83
g3619
sg76
(lp3626
g69
(g90
g71
NtRp3627
(dp3628
g74
(dp3629
g94
g95
ssg83
g3623
sg76
(lp3630
g167
asbag69
(g90
g71
NtRp3631
(dp3632
g74
(dp3633
g101
g102
ssg83
g3623
sg76
(lp3634
S':'
asbag69
(g90
g71
NtRp3635
(dp3636
g74
(dp3637
sg83
g3623
sg76
(lp3638
g69
(g70
g71
NtRp3639
(dp3640
g74
(dp3641
g82
I5
ssg83
g3635
sg76
(lp3642
S'<cStringIO.StringO object at 0x108174490>'
p3643
asbasbasbag69
(g85
g71
NtRp3644
(dp3645
g74
(dp3646
sg83
g3619
sg76
(lp3647
g69
(g90
g71
NtRp3648
(dp3649
g74
(dp3650
g94
g95
ssg83
g3644
sg76
(lp3651
g233
asbag69
(g90
g71
NtRp3652
(dp3653
g74
(dp3654
g101
g102
ssg83
g3644
sg76
(lp3655
S':'
asbag69
(g90
g71
NtRp3656
(dp3657
g74
(dp3658
sg83
g3644
sg76
(lp3659
g69
(g70
g71
NtRp3660
(dp3661
g74
(dp3662
g82
I5
ssg83
g3656
sg76
(lp3663
g69
(g78
g71
NtRp3664
(dp3665
g74
(dp3666
g82
I4
ssg83
Nsg76
(lp3667
g69
(g85
g71
NtRp3668
(dp3669
g74
(dp3670
sg83
g3664
sg76
(lp3671
g69
(g90
g71
NtRp3672
(dp3673
g74
(dp3674
g94
g95
ssg83
g3668
sg76
(lp3675
S'session_id_seniorproject'
p3676
asbag69
(g90
g71
NtRp3677
(dp3678
g74
(dp3679
g101
g102
ssg83
g3668
sg76
(lp3680
S':'
asbag69
(g90
g71
NtRp3681
(dp3682
g74
(dp3683
sg83
g3668
sg76
(lp3684
g69
(g70
g71
NtRp3685
(dp3686
g74
(dp3687
g82
I4
ssg83
g3681
sg76
(lp3688
g69
(g78
g71
NtRp3689
(dp3690
g74
(dp3691
g82
I3
ssg83
Nsg76
(lp3692
g69
(g85
g71
NtRp3693
(dp3694
g74
(dp3695
sg83
g3689
sg76
(lp3696
g69
(g90
g71
NtRp3697
(dp3698
g74
(dp3699
g94
g95
ssg83
g3693
sg76
(lp3700
g283
asbag69
(g90
g71
NtRp3701
(dp3702
g74
(dp3703
g101
g102
ssg83
g3693
sg76
(lp3704
S':'
asbag69
(g90
g71
NtRp3705
(dp3706
g74
(dp3707
sg83
g3693
sg76
(lp3708
g69
(g70
g71
NtRp3709
(dp3710
g74
(dp3711
g82
I3
ssg83
g3705
sg76
(lp3712
S''
asbasbasbag69
(g85
g71
NtRp3713
(dp3714
g74
(dp3715
sg83
g3689
sg76
(lp3716
g69
(g90
g71
NtRp3717
(dp3718
g74
(dp3719
g94
g95
ssg83
g3713
sg76
(lp3720
g304
asbag69
(g90
g71
NtRp3721
(dp3722
g74
(dp3723
g101
g102
ssg83
g3713
sg76
(lp3724
S':'
asbag69
(g90
g71
NtRp3725
(dp3726
g74
(dp3727
sg83
g3713
sg76
(lp3728
g69
(g70
g71
NtRp3729
(dp3730
g74
(dp3731
g82
I3
ssg83
g3725
sg76
(lp3732
S''
asbasbasbag69
(g85
g71
NtRp3733
(dp3734
g74
(dp3735
sg83
g3689
sg76
(lp3736
g69
(g90
g71
NtRp3737
(dp3738
g74
(dp3739
g94
g95
ssg83
g3733
sg76
(lp3740
g325
asbag69
(g90
g71
NtRp3741
(dp3742
g74
(dp3743
g101
g102
ssg83
g3733
sg76
(lp3744
S':'
asbag69
(g90
g71
NtRp3745
(dp3746
g74
(dp3747
sg83
g3733
sg76
(lp3748
g69
(g70
g71
NtRp3749
(dp3750
g74
(dp3751
g82
I3
ssg83
g3745
sg76
(lp3752
S''
asbasbasbag69
(g85
g71
NtRp3753
(dp3754
g74
(dp3755
sg83
g3689
sg76
(lp3756
g69
(g90
g71
NtRp3757
(dp3758
g74
(dp3759
g94
g95
ssg83
g3753
sg76
(lp3760
g346
asbag69
(g90
g71
NtRp3761
(dp3762
g74
(dp3763
g101
g102
ssg83
g3753
sg76
(lp3764
S':'
asbag69
(g90
g71
NtRp3765
(dp3766
g74
(dp3767
sg83
g3753
sg76
(lp3768
g69
(g70
g71
NtRp3769
(dp3770
g74
(dp3771
g82
I3
ssg83
g3765
sg76
(lp3772
S''
asbasbasbag69
(g85
g71
NtRp3773
(dp3774
g74
(dp3775
sg83
g3689
sg76
(lp3776
g69
(g90
g71
NtRp3777
(dp3778
g74
(dp3779
g94
g95
ssg83
g3773
sg76
(lp3780
g367
asbag69
(g90
g71
NtRp3781
(dp3782
g74
(dp3783
g101
g102
ssg83
g3773
sg76
(lp3784
S':'
asbag69
(g90
g71
NtRp3785
(dp3786
g74
(dp3787
sg83
g3773
sg76
(lp3788
g69
(g70
g71
NtRp3789
(dp3790
g74
(dp3791
g82
I3
ssg83
g3785
sg76
(lp3792
S''
asbasbasbag69
(g85
g71
NtRp3793
(dp3794
g74
(dp3795
sg83
g3689
sg76
(lp3796
g69
(g90
g71
NtRp3797
(dp3798
g74
(dp3799
g94
g95
ssg83
g3793
sg76
(lp3800
g388
asbag69
(g90
g71
NtRp3801
(dp3802
g74
(dp3803
g101
g102
ssg83
g3793
sg76
(lp3804
S':'
asbag69
(g90
g71
NtRp3805
(dp3806
g74
(dp3807
sg83
g3793
sg76
(lp3808
g69
(g70
g71
NtRp3809
(dp3810
g74
(dp3811
g82
I3
ssg83
g3805
sg76
(lp3812
S'/'
asbasbasbag69
(g85
g71
NtRp3813
(dp3814
g74
(dp3815
sg83
g3689
sg76
(lp3816
g69
(g90
g71
NtRp3817
(dp3818
g74
(dp3819
g94
g95
ssg83
g3813
sg76
(lp3820
g409
asbag69
(g90
g71
NtRp3821
(dp3822
g74
(dp3823
g101
g102
ssg83
g3813
sg76
(lp3824
S':'
asbag69
(g90
g71
NtRp3825
(dp3826
g74
(dp3827
sg83
g3813
sg76
(lp3828
g69
(g70
g71
NtRp3829
(dp3830
g74
(dp3831
g82
I3
ssg83
g3825
sg76
(lp3832
S''
asbasbasbag69
(g85
g71
NtRp3833
(dp3834
g74
(dp3835
sg83
g3689
sg76
(lp3836
g69
(g90
g71
NtRp3837
(dp3838
g74
(dp3839
g94
g95
ssg83
g3833
sg76
(lp3840
g430
asbag69
(g90
g71
NtRp3841
(dp3842
g74
(dp3843
g101
g102
ssg83
g3833
sg76
(lp3844
S':'
asbag69
(g90
g71
NtRp3845
(dp3846
g74
(dp3847
sg83
g3833
sg76
(lp3848
g69
(g70
g71
NtRp3849
(dp3850
g74
(dp3851
g82
I3
ssg83
g3845
sg76
(lp3852
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp3853
(dp3854
g74
(dp3855
sg83
g3619
sg76
(lp3856
g69
(g90
g71
NtRp3857
(dp3858
g74
(dp3859
g94
g95
ssg83
g3853
sg76
(lp3860
S'delimiters'
p3861
asbag69
(g90
g71
NtRp3862
(dp3863
g74
(dp3864
g101
g102
ssg83
g3853
sg76
(lp3865
S':'
asbag69
(g90
g71
NtRp3866
(dp3867
g74
(dp3868
sg83
g3853
sg76
(lp3869
g69
(g70
g71
NtRp3870
(dp3871
g74
(dp3872
g82
I5
ssg83
g3866
sg76
(lp3873
g69
(g78
g71
NtRp3874
(dp3875
g74
(dp3876
g82
I4
ssg83
Nsg76
(lp3877
g69
(g85
g71
NtRp3878
(dp3879
g74
(dp3880
sg83
g3874
sg76
(lp3881
g69
(g90
g71
NtRp3882
(dp3883
g74
(dp3884
sg83
g3878
sg76
(lp3885
g69
(g70
g71
NtRp3886
(dp3887
g74
(dp3888
g82
I4
ssg83
g3882
sg76
(lp3889
S'{{'
p3890
asbasbasbag69
(g85
g71
NtRp3891
(dp3892
g74
(dp3893
sg83
g3874
sg76
(lp3894
g69
(g90
g71
NtRp3895
(dp3896
g74
(dp3897
sg83
g3891
sg76
(lp3898
g69
(g70
g71
NtRp3899
(dp3900
g74
(dp3901
g82
I4
ssg83
g3895
sg76
(lp3902
S'}}'
p3903
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3904
(dp3905
g74
(dp3906
sg83
g3619
sg76
(lp3907
g69
(g90
g71
NtRp3908
(dp3909
g74
(dp3910
g94
g95
ssg83
g3904
sg76
(lp3911
S'files'
p3912
asbag69
(g90
g71
NtRp3913
(dp3914
g74
(dp3915
g101
g102
ssg83
g3904
sg76
(lp3916
S':'
asbag69
(g90
g71
NtRp3917
(dp3918
g74
(dp3919
sg83
g3904
sg76
(lp3920
g69
(g70
g71
NtRp3921
(dp3922
g74
(dp3923
g82
I5
ssg83
g3917
sg76
(lp3924
g69
(g78
g71
NtRp3925
(dp3926
g74
(dp3927
g82
I4
ssg83
Nsg76
(lp3928
sbasbasbasbag69
(g85
g71
NtRp3929
(dp3930
g74
(dp3931
sg83
g3619
sg76
(lp3932
g69
(g90
g71
NtRp3933
(dp3934
g74
(dp3935
g94
g95
ssg83
g3929
sg76
(lp3936
S'flash'
p3937
asbag69
(g90
g71
NtRp3938
(dp3939
g74
(dp3940
g101
g102
ssg83
g3929
sg76
(lp3941
S':'
asbag69
(g90
g71
NtRp3942
(dp3943
g74
(dp3944
sg83
g3929
sg76
(lp3945
g69
(g70
g71
NtRp3946
(dp3947
g74
(dp3948
g82
I5
ssg83
g3942
sg76
(lp3949
S''
asbasbasbag69
(g85
g71
NtRp3950
(dp3951
g74
(dp3952
sg83
g3619
sg76
(lp3953
g69
(g90
g71
NtRp3954
(dp3955
g74
(dp3956
g94
g95
ssg83
g3950
sg76
(lp3957
S'generic_patterns'
p3958
asbag69
(g90
g71
NtRp3959
(dp3960
g74
(dp3961
g101
g102
ssg83
g3950
sg76
(lp3962
S':'
asbag69
(g90
g71
NtRp3963
(dp3964
g74
(dp3965
sg83
g3950
sg76
(lp3966
g69
(g70
g71
NtRp3967
(dp3968
g74
(dp3969
g82
I5
ssg83
g3963
sg76
(lp3970
g69
(g78
g71
NtRp3971
(dp3972
g74
(dp3973
g82
I4
ssg83
Nsg76
(lp3974
g69
(g85
g71
NtRp3975
(dp3976
g74
(dp3977
sg83
g3971
sg76
(lp3978
g69
(g90
g71
NtRp3979
(dp3980
g74
(dp3981
sg83
g3975
sg76
(lp3982
g69
(g70
g71
NtRp3983
(dp3984
g74
(dp3985
g82
I4
ssg83
g3979
sg76
(lp3986
S'*'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp3987
(dp3988
g74
(dp3989
sg83
g3619
sg76
(lp3990
g69
(g90
g71
NtRp3991
(dp3992
g74
(dp3993
g94
g95
ssg83
g3987
sg76
(lp3994
S'headers'
p3995
asbag69
(g90
g71
NtRp3996
(dp3997
g74
(dp3998
g101
g102
ssg83
g3987
sg76
(lp3999
S':'
asbag69
(g90
g71
NtRp4000
(dp4001
g74
(dp4002
sg83
g3987
sg76
(lp4003
g69
(g70
g71
NtRp4004
(dp4005
g74
(dp4006
g82
I5
ssg83
g4000
sg76
(lp4007
g69
(g78
g71
NtRp4008
(dp4009
g74
(dp4010
g82
I4
ssg83
Nsg76
(lp4011
g69
(g85
g71
NtRp4012
(dp4013
g74
(dp4014
sg83
g4008
sg76
(lp4015
g69
(g90
g71
NtRp4016
(dp4017
g74
(dp4018
g94
g95
ssg83
g4012
sg76
(lp4019
S'Cache-Control'
p4020
asbag69
(g90
g71
NtRp4021
(dp4022
g74
(dp4023
g101
g102
ssg83
g4012
sg76
(lp4024
S':'
asbag69
(g90
g71
NtRp4025
(dp4026
g74
(dp4027
sg83
g4012
sg76
(lp4028
g69
(g70
g71
NtRp4029
(dp4030
g74
(dp4031
g82
I4
ssg83
g4025
sg76
(lp4032
S'no-store, no-cache, must-revalidate, post-check=0, pre-check=0'
p4033
asbasbasbag69
(g85
g71
NtRp4034
(dp4035
g74
(dp4036
sg83
g4008
sg76
(lp4037
g69
(g90
g71
NtRp4038
(dp4039
g74
(dp4040
g94
g95
ssg83
g4034
sg76
(lp4041
S'Content-Type'
p4042
asbag69
(g90
g71
NtRp4043
(dp4044
g74
(dp4045
g101
g102
ssg83
g4034
sg76
(lp4046
S':'
asbag69
(g90
g71
NtRp4047
(dp4048
g74
(dp4049
sg83
g4034
sg76
(lp4050
g69
(g70
g71
NtRp4051
(dp4052
g74
(dp4053
g82
I4
ssg83
g4047
sg76
(lp4054
S'text/html; charset=utf-8'
p4055
asbasbasbag69
(g85
g71
NtRp4056
(dp4057
g74
(dp4058
sg83
g4008
sg76
(lp4059
g69
(g90
g71
NtRp4060
(dp4061
g74
(dp4062
g94
g95
ssg83
g4056
sg76
(lp4063
S'Expires'
p4064
asbag69
(g90
g71
NtRp4065
(dp4066
g74
(dp4067
g101
g102
ssg83
g4056
sg76
(lp4068
S':'
asbag69
(g90
g71
NtRp4069
(dp4070
g74
(dp4071
sg83
g4056
sg76
(lp4072
g69
(g70
g71
NtRp4073
(dp4074
g74
(dp4075
g82
I4
ssg83
g4069
sg76
(lp4076
S'Thu, 18 Apr 2013 18:10:51 GMT'
p4077
asbasbasbag69
(g85
g71
NtRp4078
(dp4079
g74
(dp4080
sg83
g4008
sg76
(lp4081
g69
(g90
g71
NtRp4082
(dp4083
g74
(dp4084
g94
g95
ssg83
g4078
sg76
(lp4085
S'Pragma'
p4086
asbag69
(g90
g71
NtRp4087
(dp4088
g74
(dp4089
g101
g102
ssg83
g4078
sg76
(lp4090
S':'
asbag69
(g90
g71
NtRp4091
(dp4092
g74
(dp4093
sg83
g4078
sg76
(lp4094
g69
(g70
g71
NtRp4095
(dp4096
g74
(dp4097
g82
I4
ssg83
g4091
sg76
(lp4098
S'no-cache'
p4099
asbasbasbag69
(g85
g71
NtRp4100
(dp4101
g74
(dp4102
sg83
g4008
sg76
(lp4103
g69
(g90
g71
NtRp4104
(dp4105
g74
(dp4106
g94
g95
ssg83
g4100
sg76
(lp4107
S'X-Powered-By'
p4108
asbag69
(g90
g71
NtRp4109
(dp4110
g74
(dp4111
g101
g102
ssg83
g4100
sg76
(lp4112
S':'
asbag69
(g90
g71
NtRp4113
(dp4114
g74
(dp4115
sg83
g4100
sg76
(lp4116
g69
(g70
g71
NtRp4117
(dp4118
g74
(dp4119
g82
I4
ssg83
g4113
sg76
(lp4120
S'web2py'
p4121
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4122
(dp4123
g74
(dp4124
sg83
g3619
sg76
(lp4125
g69
(g90
g71
NtRp4126
(dp4127
g74
(dp4128
g94
g95
ssg83
g4122
sg76
(lp4129
S'menu'
p4130
asbag69
(g90
g71
NtRp4131
(dp4132
g74
(dp4133
g101
g102
ssg83
g4122
sg76
(lp4134
S':'
asbag69
(g90
g71
NtRp4135
(dp4136
g74
(dp4137
sg83
g4122
sg76
(lp4138
g69
(g70
g71
NtRp4139
(dp4140
g74
(dp4141
g82
I5
ssg83
g4135
sg76
(lp4142
g69
(g78
g71
NtRp4143
(dp4144
g74
(dp4145
g82
I4
ssg83
Nsg76
(lp4146
g69
(g85
g71
NtRp4147
(dp4148
g74
(dp4149
sg83
g4143
sg76
(lp4150
g69
(g90
g71
NtRp4151
(dp4152
g74
(dp4153
sg83
g4147
sg76
(lp4154
g69
(g70
g71
NtRp4155
(dp4156
g74
(dp4157
g82
I4
ssg83
g4151
sg76
(lp4158
g69
(g78
g71
NtRp4159
(dp4160
g74
(dp4161
g82
I3
ssg83
Nsg76
(lp4162
g69
(g85
g71
NtRp4163
(dp4164
g74
(dp4165
sg83
g4159
sg76
(lp4166
g69
(g90
g71
NtRp4167
(dp4168
g74
(dp4169
sg83
g4163
sg76
(lp4170
g69
(g70
g71
NtRp4171
(dp4172
g74
(dp4173
g82
I3
ssg83
g4167
sg76
(lp4174
cgluon.languages
lazyT_unpickle
p4175
(S't\x04\x00\x00\x00Home'
tRp4176
asbasbasbag69
(g85
g71
NtRp4177
(dp4178
g74
(dp4179
sg83
g4159
sg76
(lp4180
g69
(g90
g71
NtRp4181
(dp4182
g74
(dp4183
sg83
g4177
sg76
(lp4184
g69
(g70
g71
NtRp4185
(dp4186
g74
(dp4187
g82
I3
ssg83
g4181
sg76
(lp4188
g112
asbasbasbag69
(g85
g71
NtRp4189
(dp4190
g74
(dp4191
sg83
g4159
sg76
(lp4192
g69
(g90
g71
NtRp4193
(dp4194
g74
(dp4195
sg83
g4189
sg76
(lp4196
g69
(g70
g71
NtRp4197
(dp4198
g74
(dp4199
g82
I3
ssg83
g4193
sg76
(lp4200
S'/SeniorProject/default/index'
p4201
asbasbasbag69
(g85
g71
NtRp4202
(dp4203
g74
(dp4204
sg83
g4159
sg76
(lp4205
g69
(g90
g71
NtRp4206
(dp4207
g74
(dp4208
sg83
g4202
sg76
(lp4209
g69
(g70
g71
NtRp4210
(dp4211
g74
(dp4212
g82
I3
ssg83
g4206
sg76
(lp4213
g69
(g78
g71
NtRp4214
(dp4215
g74
(dp4216
g82
I2
ssg83
Nsg76
(lp4217
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4218
(dp4219
g74
(dp4220
sg83
g4143
sg76
(lp4221
g69
(g90
g71
NtRp4222
(dp4223
g74
(dp4224
sg83
g4218
sg76
(lp4225
g69
(g70
g71
NtRp4226
(dp4227
g74
(dp4228
g82
I4
ssg83
g4222
sg76
(lp4229
g69
(g78
g71
NtRp4230
(dp4231
g74
(dp4232
g82
I3
ssg83
Nsg76
(lp4233
g69
(g85
g71
NtRp4234
(dp4235
g74
(dp4236
sg83
g4230
sg76
(lp4237
g69
(g90
g71
NtRp4238
(dp4239
g74
(dp4240
sg83
g4234
sg76
(lp4241
g69
(g70
g71
NtRp4242
(dp4243
g74
(dp4244
g82
I3
ssg83
g4238
sg76
(lp4245
g69
(cgluon.html
SPAN
p4246
g71
NtRp4247
(dp4248
g74
(dp4249
g94
S'color:yellow'
p4250
ssg83
Nsg76
(lp4251
g4121
asbasbasbasbag69
(g85
g71
NtRp4252
(dp4253
g74
(dp4254
sg83
g4230
sg76
(lp4255
g69
(g90
g71
NtRp4256
(dp4257
g74
(dp4258
sg83
g4252
sg76
(lp4259
g69
(g70
g71
NtRp4260
(dp4261
g74
(dp4262
g82
I3
ssg83
g4256
sg76
(lp4263
g112
asbasbasbag69
(g85
g71
NtRp4264
(dp4265
g74
(dp4266
sg83
g4230
sg76
(lp4267
g69
(g90
g71
NtRp4268
(dp4269
g74
(dp4270
sg83
g4264
sg76
(lp4271
g69
(g70
g71
NtRp4272
(dp4273
g74
(dp4274
g82
I3
ssg83
g4268
sg76
(lp4275
S'None'
p4276
asbasbasbag69
(g85
g71
NtRp4277
(dp4278
g74
(dp4279
sg83
g4230
sg76
(lp4280
g69
(g90
g71
NtRp4281
(dp4282
g74
(dp4283
sg83
g4277
sg76
(lp4284
g69
(g70
g71
NtRp4285
(dp4286
g74
(dp4287
g82
I3
ssg83
g4281
sg76
(lp4288
g69
(g78
g71
NtRp4289
(dp4290
g74
(dp4291
g82
I2
ssg83
Nsg76
(lp4292
g69
(g85
g71
NtRp4293
(dp4294
g74
(dp4295
sg83
g4289
sg76
(lp4296
g69
(g90
g71
NtRp4297
(dp4298
g74
(dp4299
sg83
g4293
sg76
(lp4300
g69
(g70
g71
NtRp4301
(dp4302
g74
(dp4303
g82
I2
ssg83
g4297
sg76
(lp4304
g69
(g78
g71
NtRp4305
(dp4306
g74
(dp4307
g82
I1
ssg83
Nsg76
(lp4308
g69
(g85
g71
NtRp4309
(dp4310
g74
(dp4311
sg83
g4305
sg76
(lp4312
g69
(g90
g71
NtRp4313
(dp4314
g74
(dp4315
sg83
g4309
sg76
(lp4316
g69
(g70
g71
NtRp4317
(dp4318
g74
(dp4319
g82
I1
ssg83
g4313
sg76
(lp4320
g4175
(S's\x08\x00\x00\x00My Sites'
tRp4321
asbasbasbag69
(g85
g71
NtRp4322
(dp4323
g74
(dp4324
sg83
g4305
sg76
(lp4325
g69
(g90
g71
NtRp4326
(dp4327
g74
(dp4328
sg83
g4322
sg76
(lp4329
g69
(g70
g71
NtRp4330
(dp4331
g74
(dp4332
g82
I1
ssg83
g4326
sg76
(lp4333
I00
asbasbasbag69
(g85
g71
NtRp4334
(dp4335
g74
(dp4336
sg83
g4305
sg76
(lp4337
g69
(g90
g71
NtRp4338
(dp4339
g74
(dp4340
sg83
g4334
sg76
(lp4341
g69
(g70
g71
NtRp4342
(dp4343
g74
(dp4344
g82
I1
ssg83
g4338
sg76
(lp4345
S'/admin/default/site'
p4346
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4347
(dp4348
g74
(dp4349
sg83
g4289
sg76
(lp4350
g69
(g90
g71
NtRp4351
(dp4352
g74
(dp4353
sg83
g4347
sg76
(lp4354
g69
(g70
g71
NtRp4355
(dp4356
g74
(dp4357
g82
I2
ssg83
g4351
sg76
(lp4358
g69
(g78
g71
NtRp4359
(dp4360
g74
(dp4361
g82
I1
ssg83
Nsg76
(lp4362
g69
(g85
g71
NtRp4363
(dp4364
g74
(dp4365
sg83
g4359
sg76
(lp4366
g69
(g90
g71
NtRp4367
(dp4368
g74
(dp4369
sg83
g4363
sg76
(lp4370
g69
(g70
g71
NtRp4371
(dp4372
g74
(dp4373
g82
I1
ssg83
g4367
sg76
(lp4374
g4175
(S's\x08\x00\x00\x00This App'
tRp4375
asbasbasbag69
(g85
g71
NtRp4376
(dp4377
g74
(dp4378
sg83
g4359
sg76
(lp4379
g69
(g90
g71
NtRp4380
(dp4381
g74
(dp4382
sg83
g4376
sg76
(lp4383
g69
(g70
g71
NtRp4384
(dp4385
g74
(dp4386
g82
I1
ssg83
g4380
sg76
(lp4387
I00
asbasbasbag69
(g85
g71
NtRp4388
(dp4389
g74
(dp4390
sg83
g4359
sg76
(lp4391
g69
(g90
g71
NtRp4392
(dp4393
g74
(dp4394
sg83
g4388
sg76
(lp4395
g69
(g70
g71
NtRp4396
(dp4397
g74
(dp4398
g82
I1
ssg83
g4392
sg76
(lp4399
S'/admin/default/design/SeniorProject'
p4400
asbasbasbag69
(g85
g71
NtRp4401
(dp4402
g74
(dp4403
sg83
g4359
sg76
(lp4404
g69
(g90
g71
NtRp4405
(dp4406
g74
(dp4407
sg83
g4401
sg76
(lp4408
g69
(g70
g71
NtRp4409
(dp4410
g74
(dp4411
g82
I1
ssg83
g4405
sg76
(lp4412
(lp4413
(g4175
(S't\n\x00\x00\x00Controller'
tRp4414
I00
S'/admin/default/edit/SeniorProject/controllers/default.py'
tp4415
a(g4175
(S't\x04\x00\x00\x00View'
tRp4416
I00
S'/admin/default/edit/SeniorProject/views/default/showform.html'
tp4417
a(g4175
(S't\x06\x00\x00\x00Layout'
tRp4418
I00
S'/admin/default/edit/SeniorProject/views/layout.html'
tp4419
a(g4175
(S't\n\x00\x00\x00Stylesheet'
tRp4420
I00
S'/admin/default/edit/SeniorProject/static/css/web2py.css'
tp4421
a(g4175
(S's\x08\x00\x00\x00DB Model'
tRp4422
I00
S'/admin/default/edit/SeniorProject/models/db.py'
tp4423
a(g4175
(S's\n\x00\x00\x00Menu Model'
tRp4424
I00
S'/admin/default/edit/SeniorProject/models/menu.py'
tp4425
a(g4175
(S't\x08\x00\x00\x00Database'
tRp4426
I00
S'/SeniorProject/appadmin/index'
tp4427
a(g4175
(S't\x06\x00\x00\x00Errors'
tRp4428
I00
S'/admin/default/errors/SeniorProject'
tp4429
a(g4175
(S't\x05\x00\x00\x00About'
tRp4430
I00
S'/admin/default/about/SeniorProject'
tp4431
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4432
(dp4433
g74
(dp4434
sg83
g4289
sg76
(lp4435
g69
(g90
g71
NtRp4436
(dp4437
g74
(dp4438
sg83
g4432
sg76
(lp4439
g69
(g70
g71
NtRp4440
(dp4441
g74
(dp4442
g82
I2
ssg83
g4436
sg76
(lp4443
g69
(g78
g71
NtRp4444
(dp4445
g74
(dp4446
g82
I1
ssg83
Nsg76
(lp4447
g69
(g85
g71
NtRp4448
(dp4449
g74
(dp4450
sg83
g4444
sg76
(lp4451
g69
(g90
g71
NtRp4452
(dp4453
g74
(dp4454
sg83
g4448
sg76
(lp4455
g69
(g70
g71
NtRp4456
(dp4457
g74
(dp4458
g82
I1
ssg83
g4452
sg76
(lp4459
S'web2py.com'
p4460
asbasbasbag69
(g85
g71
NtRp4461
(dp4462
g74
(dp4463
sg83
g4444
sg76
(lp4464
g69
(g90
g71
NtRp4465
(dp4466
g74
(dp4467
sg83
g4461
sg76
(lp4468
g69
(g70
g71
NtRp4469
(dp4470
g74
(dp4471
g82
I1
ssg83
g4465
sg76
(lp4472
I00
asbasbasbag69
(g85
g71
NtRp4473
(dp4474
g74
(dp4475
sg83
g4444
sg76
(lp4476
g69
(g90
g71
NtRp4477
(dp4478
g74
(dp4479
sg83
g4473
sg76
(lp4480
g69
(g70
g71
NtRp4481
(dp4482
g74
(dp4483
g82
I1
ssg83
g4477
sg76
(lp4484
S'http://www.web2py.com'
p4485
asbasbasbag69
(g85
g71
NtRp4486
(dp4487
g74
(dp4488
sg83
g4444
sg76
(lp4489
g69
(g90
g71
NtRp4490
(dp4491
g74
(dp4492
sg83
g4486
sg76
(lp4493
g69
(g70
g71
NtRp4494
(dp4495
g74
(dp4496
g82
I1
ssg83
g4490
sg76
(lp4497
(lp4498
(g4175
(S't\x08\x00\x00\x00Download'
tRp4499
I00
S'http://www.web2py.com/examples/default/download'
p4500
tp4501
a(g4175
(S't\x07\x00\x00\x00Support'
tRp4502
I00
S'http://www.web2py.com/examples/default/support'
p4503
tp4504
a(g4175
(S't\x04\x00\x00\x00Demo'
tRp4505
I00
S'http://web2py.com/demo_admin'
p4506
tp4507
a(g4175
(S's\x0e\x00\x00\x00Quick Examples'
tRp4508
I00
S'http://web2py.com/examples/default/examples'
p4509
tp4510
a(g4175
(S't\x03\x00\x00\x00FAQ'
tRp4511
I00
S'http://web2py.com/AlterEgo'
p4512
tp4513
a(g4175
(S't\x06\x00\x00\x00Videos'
tRp4514
I00
S'http://www.web2py.com/examples/default/videos/'
p4515
tp4516
a(g4175
(S's\x11\x00\x00\x00Free Applications'
tRp4517
I00
S'http://web2py.com/appliances'
p4518
tp4519
a(g4175
(S't\x07\x00\x00\x00Plugins'
tRp4520
I00
S'http://web2py.com/plugins'
p4521
tp4522
a(g4175
(S't\x07\x00\x00\x00Layouts'
tRp4523
I00
S'http://web2py.com/layouts'
p4524
tp4525
a(g4175
(S't\x07\x00\x00\x00Recipes'
tRp4526
I00
S'http://web2pyslices.com/'
p4527
tp4528
a(g4175
(S't\x08\x00\x00\x00Semantic'
tRp4529
I00
S'http://web2py.com/semantic'
p4530
tp4531
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4532
(dp4533
g74
(dp4534
sg83
g4289
sg76
(lp4535
g69
(g90
g71
NtRp4536
(dp4537
g74
(dp4538
sg83
g4532
sg76
(lp4539
g69
(g70
g71
NtRp4540
(dp4541
g74
(dp4542
g82
I2
ssg83
g4536
sg76
(lp4543
g69
(g78
g71
NtRp4544
(dp4545
g74
(dp4546
g82
I1
ssg83
Nsg76
(lp4547
g69
(g85
g71
NtRp4548
(dp4549
g74
(dp4550
sg83
g4544
sg76
(lp4551
g69
(g90
g71
NtRp4552
(dp4553
g74
(dp4554
sg83
g4548
sg76
(lp4555
g69
(g70
g71
NtRp4556
(dp4557
g74
(dp4558
g82
I1
ssg83
g4552
sg76
(lp4559
g4175
(S't\r\x00\x00\x00Documentation'
tRp4560
asbasbasbag69
(g85
g71
NtRp4561
(dp4562
g74
(dp4563
sg83
g4544
sg76
(lp4564
g69
(g90
g71
NtRp4565
(dp4566
g74
(dp4567
sg83
g4561
sg76
(lp4568
g69
(g70
g71
NtRp4569
(dp4570
g74
(dp4571
g82
I1
ssg83
g4565
sg76
(lp4572
I00
asbasbasbag69
(g85
g71
NtRp4573
(dp4574
g74
(dp4575
sg83
g4544
sg76
(lp4576
g69
(g90
g71
NtRp4577
(dp4578
g74
(dp4579
sg83
g4573
sg76
(lp4580
g69
(g70
g71
NtRp4581
(dp4582
g74
(dp4583
g82
I1
ssg83
g4577
sg76
(lp4584
S'http://www.web2py.com/book'
p4585
asbasbasbag69
(g85
g71
NtRp4586
(dp4587
g74
(dp4588
sg83
g4544
sg76
(lp4589
g69
(g90
g71
NtRp4590
(dp4591
g74
(dp4592
sg83
g4586
sg76
(lp4593
g69
(g70
g71
NtRp4594
(dp4595
g74
(dp4596
g82
I1
ssg83
g4590
sg76
(lp4597
(lp4598
(g4175
(S't\x07\x00\x00\x00Preface'
tRp4599
I00
S'http://www.web2py.com/book/default/chapter/00'
p4600
tp4601
a(g4175
(S't\x0c\x00\x00\x00Introduction'
tRp4602
I00
S'http://www.web2py.com/book/default/chapter/01'
p4603
tp4604
a(g4175
(S't\x06\x00\x00\x00Python'
tRp4605
I00
S'http://www.web2py.com/book/default/chapter/02'
p4606
tp4607
a(g4175
(S't\x08\x00\x00\x00Overview'
tRp4608
I00
S'http://www.web2py.com/book/default/chapter/03'
p4609
tp4610
a(g4175
(S's\x08\x00\x00\x00The Core'
tRp4611
I00
S'http://www.web2py.com/book/default/chapter/04'
p4612
tp4613
a(g4175
(S's\t\x00\x00\x00The Views'
tRp4614
I00
S'http://www.web2py.com/book/default/chapter/05'
p4615
tp4616
a(g4175
(S't\x08\x00\x00\x00Database'
tRp4617
I00
S'http://www.web2py.com/book/default/chapter/06'
p4618
tp4619
a(g4175
(S's\x14\x00\x00\x00Forms and Validators'
tRp4620
I00
S'http://www.web2py.com/book/default/chapter/07'
p4621
tp4622
a(g4175
(S's\r\x00\x00\x00Email and SMS'
tRp4623
I00
S'http://www.web2py.com/book/default/chapter/08'
p4624
tp4625
a(g4175
(S's\x0e\x00\x00\x00Access Control'
tRp4626
I00
S'http://www.web2py.com/book/default/chapter/09'
p4627
tp4628
a(g4175
(S't\x08\x00\x00\x00Services'
tRp4629
I00
S'http://www.web2py.com/book/default/chapter/10'
p4630
tp4631
a(g4175
(S's\x0c\x00\x00\x00Ajax Recipes'
tRp4632
I00
S'http://www.web2py.com/book/default/chapter/11'
p4633
tp4634
a(g4175
(S's\x16\x00\x00\x00Components and Plugins'
tRp4635
I00
S'http://www.web2py.com/book/default/chapter/12'
p4636
tp4637
a(g4175
(S's\x12\x00\x00\x00Deployment Recipes'
tRp4638
I00
S'http://www.web2py.com/book/default/chapter/13'
p4639
tp4640
a(g4175
(S's\r\x00\x00\x00Other Recipes'
tRp4641
I00
S'http://www.web2py.com/book/default/chapter/14'
p4642
tp4643
a(g4175
(S's\r\x00\x00\x00Buy this book'
tRp4644
I00
S'http://stores.lulu.com/web2py'
p4645
tp4646
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4647
(dp4648
g74
(dp4649
sg83
g4289
sg76
(lp4650
g69
(g90
g71
NtRp4651
(dp4652
g74
(dp4653
sg83
g4647
sg76
(lp4654
g69
(g70
g71
NtRp4655
(dp4656
g74
(dp4657
g82
I2
ssg83
g4651
sg76
(lp4658
g69
(g78
g71
NtRp4659
(dp4660
g74
(dp4661
g82
I1
ssg83
Nsg76
(lp4662
g69
(g85
g71
NtRp4663
(dp4664
g74
(dp4665
sg83
g4659
sg76
(lp4666
g69
(g90
g71
NtRp4667
(dp4668
g74
(dp4669
sg83
g4663
sg76
(lp4670
g69
(g70
g71
NtRp4671
(dp4672
g74
(dp4673
g82
I1
ssg83
g4667
sg76
(lp4674
g4175
(S't\t\x00\x00\x00Community'
tRp4675
asbasbasbag69
(g85
g71
NtRp4676
(dp4677
g74
(dp4678
sg83
g4659
sg76
(lp4679
g69
(g90
g71
NtRp4680
(dp4681
g74
(dp4682
sg83
g4676
sg76
(lp4683
g69
(g70
g71
NtRp4684
(dp4685
g74
(dp4686
g82
I1
ssg83
g4680
sg76
(lp4687
I00
asbasbasbag69
(g85
g71
NtRp4688
(dp4689
g74
(dp4690
sg83
g4659
sg76
(lp4691
g69
(g90
g71
NtRp4692
(dp4693
g74
(dp4694
sg83
g4688
sg76
(lp4695
g69
(g70
g71
NtRp4696
(dp4697
g74
(dp4698
g82
I1
ssg83
g4692
sg76
(lp4699
Nasbasbasbag69
(g85
g71
NtRp4700
(dp4701
g74
(dp4702
sg83
g4659
sg76
(lp4703
g69
(g90
g71
NtRp4704
(dp4705
g74
(dp4706
sg83
g4700
sg76
(lp4707
g69
(g70
g71
NtRp4708
(dp4709
g74
(dp4710
g82
I1
ssg83
g4704
sg76
(lp4711
(lp4712
(g4175
(S't\x06\x00\x00\x00Groups'
tRp4713
I00
S'http://www.web2py.com/examples/default/usergroups'
p4714
tp4715
a(g4175
(S't\x07\x00\x00\x00Twitter'
tRp4716
I00
S'http://twitter.com/web2py'
p4717
tp4718
a(g4175
(S's\t\x00\x00\x00Live Chat'
tRp4719
I00
S'http://webchat.freenode.net/?channels=web2py'
p4720
tp4721
aasbasbasbasbasbasbasbag69
(g85
g71
NtRp4722
(dp4723
g74
(dp4724
sg83
g4289
sg76
(lp4725
g69
(g90
g71
NtRp4726
(dp4727
g74
(dp4728
sg83
g4722
sg76
(lp4729
g69
(g70
g71
NtRp4730
(dp4731
g74
(dp4732
g82
I2
ssg83
g4726
sg76
(lp4733
g69
(g78
g71
NtRp4734
(dp4735
g74
(dp4736
g82
I1
ssg83
Nsg76
(lp4737
g69
(g85
g71
NtRp4738
(dp4739
g74
(dp4740
sg83
g4734
sg76
(lp4741
g69
(g90
g71
NtRp4742
(dp4743
g74
(dp4744
sg83
g4738
sg76
(lp4745
g69
(g70
g71
NtRp4746
(dp4747
g74
(dp4748
g82
I1
ssg83
g4742
sg76
(lp4749
g4175
(S't\x07\x00\x00\x00Plugins'
tRp4750
asbasbasbag69
(g85
g71
NtRp4751
(dp4752
g74
(dp4753
sg83
g4734
sg76
(lp4754
g69
(g90
g71
NtRp4755
(dp4756
g74
(dp4757
sg83
g4751
sg76
(lp4758
g69
(g70
g71
NtRp4759
(dp4760
g74
(dp4761
g82
I1
ssg83
g4755
sg76
(lp4762
I00
asbasbasbag69
(g85
g71
NtRp4763
(dp4764
g74
(dp4765
sg83
g4734
sg76
(lp4766
g69
(g90
g71
NtRp4767
(dp4768
g74
(dp4769
sg83
g4763
sg76
(lp4770
g69
(g70
g71
NtRp4771
(dp4772
g74
(dp4773
g82
I1
ssg83
g4767
sg76
(lp4774
Nasbasbasbag69
(g85
g71
NtRp4775
(dp4776
g74
(dp4777
sg83
g4734
sg76
(lp4778
g69
(g90
g71
NtRp4779
(dp4780
g74
(dp4781
sg83
g4775
sg76
(lp4782
g69
(g70
g71
NtRp4783
(dp4784
g74
(dp4785
g82
I1
ssg83
g4779
sg76
(lp4786
(lp4787
(S'plugin_wiki'
p4788
I00
S'http://web2py.com/examples/default/download'
p4789
tp4790
a(g4175
(S's\r\x00\x00\x00Other Plugins'
tRp4791
I00
g4521
tp4792
a(g4175
(S's\x0e\x00\x00\x00Layout Plugins'
tRp4793
I00
g4524
tp4794
aasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4795
(dp4796
g74
(dp4797
sg83
g3619
sg76
(lp4798
g69
(g90
g71
NtRp4799
(dp4800
g74
(dp4801
g94
g95
ssg83
g4795
sg76
(lp4802
S'meta'
p4803
asbag69
(g90
g71
NtRp4804
(dp4805
g74
(dp4806
g101
g102
ssg83
g4795
sg76
(lp4807
S':'
asbag69
(g90
g71
NtRp4808
(dp4809
g74
(dp4810
sg83
g4795
sg76
(lp4811
g69
(g70
g71
NtRp4812
(dp4813
g74
(dp4814
g82
I5
ssg83
g4808
sg76
(lp4815
g69
(g78
g71
NtRp4816
(dp4817
g74
(dp4818
g82
I4
ssg83
Nsg76
(lp4819
g69
(g85
g71
NtRp4820
(dp4821
g74
(dp4822
sg83
g4816
sg76
(lp4823
g69
(g90
g71
NtRp4824
(dp4825
g74
(dp4826
g94
g95
ssg83
g4820
sg76
(lp4827
S'author'
p4828
asbag69
(g90
g71
NtRp4829
(dp4830
g74
(dp4831
g101
g102
ssg83
g4820
sg76
(lp4832
S':'
asbag69
(g90
g71
NtRp4833
(dp4834
g74
(dp4835
sg83
g4820
sg76
(lp4836
g69
(g70
g71
NtRp4837
(dp4838
g74
(dp4839
g82
I4
ssg83
g4833
sg76
(lp4840
S'Your Name <you@example.com>'
p4841
asbasbasbag69
(g85
g71
NtRp4842
(dp4843
g74
(dp4844
sg83
g4816
sg76
(lp4845
g69
(g90
g71
NtRp4846
(dp4847
g74
(dp4848
g94
g95
ssg83
g4842
sg76
(lp4849
S'copyright'
p4850
asbag69
(g90
g71
NtRp4851
(dp4852
g74
(dp4853
g101
g102
ssg83
g4842
sg76
(lp4854
S':'
asbag69
(g90
g71
NtRp4855
(dp4856
g74
(dp4857
sg83
g4842
sg76
(lp4858
g69
(g70
g71
NtRp4859
(dp4860
g74
(dp4861
g82
I4
ssg83
g4855
sg76
(lp4862
S'Copyright 2011'
p4863
asbasbasbag69
(g85
g71
NtRp4864
(dp4865
g74
(dp4866
sg83
g4816
sg76
(lp4867
g69
(g90
g71
NtRp4868
(dp4869
g74
(dp4870
g94
g95
ssg83
g4864
sg76
(lp4871
S'description'
p4872
asbag69
(g90
g71
NtRp4873
(dp4874
g74
(dp4875
g101
g102
ssg83
g4864
sg76
(lp4876
S':'
asbag69
(g90
g71
NtRp4877
(dp4878
g74
(dp4879
sg83
g4864
sg76
(lp4880
g69
(g70
g71
NtRp4881
(dp4882
g74
(dp4883
g82
I4
ssg83
g4877
sg76
(lp4884
S'a cool new app'
p4885
asbasbasbag69
(g85
g71
NtRp4886
(dp4887
g74
(dp4888
sg83
g4816
sg76
(lp4889
g69
(g90
g71
NtRp4890
(dp4891
g74
(dp4892
g94
g95
ssg83
g4886
sg76
(lp4893
S'generator'
p4894
asbag69
(g90
g71
NtRp4895
(dp4896
g74
(dp4897
g101
g102
ssg83
g4886
sg76
(lp4898
S':'
asbag69
(g90
g71
NtRp4899
(dp4900
g74
(dp4901
sg83
g4886
sg76
(lp4902
g69
(g70
g71
NtRp4903
(dp4904
g74
(dp4905
g82
I4
ssg83
g4899
sg76
(lp4906
S'Web2py Web Framework'
p4907
asbasbasbag69
(g85
g71
NtRp4908
(dp4909
g74
(dp4910
sg83
g4816
sg76
(lp4911
g69
(g90
g71
NtRp4912
(dp4913
g74
(dp4914
g94
g95
ssg83
g4908
sg76
(lp4915
S'keywords'
p4916
asbag69
(g90
g71
NtRp4917
(dp4918
g74
(dp4919
g101
g102
ssg83
g4908
sg76
(lp4920
S':'
asbag69
(g90
g71
NtRp4921
(dp4922
g74
(dp4923
sg83
g4908
sg76
(lp4924
g69
(g70
g71
NtRp4925
(dp4926
g74
(dp4927
g82
I4
ssg83
g4921
sg76
(lp4928
S'web2py, python, framework'
p4929
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4930
(dp4931
g74
(dp4932
sg83
g3619
sg76
(lp4933
g69
(g90
g71
NtRp4934
(dp4935
g74
(dp4936
g94
g95
ssg83
g4930
sg76
(lp4937
S'postprocessing'
p4938
asbag69
(g90
g71
NtRp4939
(dp4940
g74
(dp4941
g101
g102
ssg83
g4930
sg76
(lp4942
S':'
asbag69
(g90
g71
NtRp4943
(dp4944
g74
(dp4945
sg83
g4930
sg76
(lp4946
g69
(g70
g71
NtRp4947
(dp4948
g74
(dp4949
g82
I5
ssg83
g4943
sg76
(lp4950
g69
(g78
g71
NtRp4951
(dp4952
g74
(dp4953
g82
I4
ssg83
Nsg76
(lp4954
sbasbasbasbag69
(g85
g71
NtRp4955
(dp4956
g74
(dp4957
sg83
g3619
sg76
(lp4958
g69
(g90
g71
NtRp4959
(dp4960
g74
(dp4961
g94
g95
ssg83
g4955
sg76
(lp4962
S'session_file'
p4963
asbag69
(g90
g71
NtRp4964
(dp4965
g74
(dp4966
g101
g102
ssg83
g4955
sg76
(lp4967
S':'
asbag69
(g90
g71
NtRp4968
(dp4969
g74
(dp4970
sg83
g4955
sg76
(lp4971
g69
(g70
g71
NtRp4972
(dp4973
g74
(dp4974
g82
I5
ssg83
g4968
sg76
(lp4975
S"<open file '/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b', mode 'rb+' at 0x10b375300>"
p4976
asbasbasbag69
(g85
g71
NtRp4977
(dp4978
g74
(dp4979
sg83
g3619
sg76
(lp4980
g69
(g90
g71
NtRp4981
(dp4982
g74
(dp4983
g94
g95
ssg83
g4977
sg76
(lp4984
S'session_filename'
p4985
asbag69
(g90
g71
NtRp4986
(dp4987
g74
(dp4988
g101
g102
ssg83
g4977
sg76
(lp4989
S':'
asbag69
(g90
g71
NtRp4990
(dp4991
g74
(dp4992
sg83
g4977
sg76
(lp4993
g69
(g70
g71
NtRp4994
(dp4995
g74
(dp4996
g82
I5
ssg83
g4990
sg76
(lp4997
S'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/sessions/127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p4998
asbasbasbag69
(g85
g71
NtRp4999
(dp5000
g74
(dp5001
sg83
g3619
sg76
(lp5002
g69
(g90
g71
NtRp5003
(dp5004
g74
(dp5005
g94
g95
ssg83
g4999
sg76
(lp5006
S'session_id'
p5007
asbag69
(g90
g71
NtRp5008
(dp5009
g74
(dp5010
g101
g102
ssg83
g4999
sg76
(lp5011
S':'
asbag69
(g90
g71
NtRp5012
(dp5013
g74
(dp5014
sg83
g4999
sg76
(lp5015
g69
(g70
g71
NtRp5016
(dp5017
g74
(dp5018
g82
I5
ssg83
g5012
sg76
(lp5019
S'127.0.0.1-bfae3cf7-324d-4fba-81a6-e00fd8a1cd5b'
p5020
asbasbasbag69
(g85
g71
NtRp5021
(dp5022
g74
(dp5023
sg83
g3619
sg76
(lp5024
g69
(g90
g71
NtRp5025
(dp5026
g74
(dp5027
g94
g95
ssg83
g5021
sg76
(lp5028
S'session_id_name'
p5029
asbag69
(g90
g71
NtRp5030
(dp5031
g74
(dp5032
g101
g102
ssg83
g5021
sg76
(lp5033
S':'
asbag69
(g90
g71
NtRp5034
(dp5035
g74
(dp5036
sg83
g5021
sg76
(lp5037
g69
(g70
g71
NtRp5038
(dp5039
g74
(dp5040
g82
I5
ssg83
g5034
sg76
(lp5041
g3676
asbasbasbag69
(g85
g71
NtRp5042
(dp5043
g74
(dp5044
sg83
g3619
sg76
(lp5045
g69
(g90
g71
NtRp5046
(dp5047
g74
(dp5048
g94
g95
ssg83
g5042
sg76
(lp5049
S'session_locked'
p5050
asbag69
(g90
g71
NtRp5051
(dp5052
g74
(dp5053
g101
g102
ssg83
g5042
sg76
(lp5054
S':'
asbag69
(g90
g71
NtRp5055
(dp5056
g74
(dp5057
sg83
g5042
sg76
(lp5058
g69
(g70
g71
NtRp5059
(dp5060
g74
(dp5061
g82
I5
ssg83
g5055
sg76
(lp5062
g1691
asbasbasbag69
(g85
g71
NtRp5063
(dp5064
g74
(dp5065
sg83
g3619
sg76
(lp5066
g69
(g90
g71
NtRp5067
(dp5068
g74
(dp5069
g94
g95
ssg83
g5063
sg76
(lp5070
S'session_new'
p5071
asbag69
(g90
g71
NtRp5072
(dp5073
g74
(dp5074
g101
g102
ssg83
g5063
sg76
(lp5075
S':'
asbag69
(g90
g71
NtRp5076
(dp5077
g74
(dp5078
sg83
g5063
sg76
(lp5079
g69
(g70
g71
NtRp5080
(dp5081
g74
(dp5082
g82
I5
ssg83
g5076
sg76
(lp5083
g112
asbasbasbag69
(g85
g71
NtRp5084
(dp5085
g74
(dp5086
sg83
g3619
sg76
(lp5087
g69
(g90
g71
NtRp5088
(dp5089
g74
(dp5090
g94
g95
ssg83
g5084
sg76
(lp5091
S'status'
p5092
asbag69
(g90
g71
NtRp5093
(dp5094
g74
(dp5095
g101
g102
ssg83
g5084
sg76
(lp5096
S':'
asbag69
(g90
g71
NtRp5097
(dp5098
g74
(dp5099
sg83
g5084
sg76
(lp5100
g69
(g70
g71
NtRp5101
(dp5102
g74
(dp5103
g82
I5
ssg83
g5097
sg76
(lp5104
S'200'
p5105
asbasbasbag69
(g85
g71
NtRp5106
(dp5107
g74
(dp5108
sg83
g3619
sg76
(lp5109
g69
(g90
g71
NtRp5110
(dp5111
g74
(dp5112
g94
g95
ssg83
g5106
sg76
(lp5113
S'subtitle'
p5114
asbag69
(g90
g71
NtRp5115
(dp5116
g74
(dp5117
g101
g102
ssg83
g5106
sg76
(lp5118
S':'
asbag69
(g90
g71
NtRp5119
(dp5120
g74
(dp5121
sg83
g5106
sg76
(lp5122
g69
(g70
g71
NtRp5123
(dp5124
g74
(dp5125
g82
I5
ssg83
g5119
sg76
(lp5126
g4175
(S's\r\x00\x00\x00customize me!'
tRp5127
asbasbasbag69
(g85
g71
NtRp5128
(dp5129
g74
(dp5130
sg83
g3619
sg76
(lp5131
g69
(g90
g71
NtRp5132
(dp5133
g74
(dp5134
g94
g95
ssg83
g5128
sg76
(lp5135
S'title'
p5136
asbag69
(g90
g71
NtRp5137
(dp5138
g74
(dp5139
g101
g102
ssg83
g5128
sg76
(lp5140
S':'
asbag69
(g90
g71
NtRp5141
(dp5142
g74
(dp5143
sg83
g5128
sg76
(lp5144
g69
(g70
g71
NtRp5145
(dp5146
g74
(dp5147
g82
I5
ssg83
g5141
sg76
(lp5148
S'Seniorproject'
p5149
asbasbasbag69
(g85
g71
NtRp5150
(dp5151
g74
(dp5152
sg83
g3619
sg76
(lp5153
g69
(g90
g71
NtRp5154
(dp5155
g74
(dp5156
g94
g95
ssg83
g5150
sg76
(lp5157
g2399
asbag69
(g90
g71
NtRp5158
(dp5159
g74
(dp5160
g101
g102
ssg83
g5150
sg76
(lp5161
S':'
asbag69
(g90
g71
NtRp5162
(dp5163
g74
(dp5164
sg83
g5150
sg76
(lp5165
g69
(g70
g71
NtRp5166
(dp5167
g74
(dp5168
g82
I5
ssg83
g5162
sg76
(lp5169
g2412
asbasbasbag69
(g85
g71
NtRp5170
(dp5171
g74
(dp5172
sg83
g3619
sg76
(lp5173
g69
(g90
g71
NtRp5174
(dp5175
g74
(dp5176
g94
g95
ssg83
g5170
sg76
(lp5177
S'view'
p5178
asbag69
(g90
g71
NtRp5179
(dp5180
g74
(dp5181
g101
g102
ssg83
g5170
sg76
(lp5182
S':'
asbag69
(g90
g71
NtRp5183
(dp5184
g74
(dp5185
sg83
g5170
sg76
(lp5186
g69
(g70
g71
NtRp5187
(dp5188
g74
(dp5189
g82
I5
ssg83
g5183
sg76
(lp5190
S'default/showform.html'
p5191
asbasbasbasbasbsS'locals'
p5192
(dp5193
g4
S"'/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py'"
p5194
sg6
S"'# -*- coding: utf-8 -*-\\n# this file is released ... html\\n\\nresponse._vars=response._caller(showform)\\n'"
p5195
sssS'traceback'
p5196
S'Traceback (most recent call last):\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 204, in restricted\n    ccode = compile2(code,layer)\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/gluon/restricted.py", line 189, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "/Users/hainna01/Desktop/SeniorProject/web2py/applications/SeniorProject/controllers/default.py", line 573\n    redirect(URL("default","showform" vars={"displayForm":request.vars.displayForm,"projectNum":projNum}))\n                                         ^\nSyntaxError: invalid syntax\n'
p5197
s.